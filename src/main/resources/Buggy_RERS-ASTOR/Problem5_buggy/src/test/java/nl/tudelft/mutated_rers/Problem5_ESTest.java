package nl.tudelft.mutated_rers;
/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 15 11:15:34 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import java.io.BufferedReader;
import java.io.IOException;

public class Problem5_ESTest {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(7, problem5_0.a463267856);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(189, problem5_0.a645550563);
      assertNotNull(problem5_0);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertNotNull(problem5_0);
      
      String string0 = "iE";
      problem5_0.a273097877 = "iE";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertNotNull(problem5_0);
      
      problem5_0.a538865847 = ">fnV2+:UufL\"c";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("6[Q");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertTrue(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertNotNull(problem5_0);
      
      problem5_0.a1318003364 = 720;
      problem5_0.a339428322 = 720;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("Problem5");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertTrue(problem5_0.cf);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(15, problem5_0.a1185559685);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(333, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(202, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(142, problem5_0.a518089629);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(262, problem5_0.a1507548554);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(169, problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(333, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(202, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(142, problem5_0.a518089629);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(262, problem5_0.a1507548554);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(12, problem5_0.a362703815);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(169, problem5_0.a1219723237);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertNotNull(problem5_0);
      
      problem5_0.a881797486 = "oU";
      problem5_0.a101744974 = "e";
      problem5_0.a1867715898 = "e";
      // // SystemInUtil.addInputLine("h");
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(10, problem5_1.a339428322);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(90, problem5_1.a754912052);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(9, problem5_1.a737138579);
      assertTrue(problem5_1.cf);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(7, problem5_1.a463267856);
      assertNotNull(problem5_1);
      
      problem5_1.a1135414112 = 241;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(189, problem5_0.a645550563);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iE");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(189, problem5_0.a645550563);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("pT1S %");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertNotNull(problem5_0);
      
      problem5_0.a836046917 = "TkM/";
      problem5_0.a1922234987 = 2873;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertTrue(problem5_0.cf);
      assertNotNull(problem5_0);
      
      problem5_0.a1922234987 = 943;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertNotNull(problem5_0);
      
      problem5_0.a723549884 = (-783);
      problem5_0.a1135414112 = 0;
      problem5_0.a1219723237 = 0;
      problem5_0.a518089629 = 0;
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(241, problem5_1.a281657923);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(189, problem5_1.a645550563);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(3, problem5_1.a1922234987);
      assertTrue(problem5_1.cf);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertNotNull(problem5_0);
      
      problem5_0.a463267856 = (-8966);
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-70), problem5_0.a15580097);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(222, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      
      problem5_0.calculateOutput("iA");
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-70), problem5_0.a15580097);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      
      problem5_0.calculateOutput("iA");
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-70), problem5_0.a15580097);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertNotNull(problem5_0);
      
      problem5_0.a1544481660 = 212;
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertTrue(problem5_1.cf);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(189, problem5_1.a645550563);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(9, problem5_1.a737138579);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(213, problem5_0.a723549884);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertNotNull(problem5_0);
      
      problem5_0.a1507548554 = 2333;
      problem5_0.a281657923 = 885;
      String string0 = null;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertNotNull(problem5_0);
      
      problem5_0.a1219723237 = 0;
      problem5_0.calculateOutput("iC");
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-2422), problem5_0.a1544481660);
      assertEquals((-133), problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-2347), problem5_0.a1507548554);
      assertEquals((-17812), problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-3810), problem5_0.a1219723237);
      assertEquals((-5566), problem5_0.a645550563);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertNotNull(problem5_0);
      
      problem5_0.a1867715898 = "e";
      problem5_0.calculateOutput("iF");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-17449), problem5_0.a1544481660);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals(8, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-13852), problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertTrue(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iF");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-17449), problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals((-13852), problem5_0.a645550563);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals(6, problem5_0.a1175663450);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("6#");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iE");
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      
      problem5_0.a998820044 = 754;
      problem5_0.calculateOutput("iE");
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-15245), problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-2390), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-4076), problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-3128), problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-20360), problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-20417), problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("Xb");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(7, problem5_0.a463267856);
      assertTrue(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertNotNull(problem5_0);
      
      problem5_0.a998820044 = (-124);
      problem5_0.a1219723237 = 0;
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(189, problem5_1.a645550563);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(75, problem5_1.a321762694);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(90, problem5_1.a754912052);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(212, problem5_1.a1135414112);
      assertTrue(problem5_1.cf);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(15, problem5_1.a2112741742);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(96, problem5_0.a518089629);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertNotNull(problem5_0);
      
      problem5_0.a1389516315 = "iJ";
      problem5_0.a281657923 = 1;
      String string0 = "iE";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a463267856);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertNotNull(problem5_0);
      
      problem5_0.a1175663450 = 963;
      problem5_0.a1507548554 = (-24);
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(274, problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(155, problem5_0.a1544481660);
      
      // SystemInUtil.addInputLine("iE");
      problem5_0.calculateOutput("iE");
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(191, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(80, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(5365, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(189, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(121, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(177, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(58, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(164, problem5_0.a1219723237);
      assertEquals(11, problem5_0.a362703815);
      assertEquals(388, problem5_0.a1135414112);
      assertEquals(135, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(5365, problem5_0.a281657923);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(272, problem5_0.a518089629);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(177, problem5_0.a645550563);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(254, problem5_0.a1507548554);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(2, problem5_1.a998820044);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(12, problem5_1.a424236355);
      assertTrue(problem5_1.cf);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(6, problem5_1.a1175663450);
      assertNotNull(problem5_1);
      
      Problem5 problem5_2 = new Problem5();
      assertFalse(problem5_2.equals((Object)problem5_1));
      assertFalse(problem5_2.equals((Object)problem5_0));
      assertEquals(14, problem5_2.a362703815);
      assertEquals((-63), problem5_2.a1680669372);
      assertEquals(212, problem5_2.a1135414112);
      assertEquals(114, problem5_2.a1544481660);
      assertEquals(6, problem5_2.a1175663450);
      assertEquals(9, problem5_2.a737138579);
      assertEquals(201, problem5_2.a1507548554);
      assertEquals(15, problem5_2.a2112741742);
      assertEquals(265, problem5_2.a82233648);
      assertTrue(problem5_2.cf);
      assertEquals((-42), problem5_2.a2077034612);
      assertEquals(318, problem5_2.a1318003364);
      assertEquals(3, problem5_2.a1922234987);
      assertEquals(112, problem5_2.a1219723237);
      assertEquals(12, problem5_2.a1176556958);
      assertEquals(68, problem5_2.a1185506925);
      assertEquals(2, problem5_2.a998820044);
      assertEquals(189, problem5_2.a645550563);
      assertEquals(10, problem5_2.a339428322);
      assertEquals((-70), problem5_2.a15580097);
      assertEquals(75, problem5_2.a321762694);
      assertEquals(90, problem5_2.a754912052);
      assertEquals(3, problem5_2.a608789820);
      assertEquals(9, problem5_2.a2015506287);
      assertEquals(15, problem5_2.a1185559685);
      assertEquals(213, problem5_2.a723549884);
      assertEquals(12, problem5_2.a424236355);
      assertEquals(172, problem5_2.a449177388);
      assertEquals(96, problem5_2.a518089629);
      assertEquals(241, problem5_2.a281657923);
      assertEquals((-34), problem5_2.a853335314);
      assertEquals(6, problem5_2.a674385059);
      assertEquals(1, problem5_2.a1138218523);
      assertEquals(113, problem5_2.a1240663365);
      assertEquals(7, problem5_2.a463267856);
      assertNotNull(problem5_2);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertNotNull(problem5_0);
      
      BufferedReader bufferedReader0 = Problem5.stdin;
      assertNotNull(bufferedReader0);
      
      Problem5.stdin = bufferedReader0;
      problem5_0.calculateOutput("iG");
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a339428322);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(78, problem5_0.a518089629);
      
      problem5_0.calculateOutput("iG");
      assertEquals(160, problem5_0.a1219723237);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(238, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a339428322);
      
      problem5_0.a753458331 = "iG";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertNotNull(problem5_0);
      
      String string0 = "ayNGo[=8D<<O?HQ%k";
      int int0 = 1924;
      problem5_0.a645550563 = 1924;
      String string1 = null;
      problem5_0.a1138218523 = 3691;
      problem5_0.a1389516315 = null;
      problem5_0.a1219723237 = 1006;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("ayNGo[=8D<<O?HQ%k");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertNotNull(problem5_0);
      
      problem5_0.a860255372 = "iE";
      String string0 = "*K";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("*K");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      // SystemInUtil.addInputLine("");
      Problem5 problem5_0 = new Problem5();
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertNotNull(problem5_0);
      
      problem5_0.a2015506287 = (-28626);
      problem5_0.a1219723237 = 0;
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(114, problem5_1.a1544481660);
      assertEquals((-63), problem5_1.a1680669372);
      assertTrue(problem5_1.cf);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(9, problem5_1.a737138579);
      assertNotNull(problem5_1);
      
      Problem5 problem5_2 = new Problem5();
      assertFalse(problem5_2.equals((Object)problem5_0));
      assertFalse(problem5_2.equals((Object)problem5_1));
      assertEquals(3, problem5_2.a1922234987);
      assertEquals(189, problem5_2.a645550563);
      assertEquals((-42), problem5_2.a2077034612);
      assertEquals(213, problem5_2.a723549884);
      assertEquals(9, problem5_2.a2015506287);
      assertEquals(15, problem5_2.a2112741742);
      assertEquals(201, problem5_2.a1507548554);
      assertEquals(96, problem5_2.a518089629);
      assertEquals(10, problem5_2.a339428322);
      assertEquals(172, problem5_2.a449177388);
      assertEquals(12, problem5_2.a424236355);
      assertEquals(2, problem5_2.a998820044);
      assertEquals(6, problem5_2.a674385059);
      assertEquals(1, problem5_2.a1138218523);
      assertEquals(7, problem5_2.a463267856);
      assertEquals(113, problem5_2.a1240663365);
      assertEquals(3, problem5_2.a608789820);
      assertEquals(241, problem5_2.a281657923);
      assertEquals(75, problem5_2.a321762694);
      assertEquals(15, problem5_2.a1185559685);
      assertEquals(68, problem5_2.a1185506925);
      assertEquals((-34), problem5_2.a853335314);
      assertEquals((-63), problem5_2.a1680669372);
      assertEquals(212, problem5_2.a1135414112);
      assertEquals(114, problem5_2.a1544481660);
      assertTrue(problem5_2.cf);
      assertEquals(14, problem5_2.a362703815);
      assertEquals(9, problem5_2.a737138579);
      assertEquals(90, problem5_2.a754912052);
      assertEquals((-70), problem5_2.a15580097);
      assertEquals(6, problem5_2.a1175663450);
      assertEquals(318, problem5_2.a1318003364);
      assertEquals(265, problem5_2.a82233648);
      assertEquals(112, problem5_2.a1219723237);
      assertEquals(12, problem5_2.a1176556958);
      assertNotNull(problem5_2);
      
      problem5_2.a860255372 = "g";
      // Undeclared exception!
      try { 
        problem5_2.calculateOutput("iF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(15, problem5_0.a2112741742);
      assertTrue(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertNotNull(problem5_0);
      
      problem5_0.a1526400317 = "iC";
      problem5_0.calculateOutput("iC");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-3810), problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-2347), problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-5566), problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-133), problem5_0.a518089629);
      assertEquals((-17812), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-2422), problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      
      problem5_0.calculateOutput("iC");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-3810), problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-11462), problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-2347), problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-5566), problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-133), problem5_0.a518089629);
      assertEquals((-17812), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-2422), problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("Problem5");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(96, problem5_0.a518089629);
      assertNotNull(problem5_0);
      
      problem5_0.a860255372 = "";
      problem5_0.a321762694 = (-1843959285);
      String string0 = "iJ";
      problem5_0.calculateOutput("iJ");
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-1843959285), problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      
      problem5_0.a1922234987 = (-1843959285);
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("'");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(23574, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.a737138579 = 5637;
      problem5_0.calculateOutput("iJ");
      assertEquals(158, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(262, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(5637, problem5_0.a737138579);
      assertEquals(333, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(142, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(169, problem5_0.a1219723237);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(202, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("X1e5");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("$Vj'|PU~n,Y");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertNotNull(problem5_0);
      
      problem5_0.a853335314 = (-1);
      problem5_0.a1219723237 = (-14);
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertTrue(problem5_1.cf);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(2, problem5_1.a998820044);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(96, problem5_1.a518089629);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(12, problem5_1.a424236355);
      assertNotNull(problem5_1);
      
      problem5_1.a2015506287 = 212;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String string0 = "";
      Problem5 problem5_0 = new Problem5();
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertNotNull(problem5_0);
      
      problem5_0.a2015506287 = (-28626);
      problem5_0.a1219723237 = 0;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("<YxB:mFun}OD");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertTrue(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iE");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      
      problem5_0.calculateOutput("iE");
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-3128), problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-2390), problem5_0.a1544481660);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-20360), problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      assertEquals((-4076), problem5_0.a1135414112);
      assertEquals((-15245), problem5_0.a518089629);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-20417), problem5_0.a645550563);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      
      problem5_0.calculateOutput("iE");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(112, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(14, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(121, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(57, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(218, problem5_0.a1507548554);
      assertEquals(206, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(180, problem5_0.a645550563);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      
      problem5_0.calculateOutput("iE");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(112, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(14, problem5_0.a1176556958);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(121, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(57, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(218, problem5_0.a1507548554);
      assertEquals(206, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(180, problem5_0.a645550563);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertTrue(problem5_0.cf);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(264, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(154, problem5_0.a1219723237);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(3, problem5_1.a1922234987);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(213, problem5_1.a723549884);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(112, problem5_1.a1219723237);
      assertTrue(problem5_1.cf);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(265, problem5_1.a82233648);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(10, problem5_1.a339428322);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(7, problem5_1.a463267856);
      assertNotNull(problem5_1);
      
      problem5_0.calculateOutput("iC");
      assertFalse(problem5_0.equals((Object)problem5_1));
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(11, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(75, problem5_0.a1219723237);
      assertEquals(181, problem5_0.a1507548554);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(106, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(195, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(171, problem5_0.a645550563);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a339428322);
      assertNotSame(problem5_0, problem5_1);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertTrue(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(264, problem5_0.a518089629);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(78, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(238, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-2908), problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-8876), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-5815), problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-18772), problem5_0.a645550563);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-15464), problem5_0.a1219723237);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-19353), problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iG");
      assertEquals(76, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(181, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(114, problem5_0.a1680669372);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(160, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(108, problem5_0.a518089629);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(50, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(221, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(114, problem5_0.a1544481660);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertNotNull(problem5_0);
      
      problem5_0.a881797486 = "oU";
      problem5_0.a1544481660 = (-14892);
      problem5_0.a1867715898 = "6#";
      String string0 = "iF";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertNotNull(problem5_0);
      
      problem5_0.a2112741742 = 0;
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(172, problem5_1.a449177388);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(7, problem5_1.a463267856);
      assertTrue(problem5_1.cf);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(265, problem5_1.a82233648);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals((-42), problem5_1.a2077034612);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      
      String string0 = "iB";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertNotNull(problem5_0);
      
      String string0 = "iA";
      problem5_0.calculateOutput("iA");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      
      problem5_0.a2015506287 = 567;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("v2.1N(0x%dv?7PLMjS");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(206, problem5_0.a645550563);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      
      String string0 = "oZ";
      problem5_0.a1526400317 = "\"";
      problem5_0.a674385059 = 4760;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("oZ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(90, problem5_0.a754912052);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertTrue(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iF");
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals((-17449), problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-13852), problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals(14, problem5_0.a362703815);
      
      problem5_0.calculateOutput("iF");
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals((-17449), problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals((-18614), problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(11, problem5_0.a424236355);
      assertEquals((-13852), problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals(14, problem5_0.a362703815);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("(R:aNzA^~");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(3, problem5_0.a1922234987);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertNotNull(problem5_0);
      
      problem5_0.a881797486 = "oU";
      problem5_0.a1867715898 = "e";
      problem5_0.calculateOutput("iF");
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-13852), problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-17449), problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      
      problem5_0.calculateOutput("iF");
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-13852), problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-17449), problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-18614), problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      
      problem5_0.calculateOutput("iF");
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(266, problem5_0.a1507548554);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(223, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(193, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(321, problem5_0.a518089629);
      assertEquals(153, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals((-18614), problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(155, problem5_0.a1219723237);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(16, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-1379), problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(17, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(16, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(235, problem5_0.a518089629);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(302, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(150, problem5_0.a1219723237);
      assertEquals(256, problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(178, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-1379), problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iC");
      assertEquals((-3810), problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-2347), problem5_0.a1507548554);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-2422), problem5_0.a1544481660);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-17812), problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-5566), problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-133), problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      
      problem5_0.calculateOutput("iC");
      assertEquals((-3810), problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-2347), problem5_0.a1507548554);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-2422), problem5_0.a1544481660);
      assertEquals((-11462), problem5_0.a754912052);
      assertEquals((-17812), problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-5566), problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-133), problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iI");
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(180, problem5_0.a518089629);
      assertEquals((-11462), problem5_0.a754912052);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(221, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(157, problem5_0.a1544481660);
      assertEquals(214, problem5_0.a645550563);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(270, problem5_0.a1507548554);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(179, problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(4, problem5_0.a1922234987);
      
      // SystemInUtil.addInputLine("?]:D}dX*");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "19K*^}01DT72$# $L9";
      stringArray0[3] = "|cW{]SU`";
      stringArray0[4] = "iI";
      stringArray0[5] = "e";
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertNotNull(problem5_0);
      
      problem5_0.a1219723237 = 0;
      problem5_0.a518089629 = 0;
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(9, problem5_1.a737138579);
      assertTrue(problem5_1.cf);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(6, problem5_1.a1175663450);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(206, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      
      problem5_0.calculateOutput("iG");
      assertEquals(2, problem5_0.a998820044);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(13, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      
      problem5_0.calculateOutput("iF");
      assertEquals(271, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(193, problem5_0.a1219723237);
      assertEquals(139, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(205, problem5_0.a645550563);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(255, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(339, problem5_0.a1135414112);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("jrIvd");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(264, problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      
      problem5_0.calculateOutput("iG");
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      
      problem5_0.calculateOutput("iG");
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(207, problem5_0.a645550563);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("\\aAXSaI");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(3, problem5_0.a1922234987);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(8, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-25850), problem5_0.a1135414112);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(2, problem5_1.a998820044);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(75, problem5_1.a321762694);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertTrue(problem5_1.cf);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(9, problem5_1.a737138579);
      assertNotNull(problem5_1);
      
      problem5_0.calculateOutput("iC");
      assertFalse(problem5_0.equals((Object)problem5_1));
      assertEquals(3, problem5_0.a608789820);
      assertEquals(238, problem5_0.a1507548554);
      assertEquals(265, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(376, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(161, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(12, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(149, problem5_0.a1544481660);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(196, problem5_0.a645550563);
      assertEquals(185, problem5_0.a1219723237);
      assertNotSame(problem5_0, problem5_1);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertNotNull(problem5_0);
      
      String string0 = "iG";
      problem5_0.a603176266 = "iG";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals((-28433), problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      
      problem5_0.calculateOutput("iH");
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(321, problem5_0.a1135414112);
      assertEquals(261, problem5_0.a1507548554);
      assertEquals(162, problem5_0.a1240663365);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(173, problem5_0.a518089629);
      assertEquals(178, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(195, problem5_0.a645550563);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(146, problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertNotNull(problem5_0);
      
      String string0 = "iA";
      problem5_0.calculateOutput("iA");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(222, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      
      // // SystemInUtil.addInputLine("h");
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(4, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iA");
      assertEquals(5, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(10, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a1922234987);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(7, problem5_1.a463267856);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(90, problem5_1.a754912052);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(114, problem5_1.a1544481660);
      assertTrue(problem5_1.cf);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(265, problem5_1.a82233648);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertTrue(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iE");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      
      problem5_0.calculateOutput("iE");
      assertEquals(1, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-20417), problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-15245), problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-3128), problem5_0.a1507548554);
      assertEquals((-20360), problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-2390), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-4076), problem5_0.a1135414112);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("Xb");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(11, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(158, problem5_0.a1544481660);
      
      problem5_0.calculateOutput("iA");
      assertEquals(1, problem5_0.a998820044);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-25861), problem5_0.a1544481660);
      
      String string0 = "unh\\A)-Ep_TB)sS6wu";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("unhA)-Ep_TB)sS6wu");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertTrue(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iH");
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(189, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(10, problem5_0.a2112741742);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iH");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(158, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(291, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      
      problem5_0.calculateOutput("iA");
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(196, problem5_0.a1507548554);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(7, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(164, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals(107, problem5_0.a518089629);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(16, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(206, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      
      problem5_0.calculateOutput("iG");
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(78, problem5_0.a518089629);
      assertFalse(problem5_0.cf);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(6, problem5_1.a674385059);
      assertTrue(problem5_1.cf);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(90, problem5_1.a754912052);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(75, problem5_1.a321762694);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(2, problem5_1.a998820044);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(7, problem5_1.a463267856);
      assertNotNull(problem5_1);
      
      problem5_0.a998820044 = 1;
      problem5_1.calculateOutput("iD");
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(10, problem5_1.a2015506287);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(12, problem5_1.a2112741742);
      assertFalse(problem5_1.cf);
      assertEquals(90, problem5_1.a754912052);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(3, problem5_1.a998820044);
      assertEquals(190, problem5_1.a518089629);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(11, problem5_1.a339428322);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(8, problem5_1.a463267856);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(7, problem5_1.a674385059);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(208, problem5_1.a645550563);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(10115, problem5_1.a1240663365);
      assertEquals(165, problem5_1.a1219723237);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(4, problem5_1.a1922234987);
      assertEquals(152, problem5_1.a1544481660);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(255, problem5_1.a1507548554);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(303, problem5_1.a1135414112);
      assertNotSame(problem5_1, problem5_0);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(291, problem5_0.a518089629);
      
      problem5_0.calculateOutput("iB");
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(291, problem5_0.a518089629);
      
      problem5_0.calculateOutput("iB");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-22043), problem5_0.a1544481660);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-14975), problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals((-496), problem5_0.a1135414112);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(267, problem5_0.a608789820);
      assertEquals((-918), problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-2867), problem5_0.a645550563);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-26543), problem5_0.a1219723237);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(103, problem5_0.a754912052);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(12, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      
      problem5_0.calculateOutput("iG");
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(58, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(116, problem5_0.a518089629);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-19574), problem5_0.a1185506925);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(187, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(101, problem5_0.a1219723237);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(192, problem5_0.a1135414112);
      assertEquals(206, problem5_0.a1507548554);
      
      problem5_0.calculateOutput("iG");
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(245, problem5_0.a1507548554);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(58, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(189, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-19574), problem5_0.a1185506925);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(195, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(337, problem5_0.a1135414112);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(203, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iG");
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(208, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(58, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-19574), problem5_0.a1185506925);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(131, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(80, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(168, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(227, problem5_0.a1135414112);
      assertEquals(90, problem5_0.a754912052);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("1)fO!es~Di/&1+q_VU");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertTrue(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iC");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-5566), problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-133), problem5_0.a518089629);
      assertEquals((-17812), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-2347), problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-3810), problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-2422), problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      
      problem5_0.calculateOutput("iC");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-5566), problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-133), problem5_0.a518089629);
      assertEquals((-17812), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-11462), problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-2347), problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-3810), problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-2422), problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      
      problem5_0.calculateOutput("iC");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(194, problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(163, problem5_0.a1544481660);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-11462), problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(254, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(182, problem5_0.a1135414112);
      assertEquals(302, problem5_0.a518089629);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(181, problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("O;z@l1u-xSMN`[Eq,");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iE");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertFalse(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      
      problem5_0.calculateOutput("iE");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-2390), problem5_0.a1544481660);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertFalse(problem5_0.cf);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-4076), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-3128), problem5_0.a1507548554);
      assertEquals((-20360), problem5_0.a1219723237);
      assertEquals((-20417), problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-15245), problem5_0.a518089629);
      
      problem5_0.calculateOutput("iB");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(219, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(28, problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(81, problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertFalse(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(186, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(72, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(112, problem5_0.a1219723237);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(6, problem5_1.a674385059);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(3, problem5_1.a1922234987);
      assertTrue(problem5_1.cf);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(96, problem5_1.a518089629);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(2, problem5_1.a998820044);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(10, problem5_1.a339428322);
      assertNotNull(problem5_1);
      
      problem5_0.a1276415105 = "e";
      problem5_1.a853335314 = 1335;
      problem5_0.calculateOutput("iC");
      assertFalse(problem5_0.equals((Object)problem5_1));
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(174, problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(85, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(133, problem5_0.a1219723237);
      assertEquals(202, problem5_0.a1507548554);
      assertEquals(101, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals(168, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertNotSame(problem5_0, problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(248, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iG");
      assertEquals(10, problem5_0.a339428322);
      assertEquals(168, problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals((-16), problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(248, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iG");
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-19353), problem5_0.a1507548554);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertFalse(problem5_0.cf);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-5815), problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-15464), problem5_0.a1219723237);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-8876), problem5_0.a1544481660);
      assertEquals((-2908), problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-18772), problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("^`$@p]Zl*M[_lpe<n<g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a1922234987);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertNotNull(problem5_0);
      
      problem5_0.a1544481660 = 9;
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(9, problem5_1.a737138579);
      assertEquals((-42), problem5_1.a2077034612);
      assertTrue(problem5_1.cf);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(7, problem5_1.a463267856);
      assertNotNull(problem5_1);
      
      problem5_1.calculateOutput("iC");
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals((-17812), problem5_1.a1135414112);
      assertEquals((-133), problem5_1.a518089629);
      assertEquals(9, problem5_1.a339428322);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(14, problem5_1.a362703815);
      assertEquals((-2422), problem5_1.a1544481660);
      assertEquals((-5566), problem5_1.a645550563);
      assertEquals((-63), problem5_1.a1680669372);
      assertFalse(problem5_1.cf);
      assertEquals(9, problem5_1.a737138579);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals((-2347), problem5_1.a1507548554);
      assertEquals(1, problem5_1.a998820044);
      assertEquals(5, problem5_1.a674385059);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(6, problem5_1.a463267856);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(10, problem5_1.a2112741742);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(8, problem5_1.a2015506287);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(2, problem5_1.a1922234987);
      assertEquals((-3810), problem5_1.a1219723237);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(241, problem5_1.a281657923);
      assertNotSame(problem5_1, problem5_0);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("i");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(112, problem5_0.a1219723237);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(12, problem5_1.a424236355);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(96, problem5_1.a518089629);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(9, problem5_1.a737138579);
      assertTrue(problem5_1.cf);
      assertEquals(189, problem5_1.a645550563);
      assertEquals((-63), problem5_1.a1680669372);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a998820044);
      
      // SystemInUtil.addInputLine("g");
      problem5_0.calculateOutput("iB");
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a998820044);
      
      problem5_0.calculateOutput("iB");
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a998820044);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertTrue(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iE");
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iB");
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-24467), problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertTrue(problem5_0.cf);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertFalse(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iC");
      assertFalse(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(154, problem5_0.a754912052);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iG");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.a1507548554 = (-1570);
      String[] stringArray0 = new String[6];
      problem5_0.calculateOutput("iG");
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(238, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(160, problem5_0.a1219723237);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(7, problem5_0.a463267856);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(112, problem5_0.a1219723237);
      assertNotNull(problem5_0);
      
      problem5_0.a860255372 = "";
      String string0 = "iA";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iE");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iE");
      assertEquals((-3128), problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-2390), problem5_0.a1544481660);
      assertEquals((-20360), problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-4076), problem5_0.a1135414112);
      assertEquals(2, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals((-15245), problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-20417), problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iE");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(218, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(206, problem5_0.a1135414112);
      assertEquals(180, problem5_0.a645550563);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(121, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(57, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(112, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("Xb");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-28433), problem5_0.a645550563);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(241, problem5_1.a281657923);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(2, problem5_1.a998820044);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(12, problem5_1.a424236355);
      assertTrue(problem5_1.cf);
      assertEquals(172, problem5_1.a449177388);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(112, problem5_1.a1219723237);
      assertNotNull(problem5_1);
      
      problem5_1.calculateOutput("iJ");
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(241, problem5_1.a281657923);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals((-25850), problem5_1.a1135414112);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(2, problem5_1.a1922234987);
      assertEquals(12, problem5_1.a424236355);
      assertEquals((-25780), problem5_1.a1219723237);
      assertEquals(172, problem5_1.a449177388);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals((-28433), problem5_1.a645550563);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(23574, problem5_1.a723549884);
      assertEquals(8, problem5_1.a2015506287);
      assertFalse(problem5_1.cf);
      assertEquals(10, problem5_1.a2112741742);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(9, problem5_1.a339428322);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals((-27061), problem5_1.a1507548554);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals((-15021), problem5_1.a1544481660);
      assertEquals(1, problem5_1.a998820044);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(6, problem5_1.a463267856);
      assertEquals(5, problem5_1.a674385059);
      assertEquals((-27148), problem5_1.a518089629);
      assertNotSame(problem5_1, problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertFalse(problem5_0.equals((Object)problem5_1));
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(177, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(102, problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(181, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(100, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(82, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertNotSame(problem5_0, problem5_1);
      
      problem5_0.calculateOutput("iF");
      assertFalse(problem5_0.equals((Object)problem5_1));
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(177, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(102, problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(181, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(100, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(82, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertNotSame(problem5_0, problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(12, problem5_1.a424236355);
      assertTrue(problem5_1.cf);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(2, problem5_1.a998820044);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(14, problem5_1.a362703815);
      assertNotNull(problem5_1);
      
      problem5_1.calculateOutput("iF");
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals((-28169), problem5_1.a1135414112);
      assertEquals((-27304), problem5_1.a1507548554);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(8, problem5_1.a2015506287);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(2, problem5_1.a1922234987);
      assertEquals(12, problem5_1.a424236355);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals((-17449), problem5_1.a1544481660);
      assertEquals(107, problem5_1.a754912052);
      assertEquals(1, problem5_1.a998820044);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals((-24408), problem5_1.a608789820);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(17, problem5_1.a2112741742);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(5, problem5_1.a674385059);
      assertEquals((-19544), problem5_1.a518089629);
      assertEquals(6, problem5_1.a463267856);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(9, problem5_1.a339428322);
      assertEquals(68, problem5_1.a1185506925);
      assertFalse(problem5_1.cf);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals((-1144), problem5_1.a1219723237);
      assertEquals(172, problem5_1.a449177388);
      assertEquals((-13852), problem5_1.a645550563);
      assertEquals(14, problem5_1.a362703815);
      assertNotSame(problem5_1, problem5_0);
      
      problem5_1.calculateOutput("iJ");
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(265, problem5_1.a82233648);
      assertEquals(177, problem5_1.a1240663365);
      assertEquals(10, problem5_1.a2015506287);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(12, problem5_1.a2112741742);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(4, problem5_1.a1922234987);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(276, problem5_1.a1135414112);
      assertEquals(107, problem5_1.a754912052);
      assertEquals(3, problem5_1.a998820044);
      assertEquals(248, problem5_1.a1507548554);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals((-24408), problem5_1.a608789820);
      assertEquals(318, problem5_1.a518089629);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(212, problem5_1.a645550563);
      assertEquals(167, problem5_1.a1544481660);
      assertEquals(11, problem5_1.a339428322);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(7, problem5_1.a674385059);
      assertEquals(8, problem5_1.a463267856);
      assertEquals(68, problem5_1.a1185506925);
      assertFalse(problem5_1.cf);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(159, problem5_1.a1219723237);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(14, problem5_1.a362703815);
      assertNotSame(problem5_1, problem5_0);
      
      String string0 = "iA";
      problem5_0.calculateOutput("iA");
      assertFalse(problem5_0.equals((Object)problem5_1));
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(100, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(181, problem5_0.a1135414112);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(102, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(82, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(177, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertNotSame(problem5_0, problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      // SystemInUtil.addInputLine("iF");
      // SystemInUtil.addInputLine("iG");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "iF";
      // SystemInUtil.addInputLine("oW");
      stringArray0[2] = "iF";
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(241, problem5_0.a281657923);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(222, problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a998820044);
      
      problem5_0.calculateOutput("iB");
      assertEquals(241, problem5_0.a281657923);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a998820044);
      
      problem5_0.calculateOutput("iB");
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-918), problem5_0.a518089629);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(267, problem5_0.a608789820);
      assertEquals((-26543), problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-22043), problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-2867), problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-496), problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-14975), problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(103, problem5_0.a754912052);
      assertEquals(1, problem5_0.a998820044);
      
      // SystemInUtil.addInputLine("g");
      problem5_0.calculateOutput("iB");
      assertEquals(241, problem5_0.a281657923);
      assertEquals(80, problem5_0.a1544481660);
      assertEquals(181, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(205, problem5_0.a1507548554);
      assertEquals(83, problem5_0.a518089629);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(267, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(89, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertFalse(problem5_0.cf);
      assertEquals(220, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(103, problem5_0.a754912052);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(6, problem5_1.a674385059);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(189, problem5_1.a645550563);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(12, problem5_1.a1176556958);
      assertTrue(problem5_1.cf);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(10, problem5_1.a339428322);
      assertNotNull(problem5_1);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertTrue(problem5_0.cf);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(6, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(2, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.a674385059 = 4058;
      problem5_0.a737138579 = 5637;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iJ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(114, problem5_0.a1544481660);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(114, problem5_0.a1544481660);
      
      // SystemInUtil.addInputLine("f");
      problem5_0.calculateOutput("iG");
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      
      problem5_0.calculateOutput("iG");
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(251, problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(156, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(26821, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(136, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(337, problem5_0.a1135414112);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(181, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(200, problem5_0.a645550563);
      
      problem5_0.calculateOutput("iG");
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(180, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(222, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(113, problem5_0.a1544481660);
      assertEquals(92, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(26821, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(170, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(104, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iG");
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-25491), problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals((-6847), problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-16376), problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(26821, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-6003), problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(5, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-14523), problem5_0.a1507548554);
      assertEquals((-7801), problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-63), problem5_0.a1680669372);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iG");
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(78, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(238, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iG");
      assertEquals(9, problem5_0.a339428322);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-5815), problem5_0.a1135414112);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-2908), problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-15464), problem5_0.a1219723237);
      assertEquals((-18772), problem5_0.a645550563);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals((-19353), problem5_0.a1507548554);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-8876), problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(10, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iF");
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(186, problem5_0.a645550563);
      assertEquals(61, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(67, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(99, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(104, problem5_0.a1680669372);
      assertEquals(169, problem5_0.a1507548554);
      
      problem5_0.calculateOutput("iF");
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(186, problem5_0.a645550563);
      assertEquals(61, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(67, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(99, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(104, problem5_0.a1680669372);
      assertEquals(169, problem5_0.a1507548554);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(78, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-8876), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-2908), problem5_0.a518089629);
      assertEquals((-19353), problem5_0.a1507548554);
      assertEquals((-5815), problem5_0.a1135414112);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals((-18772), problem5_0.a645550563);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-15464), problem5_0.a1219723237);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a339428322);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(181, problem5_0.a645550563);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(65, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(199, problem5_0.a1507548554);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(185, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(107, problem5_0.a518089629);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(87, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(113, problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(181, problem5_0.a645550563);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(65, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(199, problem5_0.a1507548554);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(185, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(107, problem5_0.a518089629);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(87, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(113, problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(181, problem5_0.a645550563);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(65, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(199, problem5_0.a1507548554);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(185, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(107, problem5_0.a518089629);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(87, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(113, problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(181, problem5_0.a645550563);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(65, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(199, problem5_0.a1507548554);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(185, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(107, problem5_0.a518089629);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(87, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(113, problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(274, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(113, problem5_0.a1240663365);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(168, problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-5815), problem5_0.a1135414112);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-8876), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-19353), problem5_0.a1507548554);
      assertEquals((-15464), problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-2908), problem5_0.a518089629);
      assertEquals((-18772), problem5_0.a645550563);
      
      problem5_0.calculateOutput("iF");
      assertEquals(186, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(104, problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(189, problem5_0.a1135414112);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(169, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(99, problem5_0.a518089629);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(61, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(67, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("^sd]hc<");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      
      problem5_0.calculateOutput("iG");
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(78, problem5_0.a518089629);
      assertFalse(problem5_0.cf);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      
      problem5_0.calculateOutput("iG");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals((-63), problem5_1.a1680669372);
      assertTrue(problem5_1.cf);
      assertEquals(9, problem5_1.a737138579);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(172, problem5_1.a449177388);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(7, problem5_1.a463267856);
      assertNotNull(problem5_1);
      
      problem5_0.calculateOutput("iB");
      assertFalse(problem5_0.equals((Object)problem5_1));
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-17540), problem5_0.a1544481660);
      assertEquals(8, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals((-17210), problem5_0.a1135414112);
      assertEquals((-28524), problem5_0.a1507548554);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-22296), problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-23784), problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-3260), problem5_0.a518089629);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertNotSame(problem5_0, problem5_1);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a674385059);
      assertTrue(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertNotNull(problem5_0);
      
      problem5_0.a339428322 = 8452;
      problem5_0.calculateOutput("iA");
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(25333, problem5_0.a674385059);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(25329, problem5_0.a998820044);
      assertEquals(222, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(71436208, problem5_0.a1922234987);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(8452, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      
      // SystemInUtil.addInputLine("");
      // SystemInUtil.addInputLine("g");
      // SystemInUtil.addInputLine("");
      String string0 = null;
      problem5_0.a1941434902 = null;
      String[] stringArray0 = new String[0];
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertTrue(problem5_0.cf);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(142, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(169, problem5_0.a1219723237);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(262, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(333, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(202, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals((-63), problem5_1.a1680669372);
      assertTrue(problem5_1.cf);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals((-42), problem5_1.a2077034612);
      assertNotNull(problem5_1);
      
      problem5_0.calculateOutput("iF");
      assertFalse(problem5_0.equals((Object)problem5_1));
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(142, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(169, problem5_0.a1219723237);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(262, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(333, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(202, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertNotSame(problem5_0, problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(248, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(154, problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(168, problem5_0.a645550563);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(248, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals((-19353), problem5_0.a1507548554);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-2908), problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-5815), problem5_0.a1135414112);
      assertEquals((-15464), problem5_0.a1219723237);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-8876), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-18772), problem5_0.a645550563);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iI");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(3, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(33, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(192, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(31, problem5_0.a1544481660);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(121, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(58, problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(216, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("Zdj;v");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      
      // SystemInUtil.addInputLine("f");
      problem5_0.calculateOutput("iB");
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      
      problem5_0.calculateOutput("iF");
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("%SUb8t$}r3,2");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(112, problem5_0.a1219723237);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-15616), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals((-16856), problem5_0.a1544481660);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-8938), problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-13994), problem5_0.a1507548554);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-2564), problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-2240), problem5_0.a518089629);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(12922, problem5_0.a754912052);
      assertEquals(84, problem5_0.a1544481660);
      assertEquals(112, problem5_0.a518089629);
      assertEquals(104, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(164, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(224, problem5_0.a1135414112);
      assertEquals(173, problem5_0.a645550563);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(12922, problem5_0.a754912052);
      assertEquals(84, problem5_0.a1544481660);
      assertEquals(112, problem5_0.a518089629);
      assertEquals(104, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(164, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(224, problem5_0.a1135414112);
      assertEquals(173, problem5_0.a645550563);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(14, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(206, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(154, problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iG");
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a339428322);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals((-70), problem5_1.a15580097);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(265, problem5_1.a82233648);
      assertTrue(problem5_1.cf);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(10, problem5_1.a339428322);
      assertNotNull(problem5_1);
      
      problem5_1.calculateOutput("iD");
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(12, problem5_1.a2112741742);
      assertEquals(190, problem5_1.a518089629);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(9, problem5_1.a737138579);
      assertFalse(problem5_1.cf);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(10, problem5_1.a2015506287);
      assertEquals(7, problem5_1.a674385059);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(8, problem5_1.a463267856);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(10115, problem5_1.a1240663365);
      assertEquals(11, problem5_1.a339428322);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(3, problem5_1.a998820044);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(208, problem5_1.a645550563);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(165, problem5_1.a1219723237);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(152, problem5_1.a1544481660);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(255, problem5_1.a1507548554);
      assertEquals(303, problem5_1.a1135414112);
      assertEquals(4, problem5_1.a1922234987);
      assertNotSame(problem5_1, problem5_0);
      
      problem5_0.a998820044 = 1;
      problem5_1.calculateOutput("iD");
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals((-70), problem5_1.a15580097);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(15, problem5_1.a1544481660);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(105, problem5_1.a754912052);
      assertEquals(9, problem5_1.a737138579);
      assertFalse(problem5_1.cf);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(196, problem5_1.a1507548554);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(25, problem5_1.a1219723237);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(10115, problem5_1.a1240663365);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(232, problem5_1.a1135414112);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(11, problem5_1.a2112741742);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(110, problem5_1.a518089629);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(184, problem5_1.a645550563);
      assertNotSame(problem5_1, problem5_0);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertNotNull(problem5_0);
      
      String string0 = "iB";
      problem5_0.calculateOutput("iB");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(12, problem5_1.a424236355);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(9, problem5_1.a737138579);
      assertTrue(problem5_1.cf);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(241, problem5_1.a281657923);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(9, problem5_1.a2015506287);
      assertNotNull(problem5_1);
      
      problem5_1.calculateOutput("iF");
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(265, problem5_1.a82233648);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals((-28169), problem5_1.a1135414112);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(12, problem5_1.a424236355);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals((-13852), problem5_1.a645550563);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(107, problem5_1.a754912052);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(9, problem5_1.a339428322);
      assertEquals((-17449), problem5_1.a1544481660);
      assertFalse(problem5_1.cf);
      assertEquals(8, problem5_1.a2015506287);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(5, problem5_1.a674385059);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(17, problem5_1.a2112741742);
      assertEquals((-24408), problem5_1.a608789820);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(241, problem5_1.a281657923);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals((-1144), problem5_1.a1219723237);
      assertEquals(6, problem5_1.a463267856);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(1, problem5_1.a998820044);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(2, problem5_1.a1922234987);
      assertEquals((-19544), problem5_1.a518089629);
      assertEquals((-27304), problem5_1.a1507548554);
      assertNotSame(problem5_1, problem5_0);
      
      problem5_0.calculateOutput("iF");
      assertFalse(problem5_0.equals((Object)problem5_1));
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(237, problem5_0.a1507548554);
      assertEquals(136, problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(149, problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(210, problem5_0.a645550563);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(166, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(253, problem5_0.a1135414112);
      assertEquals(248, problem5_0.a518089629);
      assertNotSame(problem5_0, problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      // SystemInUtil.addInputLine("bCW;<^hO8q@F");
      Problem5 problem5_0 = new Problem5();
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertNotNull(problem5_0);
      
      problem5_0.a674385059 = (-757);
      problem5_0.a645550563 = (-1616667171);
      problem5_0.a273097877 = "bCW;<^hO8q@F";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iC");
      assertEquals((-17812), problem5_0.a1135414112);
      assertEquals((-133), problem5_0.a518089629);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-2422), problem5_0.a1544481660);
      assertEquals((-5566), problem5_0.a645550563);
      assertEquals((-3810), problem5_0.a1219723237);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-2347), problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      
      problem5_0.a273097877 = "iC";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iC");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertTrue(problem5_0.cf);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(248, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(264, problem5_0.a518089629);
      
      problem5_0.calculateOutput("iF");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(173, problem5_0.a645550563);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(164, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(174, problem5_0.a1507548554);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(90, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(3, problem5_0.a1544481660);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(80, problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("jrIvd");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      
      problem5_0.calculateOutput("iG");
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(174, problem5_0.a1135414112);
      
      problem5_0.calculateOutput("iG");
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      
      problem5_0.calculateOutput("iG");
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-18772), problem5_0.a645550563);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-2908), problem5_0.a518089629);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-8876), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-19353), problem5_0.a1507548554);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-15464), problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-5815), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iA");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(214, problem5_0.a1135414112);
      assertEquals(90, problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(56, problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(102, problem5_0.a518089629);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(203, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-2), problem5_0.a1544481660);
      assertEquals(9, problem5_0.a1219723237);
      assertEquals(175, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(189, problem5_1.a645550563);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(7, problem5_1.a463267856);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals((-63), problem5_1.a1680669372);
      assertTrue(problem5_1.cf);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(90, problem5_1.a754912052);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(265, problem5_1.a82233648);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iG");
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(168, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(78, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(13, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(160, problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iI");
      assertEquals(5, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-16322), problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-375), problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals((-7294), problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-15017), problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-9341), problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-18293), problem5_0.a518089629);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(252, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iA");
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iA");
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iF");
      assertEquals(69, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(37, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(96, problem5_0.a1219723237);
      assertEquals(188, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(7, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(166, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(159, problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iA");
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(44, problem5_0.a1135414112);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-1623), problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-29325), problem5_0.a1219723237);
      assertEquals(7, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-24490), problem5_0.a1507548554);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-25124), problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(10, problem5_0.a424236355);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-18115), problem5_0.a754912052);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-19992), problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-15616), problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-16856), problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-2240), problem5_0.a518089629);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-13013), problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-8938), problem5_0.a1219723237);
      assertEquals((-13994), problem5_0.a1507548554);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-2564), problem5_0.a645550563);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(248, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      
      problem5_0.calculateOutput("iG");
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(248, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      
      problem5_0.calculateOutput("iI");
      assertEquals(9, problem5_0.a339428322);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-9341), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-7294), problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-16322), problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-15017), problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-375), problem5_0.a645550563);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-18293), problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      
      problem5_0.a2015506287 = (-8323580);
      problem5_0.a608789820 = 3;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("Zdj;v");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertNotNull(problem5_0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "g";
      stringArray0[1] = "f";
      stringArray0[3] = "f";
      stringArray0[5] = "i";
      problem5_0.a1389516315 = "i";
      problem5_0.a1867715898 = "H|am&4/:a`,h:WN ";
      stringArray0[6] = "e";
      stringArray0[7] = "g";
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(7, problem5_1.a463267856);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(189, problem5_1.a645550563);
      assertTrue(problem5_1.cf);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(9, problem5_1.a737138579);
      assertNotNull(problem5_1);
      
      problem5_1.a860255372 = "";
      problem5_1.calculateOutput("iC");
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(265, problem5_1.a82233648);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(2, problem5_1.a1922234987);
      assertEquals((-3810), problem5_1.a1219723237);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals((-5566), problem5_1.a645550563);
      assertEquals((-17812), problem5_1.a1135414112);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(9, problem5_1.a339428322);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(14, problem5_1.a362703815);
      assertEquals((-133), problem5_1.a518089629);
      assertEquals(1, problem5_1.a998820044);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(5, problem5_1.a674385059);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(6, problem5_1.a463267856);
      assertEquals((-2347), problem5_1.a1507548554);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(90, problem5_1.a754912052);
      assertEquals((-2422), problem5_1.a1544481660);
      assertEquals(8, problem5_1.a2015506287);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(10, problem5_1.a2112741742);
      assertFalse(problem5_1.cf);
      assertNotSame(problem5_1, problem5_0);
      
      problem5_1.calculateOutput("iC");
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(265, problem5_1.a82233648);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(2, problem5_1.a1922234987);
      assertEquals((-3810), problem5_1.a1219723237);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals((-5566), problem5_1.a645550563);
      assertEquals((-17812), problem5_1.a1135414112);
      assertEquals((-11462), problem5_1.a754912052);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(9, problem5_1.a339428322);
      assertEquals(17, problem5_1.a2112741742);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(14, problem5_1.a362703815);
      assertEquals((-133), problem5_1.a518089629);
      assertEquals(1, problem5_1.a998820044);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(11, problem5_1.a424236355);
      assertEquals(5, problem5_1.a674385059);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(6, problem5_1.a463267856);
      assertEquals((-2347), problem5_1.a1507548554);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals((-2422), problem5_1.a1544481660);
      assertEquals(8, problem5_1.a2015506287);
      assertEquals(9, problem5_1.a737138579);
      assertFalse(problem5_1.cf);
      assertNotSame(problem5_1, problem5_0);
      
      problem5_1.calculateOutput("iI");
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(16, problem5_1.a2112741742);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(265, problem5_1.a82233648);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(4, problem5_1.a1922234987);
      assertEquals(180, problem5_1.a518089629);
      assertEquals((-11462), problem5_1.a754912052);
      assertEquals(11, problem5_1.a339428322);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(157, problem5_1.a1544481660);
      assertEquals(11, problem5_1.a424236355);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(179, problem5_1.a1219723237);
      assertEquals(7, problem5_1.a674385059);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(3, problem5_1.a998820044);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(214, problem5_1.a645550563);
      assertEquals(8, problem5_1.a463267856);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(221, problem5_1.a1135414112);
      assertEquals(10, problem5_1.a2015506287);
      assertEquals(270, problem5_1.a1507548554);
      assertEquals(9, problem5_1.a737138579);
      assertFalse(problem5_1.cf);
      assertNotSame(problem5_1, problem5_0);
      
      String[] stringArray1 = new String[4];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "I";
      stringArray1[1] = "i";
      problem5_1.a339428322 = 3;
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(212, problem5_0.a1135414112);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(9, problem5_1.a737138579);
      assertTrue(problem5_1.cf);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(265, problem5_1.a82233648);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(96, problem5_1.a518089629);
      assertNotNull(problem5_1);
      
      problem5_1.a1867715898 = "g";
      problem5_0.a1276415105 = "e";
      problem5_0.a273097877 = "F<HA2).Nre|OPU-&";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a1175663450);
      assertTrue(problem5_0.cf);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(4, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(206, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      
      problem5_0.calculateOutput("iF");
      assertEquals(80, problem5_0.a518089629);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(173, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(174, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1544481660);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(164, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(90, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      
      problem5_0.calculateOutput("iI");
      assertEquals(4, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(157, problem5_0.a1219723237);
      assertEquals(268, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(220, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(244, problem5_0.a1507548554);
      assertEquals(156, problem5_0.a1544481660);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(328, problem5_0.a1135414112);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertTrue(problem5_0.cf);
      assertNotNull(problem5_0);
      
      String string0 = "iG";
      problem5_0.calculateOutput("iG");
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iG");
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(78, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.a2015506287 = (-658);
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertTrue(problem5_0.cf);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(90, problem5_0.a754912052);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(291, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iB");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(291, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-26543), problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(267, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(103, problem5_0.a754912052);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-918), problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-22043), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-14975), problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-496), problem5_0.a1135414112);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-2867), problem5_0.a645550563);
      
      problem5_0.calculateOutput("iB");
      assertEquals(83, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(267, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(103, problem5_0.a754912052);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(181, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(205, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(220, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(89, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(80, problem5_0.a1544481660);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("M2Qd^$vv3j1F");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(7, problem5_0.a463267856);
      assertTrue(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertNotNull(problem5_0);
      
      String string0 = "iB";
      problem5_0.calculateOutput("iA");
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(291, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-25861), problem5_0.a1544481660);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(8, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-25861), problem5_0.a1544481660);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iD");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertTrue(problem5_0.cf);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(222, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iA");
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-25017), problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iB");
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-25017), problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iB");
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(76, problem5_0.a1219723237);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(81, problem5_0.a518089629);
      assertEquals(202, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(105, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(183, problem5_0.a645550563);
      
      problem5_0.calculateOutput("iB");
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(76, problem5_0.a1219723237);
      assertFalse(problem5_0.cf);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(81, problem5_0.a518089629);
      assertEquals(202, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(105, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(183, problem5_0.a645550563);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iE");
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      
      problem5_0.a860255372 = "iE";
      problem5_0.calculateOutput("iE");
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-4076), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-2390), problem5_0.a1544481660);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-3128), problem5_0.a1507548554);
      assertEquals((-20360), problem5_0.a1219723237);
      assertEquals((-20417), problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-15245), problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iE");
      assertEquals(14, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(218, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(112, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(57, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(206, problem5_0.a1135414112);
      assertEquals(180, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals(121, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iE");
      assertEquals(14, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(218, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(112, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(57, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(206, problem5_0.a1135414112);
      assertEquals(180, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(121, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iE");
      assertEquals(14, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(218, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(39, problem5_0.a15580097);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(112, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(57, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(180, problem5_0.a645550563);
      assertEquals((-15729), problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(121, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iE");
      assertEquals(14, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(218, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(39, problem5_0.a15580097);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(112, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(57, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(180, problem5_0.a645550563);
      assertEquals((-15729), problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(121, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(23574, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(333, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(142, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(262, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(169, problem5_0.a1219723237);
      assertEquals(202, problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(23574, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iF");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(333, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(142, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(262, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(169, problem5_0.a1219723237);
      assertEquals(202, problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(23574, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iF");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(77, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(68, problem5_0.a518089629);
      assertEquals((-16), problem5_0.a1680669372);
      assertEquals(37, problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(232, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(176, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(176, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(262, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(202, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(333, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(142, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(169, problem5_0.a1219723237);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(262, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(202, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(333, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(142, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a362703815);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(169, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(59, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-36), problem5_0.a1680669372);
      assertEquals(184, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(12, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(113, problem5_0.a518089629);
      assertFalse(problem5_0.cf);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(30, problem5_0.a1544481660);
      assertEquals(171, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(189, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(264, problem5_0.a518089629);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      
      problem5_0.calculateOutput("iG");
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(168, problem5_0.a645550563);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(78, problem5_0.a518089629);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iG");
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      
      problem5_0.a1907639328 = "iG";
      String string0 = "iF";
      problem5_0.a2015506287 = 1748;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Problem5 problem5_0 = new Problem5();
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertNotNull(problem5_0);
      
      problem5_0.a860255372 = "";
      String string0 = "iI";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iI");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(241, problem5_0.a281657923);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertNotNull(problem5_0);
      
      String[] stringArray0 = new String[10];
      stringArray0[0] = "g";
      stringArray0[1] = "f";
      stringArray0[3] = "f";
      stringArray0[5] = "i";
      problem5_0.a1062464723 = "i";
      problem5_0.a1867715898 = "f";
      stringArray0[6] = "e";
      stringArray0[6] = "g";
      problem5_0.calculateOutput("iI");
      assertEquals(10, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(241, problem5_0.a281657923);
      assertFalse(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-70), problem5_0.a15580097);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertTrue(problem5_0.cf);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertNotNull(problem5_0);
      
      String string0 = "iG";
      problem5_0.calculateOutput("iG");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(206, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iA");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(163, problem5_0.a1135414112);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(57, problem5_0.a1544481660);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(114, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(17, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(177, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(205, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      
      String string1 = "iF";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertFalse(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(12, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(262, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(202, problem5_0.a645550563);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(333, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(142, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertFalse(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(169, problem5_0.a1219723237);
      assertEquals(14, problem5_0.a362703815);
      
      problem5_0.a2015506287 = 1952;
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(10, problem5_1.a339428322);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(9, problem5_1.a737138579);
      assertTrue(problem5_1.cf);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(172, problem5_1.a449177388);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(90, problem5_1.a754912052);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(12, problem5_1.a1176556958);
      assertNotNull(problem5_1);
      
      problem5_1.a1135414112 = (-1018);
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertTrue(problem5_0.cf);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(23574, problem5_0.a723549884);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(2, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(9, problem5_0.a339428322);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(4, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(169, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(202, problem5_0.a645550563);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(333, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(262, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(142, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iA");
      assertEquals(23574, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(117, problem5_0.a518089629);
      assertEquals((-18), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(39, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(167, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(219, problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(189, problem5_1.a645550563);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(2, problem5_1.a998820044);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(9, problem5_1.a737138579);
      assertTrue(problem5_1.cf);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(10, problem5_1.a339428322);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(189, problem5_0.a645550563);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(222, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a339428322);
      
      problem5_0.calculateOutput("iB");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(222, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a339428322);
      
      problem5_0.calculateOutput("iA");
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-19805), problem5_0.a1219723237);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-25530), problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-13951), problem5_0.a1507548554);
      assertEquals((-14339), problem5_0.a1544481660);
      assertEquals((-24028), problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-19912), problem5_0.a1135414112);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(191, problem5_0.a608789820);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(115, problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      
      problem5_0.calculateOutput("iB");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(204, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(180, problem5_0.a645550563);
      assertEquals(114, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(205, problem5_0.a1507548554);
      assertEquals(191, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(86, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(115, problem5_0.a754912052);
      
      problem5_0.calculateOutput("iB");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(204, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(180, problem5_0.a645550563);
      assertEquals(114, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(205, problem5_0.a1507548554);
      assertEquals(191, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(86, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(115, problem5_0.a754912052);
      
      problem5_0.calculateOutput("iB");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(204, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(180, problem5_0.a645550563);
      assertEquals(114, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(205, problem5_0.a1507548554);
      assertEquals(191, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(86, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(115, problem5_0.a754912052);
      
      problem5_0.calculateOutput("iA");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-5831), problem5_0.a518089629);
      assertEquals((-24776), problem5_0.a754912052);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(191, problem5_0.a608789820);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-21367), problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-5721), problem5_0.a1507548554);
      assertEquals((-2271), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-15482), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-10836), problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(8, problem5_0.a2015506287);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(264, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iG");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(168, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iG");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(207, problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(125, problem5_0.a1544481660);
      
      problem5_0.a518089629 = 9;
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(96, problem5_1.a518089629);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(7, problem5_1.a463267856);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(6, problem5_1.a674385059);
      assertTrue(problem5_1.cf);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(10, problem5_1.a339428322);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals((-42), problem5_1.a2077034612);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(10, problem5_0.a339428322);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iG");
      assertEquals(168, problem5_0.a645550563);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(3, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      
      problem5_0.calculateOutput("iG");
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iA");
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-21032), problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-19792), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-22849), problem5_0.a518089629);
      assertEquals((-23026), problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-10922), problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-23244), problem5_0.a1135414112);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(168, problem5_0.a645550563);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      
      problem5_0.calculateOutput("iG");
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-18772), problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-5815), problem5_0.a1135414112);
      assertEquals((-15464), problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-2908), problem5_0.a518089629);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-8876), problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-19353), problem5_0.a1507548554);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(107, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(87, problem5_0.a1544481660);
      assertEquals(65, problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1680669372);
      assertEquals(199, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(185, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(181, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      
      String string0 = "g";
      problem5_0.calculateOutput("iG");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(107, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(87, problem5_0.a1544481660);
      assertEquals(65, problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1680669372);
      assertEquals(199, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(185, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(181, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      
      problem5_0.a518089629 = 762;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("I3]a/;0?qkT0");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      
      problem5_0.calculateOutput("iG");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(78, problem5_0.a518089629);
      
      String[] stringArray0 = new String[6];
      problem5_0.a753458331 = "";
      stringArray0[0] = "i";
      stringArray0[1] = "Problem5";
      stringArray0[2] = "@";
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(10, problem5_1.a339428322);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(6, problem5_1.a674385059);
      assertTrue(problem5_1.cf);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(213, problem5_1.a723549884);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertNotNull(problem5_0);
      
      problem5_0.a1389516315 = problem5_0.a1389516315;
      problem5_0.a1867715898 = "H|am&4/:a`,h:WN ";
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(6, problem5_1.a674385059);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(9, problem5_1.a737138579);
      assertEquals((-42), problem5_1.a2077034612);
      assertTrue(problem5_1.cf);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(112, problem5_1.a1219723237);
      assertNotNull(problem5_1);
      
      problem5_1.a860255372 = "";
      problem5_1.calculateOutput("iC");
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals((-17812), problem5_1.a1135414112);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(9, problem5_1.a339428322);
      assertEquals(14, problem5_1.a362703815);
      assertEquals((-133), problem5_1.a518089629);
      assertEquals(213, problem5_1.a723549884);
      assertEquals((-2422), problem5_1.a1544481660);
      assertEquals((-5566), problem5_1.a645550563);
      assertFalse(problem5_1.cf);
      assertEquals(2, problem5_1.a1922234987);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(172, problem5_1.a449177388);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(10, problem5_1.a2112741742);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(8, problem5_1.a2015506287);
      assertEquals(90, problem5_1.a754912052);
      assertEquals((-3810), problem5_1.a1219723237);
      assertEquals(9, problem5_1.a737138579);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(1, problem5_1.a998820044);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(5, problem5_1.a674385059);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(6, problem5_1.a463267856);
      assertEquals((-2347), problem5_1.a1507548554);
      assertNotSame(problem5_1, problem5_0);
      
      problem5_1.calculateOutput("iI");
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals((-17812), problem5_1.a1135414112);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(9, problem5_1.a339428322);
      assertEquals(14, problem5_1.a362703815);
      assertEquals((-133), problem5_1.a518089629);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(17, problem5_1.a2112741742);
      assertEquals((-2422), problem5_1.a1544481660);
      assertEquals((-5566), problem5_1.a645550563);
      assertFalse(problem5_1.cf);
      assertEquals(2, problem5_1.a1922234987);
      assertEquals((-12436), problem5_1.a754912052);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(172, problem5_1.a449177388);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(8, problem5_1.a2015506287);
      assertEquals((-3810), problem5_1.a1219723237);
      assertEquals(9, problem5_1.a737138579);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(11, problem5_1.a424236355);
      assertEquals(1, problem5_1.a998820044);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(5, problem5_1.a674385059);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(6, problem5_1.a463267856);
      assertEquals((-2347), problem5_1.a1507548554);
      assertNotSame(problem5_1, problem5_0);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(222, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iA");
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertFalse(problem5_0.cf);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-25017), problem5_0.a1219723237);
      
      // SystemInUtil.addInputLine("%j1x^lC)'z({z");
      problem5_0.calculateOutput("iB");
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(183, problem5_0.a608789820);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertFalse(problem5_0.cf);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-25017), problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iF");
      assertEquals(207, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(183, problem5_0.a608789820);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(118, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(187, problem5_0.a1507548554);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(96, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertFalse(problem5_0.cf);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(10, problem5_1.a339428322);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(2, problem5_1.a998820044);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(265, problem5_1.a82233648);
      assertTrue(problem5_1.cf);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(112, problem5_1.a1219723237);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("SKYI");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(172, problem5_0.a449177388);
      assertTrue(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertFalse(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      
      // SystemInUtil.addInputLine("g");
      problem5_0.calculateOutput("iF");
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-13994), problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-2240), problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-16856), problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-8938), problem5_0.a1219723237);
      assertEquals((-2564), problem5_0.a645550563);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-15616), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      
      problem5_0.calculateOutput("iB");
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(36, problem5_0.a1219723237);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(164, problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(117, problem5_0.a1544481660);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(165, problem5_0.a1507548554);
      assertEquals(113, problem5_0.a518089629);
      
      problem5_0.calculateOutput("iB");
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-27043), problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-17060), problem5_0.a1135414112);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-28), problem5_0.a1544481660);
      assertEquals((-14918), problem5_0.a1507548554);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-8942), problem5_0.a2077034612);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(237, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-24500), problem5_0.a518089629);
      assertFalse(problem5_0.cf);
      assertEquals((-3), problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      
      problem5_0.calculateOutput("iB");
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-17060), problem5_0.a1135414112);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(160, problem5_0.a1507548554);
      assertEquals(112, problem5_0.a518089629);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(5, problem5_0.a15580097);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-15), problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-8942), problem5_0.a2077034612);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(237, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("G09V,Nl*!MS`$R");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      
      // SystemInUtil.addInputLine("iB");
      // SystemInUtil.addInputLine("i");
      problem5_0.calculateOutput("iB");
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      
      problem5_0.calculateOutput("iB");
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-27043), problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-28), problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(271, problem5_0.a754912052);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-11219), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-20308), problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-26785), problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals((-3), problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-22687), problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(6, problem5_1.a674385059);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(212, problem5_1.a1135414112);
      assertTrue(problem5_1.cf);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(90, problem5_1.a754912052);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(213, problem5_1.a723549884);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(12, problem5_1.a1176556958);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(189, problem5_0.a645550563);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(189, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      
      // SystemInUtil.addInputLine("f");
      problem5_0.calculateOutput("iB");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(189, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      
      // SystemInUtil.addInputLine("i");
      problem5_0.calculateOutput("iB");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(189, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iB");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-11219), problem5_0.a2077034612);
      assertEquals((-20308), problem5_0.a1507548554);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(271, problem5_0.a754912052);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-28), problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-22687), problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-27043), problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-26785), problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-3), problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iB");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(55, problem5_0.a15580097);
      assertEquals((-11219), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(271, problem5_0.a754912052);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(104, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-26785), problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      assertEquals(6, problem5_0.a1544481660);
      assertEquals(169, problem5_0.a1507548554);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-20825), problem5_0.a1185506925);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertFalse(problem5_0.cf);
      assertEquals(113, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(193, problem5_0.a1135414112);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(96, problem5_0.a518089629);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(96, problem5_0.a518089629);
      
      // SystemInUtil.addInputLine("f");
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(96, problem5_0.a518089629);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(96, problem5_0.a518089629);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a1176556958);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(96, problem5_0.a518089629);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a1176556958);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(96, problem5_0.a518089629);
      
      String string0 = "DcwBz*k\\!x?P'32I";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("DcwBz*k!x?P'32I");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertTrue(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(5, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      
      problem5_0.calculateOutput("iB");
      assertEquals(23574, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(160, problem5_0.a1507548554);
      assertEquals(120, problem5_0.a1219723237);
      assertEquals(99, problem5_0.a518089629);
      assertEquals(17201, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(153, problem5_0.a1135414112);
      assertEquals(28, problem5_0.a1544481660);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(181, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(5, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(2, problem5_1.a998820044);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(7, problem5_1.a463267856);
      assertTrue(problem5_1.cf);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(12, problem5_1.a424236355);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(14, problem5_1.a362703815);
      assertNotNull(problem5_1);
      
      Problem5 problem5_2 = new Problem5();
      assertFalse(problem5_2.equals((Object)problem5_1));
      assertFalse(problem5_2.equals((Object)problem5_0));
      assertEquals(213, problem5_2.a723549884);
      assertEquals(75, problem5_2.a321762694);
      assertEquals(3, problem5_2.a608789820);
      assertEquals(9, problem5_2.a2015506287);
      assertEquals((-42), problem5_2.a2077034612);
      assertEquals(15, problem5_2.a2112741742);
      assertEquals(201, problem5_2.a1507548554);
      assertEquals(2, problem5_2.a998820044);
      assertEquals(10, problem5_2.a339428322);
      assertEquals(212, problem5_2.a1135414112);
      assertEquals(14, problem5_2.a362703815);
      assertEquals(96, problem5_2.a518089629);
      assertEquals(6, problem5_2.a674385059);
      assertEquals(1, problem5_2.a1138218523);
      assertEquals(7, problem5_2.a463267856);
      assertEquals(15, problem5_2.a1185559685);
      assertEquals(241, problem5_2.a281657923);
      assertEquals(68, problem5_2.a1185506925);
      assertEquals((-34), problem5_2.a853335314);
      assertEquals(90, problem5_2.a754912052);
      assertEquals(265, problem5_2.a82233648);
      assertEquals(12, problem5_2.a424236355);
      assertEquals(113, problem5_2.a1240663365);
      assertTrue(problem5_2.cf);
      assertEquals(172, problem5_2.a449177388);
      assertEquals(9, problem5_2.a737138579);
      assertEquals((-70), problem5_2.a15580097);
      assertEquals(12, problem5_2.a1176556958);
      assertEquals(189, problem5_2.a645550563);
      assertEquals((-63), problem5_2.a1680669372);
      assertEquals(6, problem5_2.a1175663450);
      assertEquals(114, problem5_2.a1544481660);
      assertEquals(318, problem5_2.a1318003364);
      assertEquals(3, problem5_2.a1922234987);
      assertEquals(112, problem5_2.a1219723237);
      assertNotNull(problem5_2);
      
      // Undeclared exception!
      try { 
        problem5_2.calculateOutput("e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      
      // SystemInUtil.addInputLine("i");
      problem5_0.calculateOutput("iB");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(5, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      
      problem5_0.calculateOutput("iB");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(153, problem5_0.a1135414112);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(181, problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(28, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(17201, problem5_0.a754912052);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(99, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(120, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(160, problem5_0.a1507548554);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(5, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(153, problem5_0.a1135414112);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(181, problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(28, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(17201, problem5_0.a754912052);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(99, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(23574, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(120, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(160, problem5_0.a1507548554);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(5, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      
      problem5_0.calculateOutput("iB");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(153, problem5_0.a1135414112);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(181, problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(28, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(17201, problem5_0.a754912052);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(99, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(23574, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(120, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(160, problem5_0.a1507548554);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(5, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput(">RjQg");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertTrue(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertNotNull(problem5_0);
      
      BufferedReader bufferedReader0 = Problem5.stdin;
      assertNotNull(bufferedReader0);
      
      Problem5.stdin = bufferedReader0;
      problem5_0.calculateOutput("iG");
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(264, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(78, problem5_0.a518089629);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      
      problem5_0.calculateOutput("iG");
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(238, problem5_0.a518089629);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-19353), problem5_0.a1507548554);
      assertEquals((-18772), problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-8876), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-5815), problem5_0.a1135414112);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(2, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-2908), problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-15464), problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(12, problem5_0.a424236355);
      
      problem5_0.calculateOutput("iB");
      assertEquals(65, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(113, problem5_0.a1680669372);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(181, problem5_0.a645550563);
      assertEquals(107, problem5_0.a518089629);
      assertEquals(87, problem5_0.a1544481660);
      assertEquals(185, problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(199, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      
      problem5_0.calculateOutput("iB");
      assertEquals(65, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(113, problem5_0.a1680669372);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(181, problem5_0.a645550563);
      assertEquals(107, problem5_0.a518089629);
      assertEquals(87, problem5_0.a1544481660);
      assertEquals(185, problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(199, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "iB";
      stringArray0[1] = "g";
      problem5_0.a1276062311 = "g";
      problem5_0.calculateOutput("iI");
      assertEquals(65, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(113, problem5_0.a1680669372);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(181, problem5_0.a645550563);
      assertEquals(107, problem5_0.a518089629);
      assertEquals(87, problem5_0.a1544481660);
      assertEquals(185, problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(199, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertTrue(problem5_0.cf);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(78, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertFalse(problem5_0.cf);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(205, problem5_0.a645550563);
      assertEquals(139, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(193, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(339, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(271, problem5_0.a518089629);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(255, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-15224), problem5_0.a518089629);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-15901), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-16289), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertFalse(problem5_0.cf);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-15186), problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-28427), problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-19292), problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      
      problem5_0.calculateOutput("iG");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(174, problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      
      problem5_0.calculateOutput("iG");
      assertEquals(160, problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      
      problem5_0.calculateOutput("iF");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-29360), problem5_0.a1544481660);
      assertEquals((-15181), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-11874), problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-24966), problem5_0.a1219723237);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-16840), problem5_0.a1507548554);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-18891), problem5_0.a645550563);
      
      problem5_0.calculateOutput("iF");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(180, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(89, problem5_0.a1680669372);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(71, problem5_0.a1544481660);
      assertEquals(71, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(184, problem5_0.a645550563);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(193, problem5_0.a1135414112);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(122, problem5_0.a1219723237);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertTrue(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(189, problem5_0.a645550563);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(222, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(14, problem5_0.a1544481660);
      assertEquals(185, problem5_0.a645550563);
      assertEquals(77, problem5_0.a518089629);
      assertEquals(209, problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(204, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a1219723237);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      
      String string0 = "z@o^Ku|!6[H";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("z@o^Ku|!6[H");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(3, problem5_0.a998820044);
      
      problem5_0.calculateOutput("iG");
      assertEquals(78, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(255, problem5_0.a1507548554);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(139, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(205, problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(339, problem5_0.a1135414112);
      assertEquals(271, problem5_0.a518089629);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(193, problem5_0.a1219723237);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a998820044);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(9, problem5_1.a737138579);
      assertTrue(problem5_1.cf);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(10, problem5_1.a339428322);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals((-70), problem5_1.a15580097);
      assertNotNull(problem5_1);
      
      Problem5 problem5_2 = new Problem5();
      assertFalse(problem5_2.equals((Object)problem5_0));
      assertFalse(problem5_2.equals((Object)problem5_1));
      assertEquals(189, problem5_2.a645550563);
      assertEquals(3, problem5_2.a1922234987);
      assertEquals(68, problem5_2.a1185506925);
      assertEquals(241, problem5_2.a281657923);
      assertEquals((-42), problem5_2.a2077034612);
      assertEquals(2, problem5_2.a998820044);
      assertEquals(213, problem5_2.a723549884);
      assertEquals(15, problem5_2.a2112741742);
      assertEquals(15, problem5_2.a1185559685);
      assertEquals(96, problem5_2.a518089629);
      assertEquals((-70), problem5_2.a15580097);
      assertEquals(75, problem5_2.a321762694);
      assertEquals(201, problem5_2.a1507548554);
      assertEquals((-34), problem5_2.a853335314);
      assertEquals(7, problem5_2.a463267856);
      assertEquals(10, problem5_2.a339428322);
      assertEquals(6, problem5_2.a674385059);
      assertEquals(113, problem5_2.a1240663365);
      assertEquals(3, problem5_2.a608789820);
      assertEquals(9, problem5_2.a2015506287);
      assertEquals(12, problem5_2.a424236355);
      assertEquals(212, problem5_2.a1135414112);
      assertEquals(12, problem5_2.a1176556958);
      assertEquals(1, problem5_2.a1138218523);
      assertEquals(114, problem5_2.a1544481660);
      assertEquals(6, problem5_2.a1175663450);
      assertEquals(14, problem5_2.a362703815);
      assertEquals(172, problem5_2.a449177388);
      assertEquals(112, problem5_2.a1219723237);
      assertEquals(90, problem5_2.a754912052);
      assertEquals(265, problem5_2.a82233648);
      assertTrue(problem5_2.cf);
      assertEquals(318, problem5_2.a1318003364);
      assertEquals(9, problem5_2.a737138579);
      assertEquals((-63), problem5_2.a1680669372);
      assertNotNull(problem5_2);
      
      problem5_0.calculateOutput("iC");
      assertFalse(problem5_0.equals((Object)problem5_2));
      assertFalse(problem5_0.equals((Object)problem5_1));
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-6342), problem5_0.a1135414112);
      assertEquals((-24854), problem5_0.a645550563);
      assertEquals((-11678), problem5_0.a1544481660);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-16124), problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-18623), problem5_0.a1219723237);
      assertEquals((-27319), problem5_0.a1507548554);
      assertNotSame(problem5_0, problem5_2);
      assertNotSame(problem5_0, problem5_1);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertTrue(problem5_0.cf);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(206, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iG");
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(168, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      
      // SystemInUtil.addInputLine(",ctn?5$y-.32~O(Yq9");
      problem5_0.calculateOutput("iD");
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(236, problem5_0.a518089629);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(203, problem5_0.a645550563);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(172, problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(256, problem5_0.a1507548554);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(146, problem5_0.a1544481660);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(291, problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("L8?0b#P~$^T;_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertNotNull(problem5_0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "g";
      stringArray0[1] = "f";
      stringArray0[3] = "f";
      stringArray0[5] = "i";
      problem5_0.a1389516315 = "i";
      problem5_0.a1867715898 = "H|am&4/:a`,h:WN ";
      stringArray0[6] = "e";
      stringArray0[7] = "g";
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(96, problem5_1.a518089629);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(265, problem5_1.a82233648);
      assertEquals((-63), problem5_1.a1680669372);
      assertTrue(problem5_1.cf);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(10, problem5_1.a339428322);
      assertNotNull(problem5_1);
      
      problem5_1.a860255372 = "";
      problem5_1.calculateOutput("iC");
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals((-2347), problem5_1.a1507548554);
      assertEquals((-3810), problem5_1.a1219723237);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(5, problem5_1.a674385059);
      assertEquals(6, problem5_1.a463267856);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals((-2422), problem5_1.a1544481660);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(213, problem5_1.a723549884);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals((-133), problem5_1.a518089629);
      assertEquals(10, problem5_1.a2112741742);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(8, problem5_1.a2015506287);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(9, problem5_1.a339428322);
      assertEquals((-17812), problem5_1.a1135414112);
      assertEquals(9, problem5_1.a737138579);
      assertFalse(problem5_1.cf);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(2, problem5_1.a1922234987);
      assertEquals((-5566), problem5_1.a645550563);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(1, problem5_1.a998820044);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(12, problem5_1.a424236355);
      assertNotSame(problem5_1, problem5_0);
      
      problem5_1.calculateOutput("iC");
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals((-2347), problem5_1.a1507548554);
      assertEquals((-3810), problem5_1.a1219723237);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(5, problem5_1.a674385059);
      assertEquals(6, problem5_1.a463267856);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(17, problem5_1.a2112741742);
      assertEquals((-2422), problem5_1.a1544481660);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(213, problem5_1.a723549884);
      assertEquals((-11462), problem5_1.a754912052);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals((-133), problem5_1.a518089629);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(8, problem5_1.a2015506287);
      assertEquals(11, problem5_1.a424236355);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(9, problem5_1.a339428322);
      assertEquals((-17812), problem5_1.a1135414112);
      assertEquals(9, problem5_1.a737138579);
      assertFalse(problem5_1.cf);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(2, problem5_1.a1922234987);
      assertEquals((-5566), problem5_1.a645550563);
      assertEquals(1, problem5_1.a998820044);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(3, problem5_1.a608789820);
      assertNotSame(problem5_1, problem5_0);
      
      problem5_1.calculateOutput("iI");
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(214, problem5_1.a645550563);
      assertEquals(8, problem5_1.a463267856);
      assertEquals(7, problem5_1.a674385059);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(213, problem5_1.a723549884);
      assertEquals((-11462), problem5_1.a754912052);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(11, problem5_1.a339428322);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(157, problem5_1.a1544481660);
      assertEquals(221, problem5_1.a1135414112);
      assertEquals(3, problem5_1.a998820044);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(11, problem5_1.a424236355);
      assertEquals(10, problem5_1.a2015506287);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(9, problem5_1.a737138579);
      assertFalse(problem5_1.cf);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(270, problem5_1.a1507548554);
      assertEquals(16, problem5_1.a2112741742);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(179, problem5_1.a1219723237);
      assertEquals(180, problem5_1.a518089629);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(4, problem5_1.a1922234987);
      assertNotSame(problem5_1, problem5_0);
      
      String[] stringArray1 = new String[4];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "I";
      problem5_1.a273097877 = "i";
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(222, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iB");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(222, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iB");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-918), problem5_0.a518089629);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(2, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals((-496), problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-22043), problem5_0.a1544481660);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-2867), problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-26543), problem5_0.a1219723237);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(267, problem5_0.a608789820);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-14975), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(103, problem5_0.a754912052);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iC");
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(187, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(174, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(85, problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(184, problem5_0.a1135414112);
      assertEquals(109, problem5_0.a518089629);
      assertEquals(267, problem5_0.a608789820);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-8), problem5_0.a1544481660);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(103, problem5_0.a754912052);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "f";
      stringArray0[1] = "f";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput(">ZuW");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(189, problem5_0.a645550563);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      
      // SystemInUtil.addInputLine("iE");
      problem5_0.calculateOutput("iE");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(80, problem5_0.a1219723237);
      assertEquals(5365, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(177, problem5_0.a645550563);
      assertEquals(121, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(58, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(189, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(191, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a2015506287);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertTrue(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertNotNull(problem5_0);
      
      String string0 = "iG";
      problem5_0.calculateOutput("iG");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(264, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(274, problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      
      problem5_0.a463267856 = (-1547);
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertNotNull(problem5_0);
      
      String string0 = "iG";
      problem5_0.calculateOutput("iB");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("oX");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(12, problem5_0.a1176556958);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      
      // SystemInUtil.addInputLine("f");
      problem5_0.calculateOutput("iG");
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertNotNull(problem5_0);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(172, problem5_1.a449177388);
      assertTrue(problem5_1.cf);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals((-70), problem5_1.a15580097);
      assertNotNull(problem5_1);
      
      problem5_0.calculateOutput("iC");
      assertFalse(problem5_0.equals((Object)problem5_1));
      assertEquals((-5566), problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-133), problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-3810), problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-2347), problem5_0.a1507548554);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-2422), problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-17812), problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertNotSame(problem5_0, problem5_1);
      
      problem5_0.calculateOutput("iE");
      assertFalse(problem5_0.equals((Object)problem5_1));
      assertEquals((-5566), problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-133), problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-3810), problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-2347), problem5_0.a1507548554);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-2422), problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-17812), problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertNotSame(problem5_0, problem5_1);
      
      String string0 = "Xb";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(264, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      
      problem5_0.calculateOutput("iD");
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(193, problem5_0.a1507548554);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(61, problem5_0.a1219723237);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(188, problem5_0.a645550563);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(72, problem5_0.a1544481660);
      assertEquals(106, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(159, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("Czb\"]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertTrue(problem5_0.cf);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(222, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(144, problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iA");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(175, problem5_0.a1318003364);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      
      problem5_0.calculateOutput("iB");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(183, problem5_0.a608789820);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(175, problem5_0.a1318003364);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      
      problem5_0.calculateOutput("iB");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(105, problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(213, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(183, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(202, problem5_0.a1507548554);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(81, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(76, problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      
      problem5_0.calculateOutput("iA");
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(105, problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(213, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(183, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(202, problem5_0.a1507548554);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(81, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(76, problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("^FB\"n;h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      
      problem5_0.a1544481660 = (-1084);
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertNotNull(problem5_0);
      
      String string0 = "iG";
      problem5_0.calculateOutput("iB");
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(189, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      
      // SystemInUtil.addInputLine("f");
      problem5_0.calculateOutput("iG");
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(189, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      
      problem5_0.calculateOutput("iG");
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(337, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(136, problem5_0.a1544481660);
      assertEquals(26821, problem5_0.a1240663365);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(156, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(200, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(251, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(181, problem5_0.a1219723237);
      assertEquals(4, problem5_0.a1922234987);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("oX");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertTrue(problem5_0.cf);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      
      // SystemInUtil.addInputLine("f");
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(181, problem5_0.a1219723237);
      assertEquals(26821, problem5_0.a1240663365);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(337, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(200, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(251, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(156, problem5_0.a518089629);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(136, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      
      String[] stringArray0 = new String[4];
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      // SystemInUtil.addInputLine("f");
      // SystemInUtil.addInputLine("!/P@Z_Q^O$;|x{NV");
      problem5_0.calculateOutput("iG");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.a1526400317 = "iG";
      problem5_0.calculateOutput("iH");
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(385, problem5_0.a1135414112);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(167, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(22891, problem5_0.a1240663365);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(145, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(270, problem5_0.a1507548554);
      assertEquals(205, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(133, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(4, problem5_0.a1922234987);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("zju=]ew");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertNotNull(problem5_0);
      
      String string0 = "iG";
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      
      // SystemInUtil.addInputLine("f");
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertTrue(problem5_0.cf);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      
      // SystemInUtil.addInputLine("f");
      // SystemInUtil.addInputLine("!/P@Z_Q^O$;|x{NV");
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      
      problem5_0.a1526400317 = "iG";
      problem5_0.calculateOutput("iG");
      assertEquals(337, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(200, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(181, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(26821, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(251, problem5_0.a1507548554);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(156, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(136, problem5_0.a1544481660);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      
      problem5_0.calculateOutput("iH");
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(26821, problem5_0.a1240663365);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(182, problem5_0.a645550563);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(210, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(11, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(72, problem5_0.a1544481660);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(217, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(107, problem5_0.a518089629);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("zju=]ew");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertTrue(problem5_0.cf);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertFalse(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      
      // SystemInUtil.addInputLine("f");
      // SystemInUtil.addInputLine("!/P@Z_Q^O$;|x{NV");
      problem5_0.calculateOutput("iG");
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-31), problem5_0.a853335314);
      assertFalse(problem5_0.cf);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      
      String string0 = "iA";
      problem5_0.calculateOutput("iA");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-31), problem5_0.a853335314);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(349, problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(154, problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(266, problem5_0.a1507548554);
      assertEquals(7065, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(151, problem5_0.a1219723237);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      
      String string1 = "k)'w\"(@";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("k)'w\"(@");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a362703815);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(115, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals((-19805), problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-19912), problem5_0.a1135414112);
      assertEquals((-24028), problem5_0.a518089629);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(191, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-25530), problem5_0.a645550563);
      assertEquals((-13951), problem5_0.a1507548554);
      assertEquals((-14339), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a362703815);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(14, problem5_1.a362703815);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(75, problem5_1.a321762694);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(318, problem5_1.a1318003364);
      assertTrue(problem5_1.cf);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(10, problem5_1.a339428322);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals((-70), problem5_1.a15580097);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("'MGX&8^s_'z$");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(291, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertFalse(problem5_0.cf);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      
      problem5_0.calculateOutput("iB");
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertFalse(problem5_0.cf);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      
      problem5_0.a1062464723 = "iA";
      String string0 = "iG";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertTrue(problem5_0.cf);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      
      problem5_0.calculateOutput("iA");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(267, problem5_0.a1507548554);
      assertEquals(198, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(164, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(152, problem5_0.a1544481660);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(228, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(388, problem5_0.a1135414112);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iA");
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-28487), problem5_0.a518089629);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-16071), problem5_0.a1135414112);
      assertEquals((-18980), problem5_0.a1219723237);
      assertEquals(211, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a754912052);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-7100), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-7819), problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-22374), problem5_0.a645550563);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(265, problem5_1.a82233648);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(14, problem5_1.a362703815);
      assertTrue(problem5_1.cf);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(241, problem5_1.a281657923);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(1, problem5_1.a1138218523);
      assertNotNull(problem5_1);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iC");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-3810), problem5_0.a1219723237);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-2347), problem5_0.a1507548554);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-5566), problem5_0.a645550563);
      assertEquals((-133), problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-17812), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-2422), problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      
      problem5_0.calculateOutput("iH");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-3810), problem5_0.a1219723237);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(11, problem5_0.a424236355);
      assertEquals((-2461), problem5_0.a754912052);
      assertEquals((-2347), problem5_0.a1507548554);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-5566), problem5_0.a645550563);
      assertEquals((-133), problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-17812), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-2422), problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      
      String string0 = "oY";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("oY");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(158, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iB");
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(213, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(183, problem5_0.a645550563);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(202, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(105, problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(76, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(81, problem5_0.a518089629);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iB");
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(213, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(183, problem5_0.a645550563);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(202, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(105, problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(76, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(81, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iC");
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(213, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(183, problem5_0.a645550563);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(202, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(105, problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(76, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(81, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertNotNull(problem5_0);
      
      problem5_0.a518089629 = 680;
      String string0 = "iG";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(241, problem5_0.a281657923);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(8, problem5_0.a463267856);
      
      // SystemInUtil.addInputLine("iE");
      problem5_0.calculateOutput("iG");
      assertEquals(241, problem5_0.a281657923);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(78, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      
      problem5_0.calculateOutput("iA");
      assertEquals(241, problem5_0.a281657923);
      assertEquals(244, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(195, problem5_0.a645550563);
      assertEquals(142, problem5_0.a1544481660);
      assertEquals(357, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(148, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(237, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertTrue(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      
      // // SystemInUtil.addInputLine("h");
      problem5_0.calculateOutput("iB");
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iA");
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(115, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-25530), problem5_0.a645550563);
      assertEquals((-13951), problem5_0.a1507548554);
      assertEquals((-14339), problem5_0.a1544481660);
      assertEquals((-24028), problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(191, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-19805), problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-19912), problem5_0.a1135414112);
      
      problem5_0.calculateOutput("iA");
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(266, problem5_0.a1507548554);
      assertEquals(115, problem5_0.a754912052);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(153, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(305, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(200, problem5_0.a645550563);
      assertEquals(191, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(150, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertTrue(problem5_0.cf);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-10331), problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-26197), problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(245, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-26168), problem5_0.a1507548554);
      assertEquals((-29656), problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(107, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-26262), problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-20962), problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(151, problem5_0.a1219723237);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(245, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(193, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(267, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(139, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(157, problem5_0.a518089629);
      assertEquals(325, problem5_0.a1135414112);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(212, problem5_1.a1135414112);
      assertTrue(problem5_1.cf);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(6, problem5_1.a1175663450);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertTrue(problem5_0.cf);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      
      // SystemInUtil.addInputLine("f");
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      
      // SystemInUtil.addInputLine("i");
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(210, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(167, problem5_0.a1219723237);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(25114, problem5_0.a1240663365);
      assertEquals(251, problem5_0.a1507548554);
      assertEquals(280, problem5_0.a518089629);
      assertEquals(150, problem5_0.a1544481660);
      assertEquals(386, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(199, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(124, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(237, problem5_0.a1135414112);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(190, problem5_0.a645550563);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(30, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(25114, problem5_0.a1240663365);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(8, problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-27972), problem5_0.a518089629);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-10741), problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-22263), problem5_0.a1544481660);
      assertEquals((-21290), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(25114, problem5_0.a1240663365);
      assertEquals((-7551), problem5_0.a645550563);
      assertEquals(5, problem5_0.a1138218523);
      assertEquals((-28166), problem5_0.a1219723237);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-27972), problem5_0.a518089629);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-10741), problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-22263), problem5_0.a1544481660);
      assertEquals((-21290), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(25114, problem5_0.a1240663365);
      assertEquals((-7551), problem5_0.a645550563);
      assertEquals(5, problem5_0.a1138218523);
      assertEquals((-28166), problem5_0.a1219723237);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertTrue(problem5_0.cf);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iB");
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iG");
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(251, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(150, problem5_0.a1544481660);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(386, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(167, problem5_0.a1219723237);
      assertEquals(280, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(210, problem5_0.a645550563);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(25114, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(189, problem5_1.a645550563);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(114, problem5_1.a1544481660);
      assertTrue(problem5_1.cf);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(112, problem5_1.a1219723237);
      assertNotNull(problem5_1);
      
      Problem5 problem5_2 = new Problem5();
      assertFalse(problem5_2.equals((Object)problem5_1));
      assertFalse(problem5_2.equals((Object)problem5_0));
      assertEquals(112, problem5_2.a1219723237);
      assertEquals(15, problem5_2.a1185559685);
      assertEquals(10, problem5_2.a339428322);
      assertEquals(6, problem5_2.a674385059);
      assertEquals(12, problem5_2.a424236355);
      assertEquals(2, problem5_2.a998820044);
      assertTrue(problem5_2.cf);
      assertEquals((-34), problem5_2.a853335314);
      assertEquals(68, problem5_2.a1185506925);
      assertEquals(113, problem5_2.a1240663365);
      assertEquals(265, problem5_2.a82233648);
      assertEquals(7, problem5_2.a463267856);
      assertEquals(212, problem5_2.a1135414112);
      assertEquals(114, problem5_2.a1544481660);
      assertEquals((-42), problem5_2.a2077034612);
      assertEquals(6, problem5_2.a1175663450);
      assertEquals(15, problem5_2.a2112741742);
      assertEquals((-70), problem5_2.a15580097);
      assertEquals(96, problem5_2.a518089629);
      assertEquals(201, problem5_2.a1507548554);
      assertEquals(75, problem5_2.a321762694);
      assertEquals(9, problem5_2.a2015506287);
      assertEquals(1, problem5_2.a1138218523);
      assertEquals(241, problem5_2.a281657923);
      assertEquals(12, problem5_2.a1176556958);
      assertEquals(3, problem5_2.a608789820);
      assertEquals(318, problem5_2.a1318003364);
      assertEquals(3, problem5_2.a1922234987);
      assertEquals((-63), problem5_2.a1680669372);
      assertEquals(9, problem5_2.a737138579);
      assertEquals(189, problem5_2.a645550563);
      assertEquals(172, problem5_2.a449177388);
      assertEquals(14, problem5_2.a362703815);
      assertEquals(213, problem5_2.a723549884);
      assertEquals(90, problem5_2.a754912052);
      assertNotNull(problem5_2);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      
      problem5_0.calculateOutput("iB");
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-16302), problem5_0.a645550563);
      assertEquals((-17370), problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertFalse(problem5_0.cf);
      assertEquals(301, problem5_0.a608789820);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-28019), problem5_0.a1219723237);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-15168), problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-19651), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-5823), problem5_0.a1507548554);
      assertEquals(110, problem5_0.a754912052);
      
      String string0 = "'*J+*ci@.8,";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("'*J+*ci@.8,");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iF");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-17449), problem5_0.a1544481660);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(8, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-13852), problem5_0.a645550563);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-19544), problem5_0.a518089629);
      
      problem5_0.calculateOutput("iA");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-17449), problem5_0.a1544481660);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-13852), problem5_0.a645550563);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-19544), problem5_0.a518089629);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(94, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(41, problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(203, problem5_0.a1135414112);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a1138218523);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(73, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(195, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a2015506287);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(94, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(41, problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(203, problem5_0.a1135414112);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a1138218523);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(73, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(195, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(18078, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a2112741742);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(112, problem5_0.a1219723237);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      // SystemInUtil.addInputLine("iE");
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(168, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iE");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(11, problem5_0.a362703815);
      assertEquals(168, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(200, problem5_0.a518089629);
      assertEquals(401, problem5_0.a1135414112);
      assertEquals(180, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(124, problem5_0.a1544481660);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(257, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(9, problem5_1.a737138579);
      assertTrue(problem5_1.cf);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(10, problem5_1.a339428322);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals((-42), problem5_1.a2077034612);
      assertNotNull(problem5_1);
      
      problem5_0.calculateOutput("iI");
      assertFalse(problem5_0.equals((Object)problem5_1));
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(89, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(11, problem5_0.a362703815);
      assertEquals(168, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(167, problem5_0.a1507548554);
      assertEquals(21, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(173, problem5_0.a1135414112);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(32, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertNotSame(problem5_0, problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(206, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(154, problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(168, problem5_0.a645550563);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a339428322);
      
      // SystemInUtil.addInputLine("iC");
      problem5_0.calculateOutput("iB");
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(222, problem5_0.a518089629);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(128, problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(147, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(209, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(385, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(263, problem5_0.a1507548554);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-3094), problem5_0.a518089629);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-21071), problem5_0.a1544481660);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-15636), problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-17044), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-18767), problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-22286), problem5_0.a645550563);
      
      problem5_0.calculateOutput("iF");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(177, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(86, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(91, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(131, problem5_0.a1680669372);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(167, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(81, problem5_0.a518089629);
      assertEquals(166, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(177, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(86, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(91, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(131, problem5_0.a1680669372);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(167, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(81, problem5_0.a518089629);
      assertEquals(166, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a339428322);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(78, problem5_0.a518089629);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a339428322);
      
      problem5_0.a1135414112 = 9;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertTrue(problem5_0.cf);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(9, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      
      String string0 = "iB";
      problem5_0.calculateOutput("iB");
      assertEquals(9, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(5, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("oW");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertTrue(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-25861), problem5_0.a1544481660);
      
      // SystemInUtil.addInputLine("%j1x^lC)'z({z");
      problem5_0.calculateOutput("iF");
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-25861), problem5_0.a1544481660);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(9, problem5_1.a737138579);
      assertTrue(problem5_1.cf);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(12, problem5_1.a424236355);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(15, problem5_1.a2112741742);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(4, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(222, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iB");
      assertEquals(4, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(222, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-14975), problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-22043), problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-2867), problem5_0.a645550563);
      assertEquals((-918), problem5_0.a518089629);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-496), problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(103, problem5_0.a754912052);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-26543), problem5_0.a1219723237);
      assertEquals(267, problem5_0.a608789820);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      
      problem5_0.calculateOutput("iA");
      assertEquals(4, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(196, problem5_0.a645550563);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(323, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a362703815);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(267, problem5_0.a1507548554);
      assertEquals(137, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(103, problem5_0.a754912052);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(267, problem5_0.a608789820);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(145, problem5_0.a1219723237);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(287, problem5_0.a518089629);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iB");
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a362703815);
      assertEquals(167, problem5_0.a645550563);
      assertEquals(44, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(98, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(196, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(103, problem5_0.a754912052);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(267, problem5_0.a608789820);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(204, problem5_0.a1507548554);
      assertEquals(116, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      
      problem5_0.calculateOutput("iB");
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a362703815);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-796), problem5_0.a1544481660);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-24731), problem5_0.a1135414112);
      assertEquals((-16862), problem5_0.a754912052);
      assertEquals(10, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-22296), problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(267, problem5_0.a608789820);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-23267), problem5_0.a1507548554);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-5119), problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-3964), problem5_0.a518089629);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(96, problem5_1.a518089629);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(75, problem5_1.a321762694);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(12, problem5_1.a1176556958);
      assertTrue(problem5_1.cf);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(172, problem5_1.a449177388);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(9, problem5_1.a2015506287);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(78, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(207, problem5_0.a645550563);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-2908), problem5_0.a518089629);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-15464), problem5_0.a1219723237);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-5815), problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-18772), problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-19353), problem5_0.a1507548554);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-8876), problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      
      String string0 = "iH";
      problem5_0.calculateOutput("iH");
      assertEquals(107, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(79, problem5_0.a518089629);
      assertEquals(187, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(17, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(102, problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(167, problem5_0.a1507548554);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(176, problem5_0.a645550563);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      
      String string1 = "f";
      // SystemInUtil.addInputLine("f");
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("ccET^EVVD*'m@");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(222, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(222, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iF");
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-20962), problem5_0.a1219723237);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-26168), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-26262), problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(245, problem5_0.a608789820);
      assertEquals((-10331), problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-26197), problem5_0.a1544481660);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-29656), problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(9, problem5_0.a339428322);
      
      problem5_0.calculateOutput("iA");
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(325, problem5_0.a1135414112);
      assertEquals(267, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(245, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(139, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(157, problem5_0.a518089629);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(193, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(151, problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(245, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-4675), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-21698), problem5_0.a1219723237);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a362703815);
      assertEquals((-5400), problem5_0.a645550563);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(8, problem5_0.a1175663450);
      assertEquals((-8696), problem5_0.a1507548554);
      assertEquals(10, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-13109), problem5_0.a1135414112);
      assertEquals((-17528), problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(9, problem5_0.a339428322);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("MJsSA|6:U6WM*<<b");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertTrue(problem5_0.cf);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(206, problem5_0.a645550563);
      
      problem5_0.calculateOutput("iI");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(195, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(95, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(193, problem5_0.a1135414112);
      assertEquals(13, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(101, problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(171, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(11, problem5_0.a1219723237);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("!/P@Z_Q^O$;|x{NV");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(114, problem5_0.a1544481660);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(241, problem5_0.a281657923);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(3, problem5_0.a998820044);
      
      problem5_0.calculateOutput("iC");
      assertEquals(241, problem5_0.a281657923);
      assertEquals(237, problem5_0.a1318003364);
      assertEquals((-10336), problem5_0.a1544481660);
      assertEquals((-29266), problem5_0.a645550563);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals((-22225), problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-11416), problem5_0.a1507548554);
      assertEquals((-20613), problem5_0.a1219723237);
      assertEquals((-29237), problem5_0.a518089629);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      
      // SystemInUtil.addInputLine((String) null);
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(10, problem5_1.a339428322);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(2, problem5_1.a998820044);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(9, problem5_1.a737138579);
      assertTrue(problem5_1.cf);
      assertEquals(172, problem5_1.a449177388);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(189, problem5_1.a645550563);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(291, problem5_0.a518089629);
      
      // SystemInUtil.addInputLine((String) null);
      // SystemInUtil.addInputLine("c T=S)<$Jh");
      problem5_0.calculateOutput("iH");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-16605), problem5_0.a1544481660);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-26454), problem5_0.a645550563);
      assertEquals((-23203), problem5_0.a518089629);
      assertEquals((-25466), problem5_0.a1507548554);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-20105), problem5_0.a1135414112);
      assertEquals((-22201), problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertTrue(problem5_0.cf);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertFalse(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      
      // SystemInUtil.addInputLine("f");
      problem5_0.calculateOutput("iG");
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertFalse(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iB");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertFalse(problem5_0.cf);
      assertEquals(219, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(320, problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(157, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(262, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(143, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(21166, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(159, problem5_0.a518089629);
      
      problem5_0.calculateOutput("iB");
      assertEquals(98, problem5_0.a518089629);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(188, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertFalse(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(237, problem5_0.a1135414112);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(177, problem5_0.a1507548554);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(65, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(27, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(21166, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iG");
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-20402), problem5_0.a1544481660);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-20803), problem5_0.a645550563);
      assertEquals(5, problem5_0.a1138218523);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertFalse(problem5_0.cf);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-24610), problem5_0.a1507548554);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-19513), problem5_0.a1219723237);
      assertEquals((-3848), problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-6624), problem5_0.a1135414112);
      assertEquals(21166, problem5_0.a1240663365);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertTrue(problem5_0.cf);
      assertNotNull(problem5_0);
      
      String string0 = "iA";
      problem5_0.calculateOutput("iA");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(252, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(222, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(252, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(222, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iB");
      assertEquals(9, problem5_0.a339428322);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-22043), problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-918), problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-496), problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-14975), problem5_0.a1507548554);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(267, problem5_0.a608789820);
      assertEquals((-26543), problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-2867), problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(103, problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iA");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(196, problem5_0.a645550563);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(267, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(323, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(137, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(267, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(287, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(145, problem5_0.a1219723237);
      assertEquals(103, problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.a860255372 = "iA";
      problem5_0.a837082561 = null;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iB");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(114, problem5_0.a1544481660);
      assertTrue(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(206, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(165, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(91, problem5_0.a518089629);
      assertEquals(71, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(170, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(94, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(175, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      
      // SystemInUtil.addInputLine("(ura5a`;2");
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("i");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(291, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(222, problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      
      problem5_0.calculateOutput("iA");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-25008), problem5_0.a518089629);
      
      // SystemInUtil.addInputLine("%j1x^lC)'z({z");
      problem5_0.calculateOutput("iB");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(106, problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-25008), problem5_0.a518089629);
      
      problem5_0.calculateOutput("iB");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(106, problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(81, problem5_0.a518089629);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(183, problem5_0.a645550563);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(213, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(105, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(202, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(76, problem5_0.a1219723237);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      
      problem5_0.calculateOutput("iC");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(106, problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(81, problem5_0.a518089629);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(183, problem5_0.a645550563);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(213, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(105, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(202, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(76, problem5_0.a1219723237);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertTrue(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(248, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(264, problem5_0.a518089629);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(4, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(248, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(264, problem5_0.a518089629);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(4, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iG");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(101, problem5_0.a1219723237);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(58, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(187, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(192, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-19574), problem5_0.a1185506925);
      assertEquals(116, problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(206, problem5_0.a1507548554);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iG");
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(58, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(337, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-19574), problem5_0.a1185506925);
      assertEquals(203, problem5_0.a645550563);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(245, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(189, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(195, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(4, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(218, problem5_0.a1135414112);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(58, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-19574), problem5_0.a1185506925);
      assertEquals(85, problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(180, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(24, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(189, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iG");
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(13, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iG");
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(160, problem5_0.a1219723237);
      
      problem5_0.a1544481660 = (-3201);
      // SystemInUtil.addInputLine("g");
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals((-2564), problem5_0.a645550563);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-13994), problem5_0.a1507548554);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-15616), problem5_0.a1135414112);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-2240), problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-8938), problem5_0.a1219723237);
      assertEquals((-16856), problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(17, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(152, problem5_0.a1135414112);
      assertEquals(268, problem5_0.a518089629);
      assertEquals(211, problem5_0.a645550563);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(246, problem5_0.a1507548554);
      assertEquals(144, problem5_0.a1544481660);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(164, problem5_0.a1219723237);
      assertEquals(164, problem5_0.a1240663365);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(152, problem5_0.a1135414112);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(103, problem5_0.a518089629);
      assertEquals(178, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(47, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(208, problem5_0.a1507548554);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(164, problem5_0.a1240663365);
      assertEquals(46, problem5_0.a1544481660);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(152, problem5_0.a1135414112);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(103, problem5_0.a518089629);
      assertEquals(178, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(47, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(208, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(164, problem5_0.a1240663365);
      assertEquals(46, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iJ");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(152, problem5_0.a1135414112);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(103, problem5_0.a518089629);
      assertEquals(178, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(47, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(208, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(164, problem5_0.a1240663365);
      assertEquals(46, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertTrue(problem5_0.cf);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertFalse(problem5_0.cf);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(222, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      
      // SystemInUtil.addInputLine("g");
      problem5_0.calculateOutput("iA");
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25017), problem5_0.a1219723237);
      assertFalse(problem5_0.cf);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iA");
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25017), problem5_0.a1219723237);
      assertFalse(problem5_0.cf);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iB");
      assertEquals(104, problem5_0.a1219723237);
      assertEquals(89, problem5_0.a518089629);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(176, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals(232, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(232, problem5_0.a1135414112);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(175, problem5_0.a1318003364);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iB");
      assertEquals(104, problem5_0.a1219723237);
      assertEquals(89, problem5_0.a518089629);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(176, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals(232, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(232, problem5_0.a1135414112);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(175, problem5_0.a1318003364);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(96, problem5_1.a518089629);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(265, problem5_1.a82233648);
      assertTrue(problem5_1.cf);
      assertEquals((-63), problem5_1.a1680669372);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("$),H");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(96, problem5_0.a518089629);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(96, problem5_0.a518089629);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iF");
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-8938), problem5_0.a1219723237);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals(9, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-15616), problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-2240), problem5_0.a518089629);
      assertEquals((-13994), problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-2564), problem5_0.a645550563);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-16856), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iA");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(152, problem5_0.a1135414112);
      assertEquals((-13013), problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(144, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(211, problem5_0.a645550563);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(268, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(164, problem5_0.a1240663365);
      assertEquals(164, problem5_0.a1219723237);
      assertEquals(246, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iB");
      assertEquals(47, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(152, problem5_0.a1135414112);
      assertEquals((-13013), problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(208, problem5_0.a1507548554);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(178, problem5_0.a645550563);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(103, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(164, problem5_0.a1240663365);
      assertEquals(46, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("')Al<");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertTrue(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      
      // SystemInUtil.addInputLine("e");
      problem5_0.calculateOutput("iE");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(64, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(62, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(285, problem5_0.a281657923);
      assertEquals(209, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(95, problem5_0.a518089629);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals(187, problem5_0.a645550563);
      assertEquals(206, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      
      problem5_0.calculateOutput("iA");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(64, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(62, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(285, problem5_0.a281657923);
      assertEquals(209, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(95, problem5_0.a518089629);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals(187, problem5_0.a645550563);
      assertEquals(206, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("Pivw1K_+n2[#`l3h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iB");
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iB");
      assertEquals(9, problem5_0.a362703815);
      assertEquals(103, problem5_0.a754912052);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-918), problem5_0.a518089629);
      assertEquals((-26543), problem5_0.a1219723237);
      assertEquals(267, problem5_0.a608789820);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-2867), problem5_0.a645550563);
      assertEquals((-14975), problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-22043), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-496), problem5_0.a1135414112);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      
      problem5_0.calculateOutput("iB");
      assertEquals(9, problem5_0.a362703815);
      assertEquals(83, problem5_0.a518089629);
      assertEquals(103, problem5_0.a754912052);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(267, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(80, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(89, problem5_0.a1219723237);
      assertEquals(220, problem5_0.a1135414112);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(205, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(181, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iA");
      assertEquals(9, problem5_0.a362703815);
      assertEquals(83, problem5_0.a518089629);
      assertEquals(103, problem5_0.a754912052);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(267, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(80, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(89, problem5_0.a1219723237);
      assertEquals(220, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(205, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(181, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iA");
      assertEquals(9, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-17633), problem5_0.a518089629);
      assertEquals(267, problem5_0.a608789820);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-29252), problem5_0.a1507548554);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(10, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-16572), problem5_0.a1135414112);
      assertEquals((-8630), problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-4507), problem5_0.a645550563);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-667), problem5_0.a1544481660);
      assertEquals((-14804), problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("&L`$8veI~%;m?L(Nl>");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(222, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iB");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(222, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iB");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-918), problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(267, problem5_0.a608789820);
      assertEquals(9, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals((-26543), problem5_0.a1219723237);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-22043), problem5_0.a1544481660);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-2867), problem5_0.a645550563);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-496), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-14975), problem5_0.a1507548554);
      assertEquals(103, problem5_0.a754912052);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iA");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(267, problem5_0.a1507548554);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(267, problem5_0.a608789820);
      assertEquals(10, problem5_0.a362703815);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(145, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(137, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(103, problem5_0.a754912052);
      assertEquals(196, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(323, problem5_0.a1135414112);
      assertEquals(287, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      
      String[] stringArray0 = new String[6];
      problem5_0.calculateOutput("iB");
      assertEquals(98, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(267, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a362703815);
      assertFalse(problem5_0.cf);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(196, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(204, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(116, problem5_0.a1219723237);
      assertEquals(44, problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(103, problem5_0.a754912052);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(167, problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.a1922234987 = 0;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("vw:[I)!;Hkg|XH");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertTrue(problem5_0.cf);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(1, problem5_0.a998820044);
      
      // SystemInUtil.addInputLine("iJ");
      problem5_0.calculateOutput("iA");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(181, problem5_0.a1135414112);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(82, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(177, problem5_0.a1507548554);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(100, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(102, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      
      // SystemInUtil.addInputLine("*v`z%A'uS<");
      problem5_0.calculateOutput("iA");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(181, problem5_0.a1135414112);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(82, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(177, problem5_0.a1507548554);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(100, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(102, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("*v`z%A'uS<");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-27061), problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(23574, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(169, problem5_0.a1219723237);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(202, problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(333, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(262, problem5_0.a1507548554);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(142, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iA");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(117, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(23574, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(39, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-18), problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(167, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(219, problem5_0.a1507548554);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iF");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(117, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(23574, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(39, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-18), problem5_0.a1544481660);
      assertEquals(167, problem5_0.a1135414112);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(219, problem5_0.a1507548554);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(4425, problem5_0.a1185506925);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(10, problem5_1.a339428322);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(9, problem5_1.a737138579);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(3, problem5_1.a1922234987);
      assertTrue(problem5_1.cf);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(241, problem5_1.a281657923);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals((-70), problem5_1.a15580097);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("!hsAe*s,MDHq2E[j");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(3, problem5_0.a1922234987);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(209, problem5_0.a1507548554);
      assertEquals(14, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(185, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(204, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(77, problem5_0.a518089629);
      assertEquals(9, problem5_0.a2015506287);
      
      // SystemInUtil.addInputLine("e");
      problem5_0.calculateOutput("iJ");
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(209, problem5_0.a1507548554);
      assertEquals(14, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(185, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(204, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(77, problem5_0.a518089629);
      assertEquals(9, problem5_0.a2015506287);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("oN'");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(112, problem5_0.a1219723237);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iE");
      assertFalse(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iE");
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals((-4076), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-15245), problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-2390), problem5_0.a1544481660);
      assertEquals((-20360), problem5_0.a1219723237);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-20417), problem5_0.a645550563);
      assertEquals((-3128), problem5_0.a1507548554);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iB");
      assertFalse(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(186, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(81, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(72, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(219, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(28, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iB");
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals((-12827), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(226, problem5_0.a754912052);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-17787), problem5_0.a1135414112);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-8870), problem5_0.a1544481660);
      assertEquals((-23754), problem5_0.a518089629);
      assertEquals((-18806), problem5_0.a1507548554);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-23595), problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-25280), problem5_0.a1219723237);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertNotNull(problem5_0);
      
      // SystemInUtil.addInputLine("iE");
      problem5_0.calculateOutput("iE");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(10, problem5_0.a1176556958);
      
      problem5_0.calculateOutput("iG");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals((-124), problem5_0.a15580097);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("i");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a723549884);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iE");
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertFalse(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      
      problem5_0.calculateOutput("iG");
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertFalse(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-124), problem5_0.a15580097);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      
      problem5_0.calculateOutput("iA");
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-23834), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertFalse(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-124), problem5_0.a15580097);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(90, problem5_1.a754912052);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(265, problem5_1.a82233648);
      assertTrue(problem5_1.cf);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(12, problem5_1.a424236355);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("i");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a674385059);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
      assertNotNull(problem5_0);
      
      problem5_0.a532272093 = "9?Ly";
      problem5_0.calculateOutput("iG");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(11, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iG");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-16), problem5_0.a1544481660);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-3936), problem5_0.a1185506925);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(13, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-16), problem5_0.a1544481660);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(78, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals((-4), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(113, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertFalse(problem5_0.cf);
      assertEquals(193, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-20825), problem5_0.a1185506925);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(196, problem5_0.a645550563);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(254, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(269, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(181, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-20825), problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(251, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(25, problem5_0.a1219723237);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(180, problem5_0.a645550563);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(214, problem5_0.a1135414112);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertFalse(problem5_0.cf);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(101, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-20825), problem5_0.a1185506925);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(189, problem5_0.a1507548554);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertTrue(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      
      String string0 = "iB";
      // SystemInUtil.addInputLine("g");
      problem5_0.calculateOutput("iA");
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-25861), problem5_0.a1544481660);
      
      problem5_0.a101744974 = "g";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      
      // SystemInUtil.addInputLine("e");
      problem5_0.calculateOutput("iB");
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      
      problem5_0.calculateOutput("iE");
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertNotNull(problem5_0);
      
      problem5_0.a645550563 = 3498;
      // SystemInUtil.addInputLine("f");
      problem5_0.calculateOutput("iF");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(43509, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(42644, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(340213, problem5_0.a645550563);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-20543), problem5_0.a1544481660);
      
      String string0 = "iH";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(264, problem5_0.a518089629);
      
      problem5_0.calculateOutput("iG");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iF");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(139, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(205, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(255, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(193, problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(271, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(339, problem5_0.a1135414112);
      assertEquals(7, problem5_0.a674385059);
      
      problem5_0.calculateOutput("iG");
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-1650), problem5_0.a518089629);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-21414), problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-25958), problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-26072), problem5_0.a645550563);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-8352), problem5_0.a1544481660);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-6639), problem5_0.a1135414112);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(5, problem5_0.a674385059);
      
      problem5_0.calculateOutput("iC");
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(181, problem5_0.a1507548554);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(226, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(176, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(122, problem5_0.a1680669372);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(77, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(22, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iF");
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(181, problem5_0.a1507548554);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(226, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(176, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(122, problem5_0.a1680669372);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(77, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(22, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(212, problem5_0.a1135414112);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(212, problem5_0.a1135414112);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-2240), problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-16856), problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-8938), problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-15616), problem5_0.a1135414112);
      assertEquals((-2564), problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-13994), problem5_0.a1507548554);
      
      problem5_0.calculateOutput("iA");
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(164, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertFalse(problem5_0.cf);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals(246, problem5_0.a1507548554);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(268, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(144, problem5_0.a1544481660);
      assertEquals(164, problem5_0.a1240663365);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(152, problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(211, problem5_0.a645550563);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(38, problem5_0.a1544481660);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(187, problem5_0.a645550563);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(88, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(164, problem5_0.a1240663365);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(127, problem5_0.a1219723237);
      assertEquals(152, problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(214, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-16183), problem5_0.a15580097);
      assertEquals(7, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(265, problem5_0.a82233648);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-3513), problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals((-23903), problem5_0.a1507548554);
      assertEquals((-27394), problem5_0.a1544481660);
      assertEquals((-23752), problem5_0.a518089629);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-29879), problem5_0.a1135414112);
      assertEquals((-4104), problem5_0.a1219723237);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(164, problem5_0.a1240663365);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-16183), problem5_0.a15580097);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      
      problem5_0.calculateOutput("iF");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals((-2564), problem5_0.a645550563);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-2240), problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-15616), problem5_0.a1135414112);
      assertEquals((-16856), problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-8938), problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-13994), problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      
      problem5_0.calculateOutput("iA");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(164, problem5_0.a1240663365);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(152, problem5_0.a1135414112);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(246, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(268, problem5_0.a518089629);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(164, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(144, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(211, problem5_0.a645550563);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iF");
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-16856), problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-15616), problem5_0.a1135414112);
      assertEquals((-2240), problem5_0.a518089629);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-13994), problem5_0.a1507548554);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-8938), problem5_0.a1219723237);
      assertEquals((-2564), problem5_0.a645550563);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iA");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(164, problem5_0.a1240663365);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(152, problem5_0.a1135414112);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(211, problem5_0.a645550563);
      assertEquals(144, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(268, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals(12, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(246, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(164, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(88, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(164, problem5_0.a1240663365);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(152, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(214, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-13013), problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(187, problem5_0.a645550563);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-16183), problem5_0.a15580097);
      assertEquals(38, problem5_0.a1544481660);
      assertEquals(127, problem5_0.a1219723237);
      assertEquals(13, problem5_0.a2112741742);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(4, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iB");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(4, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iI");
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-6322), problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-14514), problem5_0.a518089629);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-12358), problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-12367), problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-25621), problem5_0.a1135414112);
      assertEquals((-29109), problem5_0.a645550563);
      
      problem5_0.calculateOutput("iA");
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals(164, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(107, problem5_0.a518089629);
      assertFalse(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(196, problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(13, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(10, problem5_0.a339428322);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "i";
      // SystemInUtil.addInputLine("iA");
      // SystemInUtil.addInputLine("g");
      problem5_0.calculateOutput("iH");
      assertEquals((-17820), problem5_0.a1135414112);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals((-16530), problem5_0.a1507548554);
      assertEquals((-10849), problem5_0.a1219723237);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-17834), problem5_0.a645550563);
      assertEquals((-18300), problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-14640), problem5_0.a754912052);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-15318), problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(7, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(10, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(2, problem5_0.a1922234987);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(23574, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(262, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(142, problem5_0.a518089629);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(202, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(169, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(333, problem5_0.a1135414112);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(23574, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iA");
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(167, problem5_0.a1135414112);
      assertEquals((-18), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(117, problem5_0.a518089629);
      assertEquals(39, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(219, problem5_0.a1507548554);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(23574, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iF");
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(167, problem5_0.a1135414112);
      assertEquals((-18), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(117, problem5_0.a518089629);
      assertEquals(39, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(4425, problem5_0.a1185506925);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(219, problem5_0.a1507548554);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(13, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iF");
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(167, problem5_0.a1135414112);
      assertEquals((-18), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(117, problem5_0.a518089629);
      assertEquals(39, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(4425, problem5_0.a1185506925);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(219, problem5_0.a1507548554);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(23574, problem5_0.a723549884);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertTrue(problem5_0.cf);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(211, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-20825), problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(193, problem5_0.a1135414112);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(113, problem5_0.a518089629);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iG");
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-20825), problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(204, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(240, problem5_0.a1507548554);
      assertEquals(184, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(175, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(336, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iJ");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-20825), problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(201, problem5_0.a1135414112);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(25, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(198, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(80, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(201, problem5_0.a1135414112);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(25, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(198, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(368, problem5_0.a1185506925);
      assertEquals(80, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("i");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(154, problem5_0.a1219723237);
      
      // SystemInUtil.addInputLine("iE");
      problem5_0.calculateOutput("iE");
      assertEquals(213, problem5_0.a723549884);
      assertEquals(177, problem5_0.a645550563);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(80, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(121, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(58, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(189, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(191, problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(5365, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      
      problem5_0.calculateOutput("iE");
      assertEquals(7, problem5_0.a674385059);
      assertEquals(173, problem5_0.a1544481660);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(170, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(177, problem5_0.a645550563);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(387, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(264, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(155, problem5_0.a1219723237);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(11, problem5_0.a362703815);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(5365, problem5_0.a281657923);
      assertEquals(4, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iG");
      assertEquals(213, problem5_0.a723549884);
      assertEquals(177, problem5_0.a645550563);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(92, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(46, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(83, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(11, problem5_0.a362703815);
      assertEquals(11, problem5_0.a1176556958);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(5365, problem5_0.a281657923);
      assertEquals(191, problem5_0.a1135414112);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      
      problem5_0.calculateOutput("iE");
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(237, problem5_0.a518089629);
      assertEquals(155, problem5_0.a1219723237);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(260, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(149, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(203, problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(11, problem5_0.a362703815);
      assertEquals(11, problem5_0.a1176556958);
      assertEquals(288, problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(5365, problem5_0.a281657923);
      assertEquals(4, problem5_0.a1922234987);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("*Q]3-tT!`T8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a339428322);
      
      // SystemInUtil.addInputLine("iE");
      problem5_0.calculateOutput("iE");
      assertEquals(5365, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(80, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(191, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(58, problem5_0.a1544481660);
      assertEquals(189, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(121, problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(177, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      
      problem5_0.calculateOutput("iG");
      assertEquals(5365, problem5_0.a281657923);
      assertEquals(254, problem5_0.a1507548554);
      assertEquals(11, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(164, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(388, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(135, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(272, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(177, problem5_0.a645550563);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a339428322);
      
      problem5_0.calculateOutput("iG");
      assertEquals(5365, problem5_0.a281657923);
      assertEquals(217, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(11, problem5_0.a362703815);
      assertEquals(11, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(85, problem5_0.a518089629);
      assertEquals(45, problem5_0.a1544481660);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(176, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(2, problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(177, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("t;");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a424236355);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(206, problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      
      // SystemInUtil.addInputLine("iE");
      problem5_0.calculateOutput("iE");
      assertEquals(189, problem5_0.a1135414112);
      assertEquals(80, problem5_0.a1219723237);
      assertEquals(121, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(191, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(58, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(177, problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(5365, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      
      problem5_0.calculateOutput("iG");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(272, problem5_0.a518089629);
      assertEquals(11, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(11, problem5_0.a362703815);
      assertEquals(164, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(177, problem5_0.a645550563);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(388, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(254, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(135, problem5_0.a1544481660);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(5365, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      
      problem5_0.calculateOutput("iG");
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(11, problem5_0.a362703815);
      assertEquals(176, problem5_0.a1507548554);
      assertEquals(177, problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(217, problem5_0.a1135414112);
      assertEquals(85, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(45, problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(5365, problem5_0.a281657923);
      assertEquals(2, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(11, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(265, problem5_1.a82233648);
      assertTrue(problem5_1.cf);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(10, problem5_1.a339428322);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(172, problem5_1.a449177388);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(241, problem5_1.a281657923);
      assertNotNull(problem5_1);
      
      problem5_0.calculateOutput("iG");
      assertFalse(problem5_0.equals((Object)problem5_1));
      assertEquals(251, problem5_0.a518089629);
      assertEquals(236, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(156, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(11, problem5_0.a362703815);
      assertEquals(331, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(206, problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(177, problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(5365, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(11, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertNotSame(problem5_0, problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("t;");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(201, problem5_0.a1507548554);
      assertTrue(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(291, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(291, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      
      problem5_0.calculateOutput("iC");
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(235, problem5_0.a608789820);
      assertEquals((-4131), problem5_0.a645550563);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-27515), problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(109, problem5_0.a754912052);
      assertEquals((-15325), problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-20804), problem5_0.a518089629);
      assertEquals((-14851), problem5_0.a1544481660);
      assertEquals((-23627), problem5_0.a1507548554);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "e";
      stringArray0[1] = "h";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertTrue(problem5_0.cf);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertFalse(problem5_0.cf);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      
      // SystemInUtil.addInputLine("f");
      problem5_0.calculateOutput("iB");
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertFalse(problem5_0.cf);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iB");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertFalse(problem5_0.cf);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(14, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(14, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iB");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(14, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(189, problem5_1.a645550563);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(12, problem5_1.a424236355);
      assertTrue(problem5_1.cf);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(265, problem5_1.a82233648);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals((-42), problem5_1.a2077034612);
      assertNotNull(problem5_1);
      
      Problem5 problem5_2 = new Problem5();
      assertFalse(problem5_2.equals((Object)problem5_1));
      assertFalse(problem5_2.equals((Object)problem5_0));
      assertEquals(75, problem5_2.a321762694);
      assertEquals(213, problem5_2.a723549884);
      assertEquals(3, problem5_2.a608789820);
      assertEquals(9, problem5_2.a2015506287);
      assertEquals(15, problem5_2.a2112741742);
      assertEquals(96, problem5_2.a518089629);
      assertEquals(201, problem5_2.a1507548554);
      assertEquals(241, problem5_2.a281657923);
      assertEquals(318, problem5_2.a1318003364);
      assertEquals(3, problem5_2.a1922234987);
      assertEquals(68, problem5_2.a1185506925);
      assertEquals(189, problem5_2.a645550563);
      assertEquals(1, problem5_2.a1138218523);
      assertEquals(2, problem5_2.a998820044);
      assertEquals((-34), problem5_2.a853335314);
      assertEquals(172, problem5_2.a449177388);
      assertEquals(14, problem5_2.a362703815);
      assertEquals(113, problem5_2.a1240663365);
      assertEquals(90, problem5_2.a754912052);
      assertEquals(265, problem5_2.a82233648);
      assertEquals(6, problem5_2.a674385059);
      assertEquals(112, problem5_2.a1219723237);
      assertEquals(15, problem5_2.a1185559685);
      assertEquals(9, problem5_2.a737138579);
      assertEquals(10, problem5_2.a339428322);
      assertEquals(7, problem5_2.a463267856);
      assertEquals(12, problem5_2.a424236355);
      assertTrue(problem5_2.cf);
      assertEquals(212, problem5_2.a1135414112);
      assertEquals((-63), problem5_2.a1680669372);
      assertEquals(12, problem5_2.a1176556958);
      assertEquals(114, problem5_2.a1544481660);
      assertEquals((-42), problem5_2.a2077034612);
      assertEquals((-70), problem5_2.a15580097);
      assertEquals(6, problem5_2.a1175663450);
      assertNotNull(problem5_2);
      
      // Undeclared exception!
      try { 
        problem5_2.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(11, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(206, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(16, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(11, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(206, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(113, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-20825), problem5_0.a1185506925);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(193, problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iG");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(11, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(175, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(336, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(240, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-20825), problem5_0.a1185506925);
      assertEquals(204, problem5_0.a645550563);
      assertEquals(184, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(16, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(80, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals(201, problem5_0.a1135414112);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-20825), problem5_0.a1185506925);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(198, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(25, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iG");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(80, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals(201, problem5_0.a1135414112);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(198, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(25, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(368, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "f";
      stringArray0[1] = "e";
      problem5_0.calculateOutput("iG");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(80, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals(201, problem5_0.a1135414112);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(198, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(25, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(368, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(96, problem5_0.a518089629);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(264, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-70), problem5_0.a15580097);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(264, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-70), problem5_0.a15580097);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-70), problem5_0.a15580097);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(113, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(193, problem5_0.a1135414112);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-20825), problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      
      problem5_0.calculateOutput("iG");
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(336, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-70), problem5_0.a15580097);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(184, problem5_0.a518089629);
      assertEquals(204, problem5_0.a645550563);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(240, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals((-20825), problem5_0.a1185506925);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(175, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-70), problem5_0.a15580097);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(25, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(198, problem5_0.a1507548554);
      assertEquals(80, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals(201, problem5_0.a1135414112);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-20825), problem5_0.a1185506925);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-70), problem5_0.a15580097);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(25, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(198, problem5_0.a1507548554);
      assertEquals(80, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals(201, problem5_0.a1135414112);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(368, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      
      problem5_0.calculateOutput("iG");
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-70), problem5_0.a15580097);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(25, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(198, problem5_0.a1507548554);
      assertEquals(80, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals(201, problem5_0.a1135414112);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(368, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("P_ RaRkm-=kU77");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.a603176266 = "iA";
      problem5_0.calculateOutput("iF");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertFalse(problem5_0.cf);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-21689), problem5_0.a1219723237);
      assertEquals((-28555), problem5_0.a1507548554);
      assertEquals(2, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-23088), problem5_0.a1135414112);
      assertEquals((-12067), problem5_0.a518089629);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-21212), problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-18160), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(213, problem5_1.a723549884);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(241, problem5_1.a281657923);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(7, problem5_1.a463267856);
      assertTrue(problem5_1.cf);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(201, problem5_1.a1507548554);
      assertNotNull(problem5_1);
      
      problem5_1.a1176556958 = 1623;
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("!hsAe*s,MDHq2E[j");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals((-28433), problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      
      problem5_0.calculateOutput("iG");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals((-28433), problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals((-1379), problem5_0.a754912052);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(16, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iF");
      assertEquals(2, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-13852), problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-17449), problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(8, problem5_0.a2015506287);
      
      problem5_0.calculateOutput("iF");
      assertEquals(2, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-13852), problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(11, problem5_0.a424236355);
      assertEquals((-17449), problem5_0.a1544481660);
      assertEquals((-18614), problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(8, problem5_0.a2015506287);
      
      problem5_0.calculateOutput("iB");
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(118, problem5_0.a518089629);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(188, problem5_0.a645550563);
      assertEquals(183, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(129, problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(105, problem5_0.a1544481660);
      assertEquals(206, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(11, problem5_0.a424236355);
      assertEquals((-18614), problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      
      String string0 = "P0;";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("P0;");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-13852), problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-17449), problem5_0.a1544481660);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-13852), problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-18614), problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-17449), problem5_0.a1544481660);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(105, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(188, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(129, problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(183, problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(118, problem5_0.a518089629);
      assertEquals(206, problem5_0.a1507548554);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-18614), problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a424236355);
      
      problem5_0.calculateOutput("iC");
      assertEquals((-20269), problem5_0.a1507548554);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-12295), problem5_0.a1544481660);
      assertEquals((-17024), problem5_0.a1135414112);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-27946), problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-23085), problem5_0.a2077034612);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-20936), problem5_0.a645550563);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(163, problem5_0.a754912052);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-18128), problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iC");
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-17024), problem5_0.a1135414112);
      assertEquals(123, problem5_0.a1219723237);
      assertEquals(190, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(38, problem5_0.a1544481660);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-23085), problem5_0.a2077034612);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(163, problem5_0.a754912052);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(84, problem5_0.a518089629);
      assertEquals(49, problem5_0.a15580097);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a424236355);
      
      String string0 = "";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(212, problem5_0.a1135414112);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(212, problem5_0.a1135414112);
      
      // SystemInUtil.addInputLine("g");
      problem5_0.calculateOutput("iF");
      assertFalse(problem5_0.cf);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-2564), problem5_0.a645550563);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-2240), problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals((-15616), problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-16856), problem5_0.a1544481660);
      assertEquals((-8938), problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-13994), problem5_0.a1507548554);
      
      problem5_0.calculateOutput("iB");
      assertFalse(problem5_0.cf);
      assertEquals(113, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(164, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(165, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(117, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(36, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(172, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(7, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iB");
      assertFalse(problem5_0.cf);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-17060), problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-8942), problem5_0.a2077034612);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-24500), problem5_0.a518089629);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(237, problem5_0.a754912052);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-14918), problem5_0.a1507548554);
      assertEquals((-3), problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-27043), problem5_0.a1219723237);
      assertEquals((-28), problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iB");
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-17060), problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-8942), problem5_0.a2077034612);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(237, problem5_0.a754912052);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(112, problem5_0.a518089629);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(5, problem5_0.a15580097);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-15), problem5_0.a1544481660);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(160, problem5_0.a1507548554);
      
      problem5_0.calculateOutput("iF");
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-17060), problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-8942), problem5_0.a2077034612);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(237, problem5_0.a754912052);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(112, problem5_0.a518089629);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(5, problem5_0.a15580097);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-15), problem5_0.a1544481660);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(160, problem5_0.a1507548554);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(271, problem5_0.a754912052);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-20308), problem5_0.a1507548554);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-11219), problem5_0.a2077034612);
      assertEquals((-28), problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-3), problem5_0.a645550563);
      assertEquals((-22687), problem5_0.a518089629);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-26785), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-27043), problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iI");
      assertEquals((-6), problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(271, problem5_0.a754912052);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(129, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-11219), problem5_0.a2077034612);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(183, problem5_0.a645550563);
      assertEquals(11, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(215, problem5_0.a1507548554);
      assertEquals((-26785), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-13), problem5_0.a15580097);
      assertFalse(problem5_0.cf);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("e+,`TYQ1{&\"");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(112, problem5_0.a1219723237);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertNotNull(problem5_0);
      
      String string0 = "iA";
      problem5_0.calculateOutput("iA");
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iE");
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(62, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(285, problem5_0.a281657923);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals(95, problem5_0.a518089629);
      assertEquals(64, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(187, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(209, problem5_0.a1507548554);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(206, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput(",m");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(241, problem5_0.a281657923);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(241, problem5_0.a281657923);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iG");
      assertEquals(10, problem5_0.a339428322);
      assertEquals(168, problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(241, problem5_0.a281657923);
      assertFalse(problem5_0.cf);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      
      String string0 = "iB";
      problem5_0.a538865847 = "iG";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(16, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(16, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-10331), problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-29656), problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-20962), problem5_0.a1219723237);
      assertEquals((-26262), problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-26197), problem5_0.a1544481660);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertFalse(problem5_0.cf);
      assertEquals((-26168), problem5_0.a1507548554);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(245, problem5_0.a608789820);
      
      // // SystemInUtil.addInputLine("h");
      problem5_0.a1922234987 = 890;
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(189, problem5_1.a645550563);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(112, problem5_1.a1219723237);
      assertTrue(problem5_1.cf);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(10, problem5_1.a339428322);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(12, problem5_1.a424236355);
      assertNotNull(problem5_1);
      
      problem5_1.a273097877 = "B&@Txk";
      Problem5 problem5_2 = new Problem5();
      assertFalse(problem5_2.equals((Object)problem5_1));
      assertFalse(problem5_2.equals((Object)problem5_0));
      assertEquals(90, problem5_2.a754912052);
      assertEquals(265, problem5_2.a82233648);
      assertEquals(113, problem5_2.a1240663365);
      assertEquals(15, problem5_2.a1185559685);
      assertEquals(12, problem5_2.a424236355);
      assertEquals(6, problem5_2.a674385059);
      assertEquals(7, problem5_2.a463267856);
      assertEquals((-70), problem5_2.a15580097);
      assertEquals(112, problem5_2.a1219723237);
      assertEquals(172, problem5_2.a449177388);
      assertEquals(114, problem5_2.a1544481660);
      assertEquals(12, problem5_2.a1176556958);
      assertEquals(318, problem5_2.a1318003364);
      assertEquals(9, problem5_2.a737138579);
      assertEquals(3, problem5_2.a1922234987);
      assertEquals((-63), problem5_2.a1680669372);
      assertEquals(189, problem5_2.a645550563);
      assertTrue(problem5_2.cf);
      assertEquals(75, problem5_2.a321762694);
      assertEquals(3, problem5_2.a608789820);
      assertEquals(9, problem5_2.a2015506287);
      assertEquals(213, problem5_2.a723549884);
      assertEquals(15, problem5_2.a2112741742);
      assertEquals(201, problem5_2.a1507548554);
      assertEquals(241, problem5_2.a281657923);
      assertEquals(96, problem5_2.a518089629);
      assertEquals(14, problem5_2.a362703815);
      assertEquals((-42), problem5_2.a2077034612);
      assertEquals(6, problem5_2.a1175663450);
      assertEquals(68, problem5_2.a1185506925);
      assertEquals(2, problem5_2.a998820044);
      assertEquals(1, problem5_2.a1138218523);
      assertEquals((-34), problem5_2.a853335314);
      assertEquals(212, problem5_2.a1135414112);
      assertEquals(10, problem5_2.a339428322);
      assertNotNull(problem5_2);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertNotNull(problem5_0);
      
      String string0 = "iA";
      problem5_0.calculateOutput("iB");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      
      problem5_0.a1389516315 = "iA";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(2, problem5_0.a998820044);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(206, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      
      problem5_0.calculateOutput("iG");
      assertEquals(2, problem5_0.a998820044);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(78, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(13, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iG");
      assertEquals(125, problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-19353), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-5815), problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a339428322);
      assertFalse(problem5_0.cf);
      assertEquals((-15464), problem5_0.a1219723237);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-2908), problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-8876), problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-18772), problem5_0.a645550563);
      
      problem5_0.a1544481660 = 9;
      // SystemInUtil.addInputLine("e");
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(158, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      
      problem5_0.calculateOutput("iB");
      assertEquals(158, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      
      String string0 = "iI";
      problem5_0.calculateOutput("iI");
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-25621), problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-29109), problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals((-6322), problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-14514), problem5_0.a518089629);
      assertEquals((-12358), problem5_0.a1507548554);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-12367), problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      
      problem5_0.calculateOutput("iA");
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(196, problem5_0.a1507548554);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(7, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(13, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(164, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(107, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "i";
      // SystemInUtil.addInputLine("iA");
      // SystemInUtil.addInputLine("");

  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(4, problem5_0.a1922234987);
      
      // SystemInUtil.addInputLine("iE");
      // SystemInUtil.addInputLine("i");
      // SystemInUtil.addInputLine("g");
      // // SystemInUtil.addInputLine("h");
      // SystemInUtil.addInputLine("i");
      String string0 = "";
      problem5_0.a273097877 = "";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("D}");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(189, problem5_0.a645550563);
      assertTrue(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iA");
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(2, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(2, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iB");
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(202, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(213, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a463267856);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(105, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(76, problem5_0.a1219723237);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(106, problem5_0.a754912052);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(183, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(81, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.a101744974 = "iA";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iB");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(189, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      
      // SystemInUtil.addInputLine("f");
      // SystemInUtil.addInputLine("!/P@Z_Q^O$;|x{NV");
      problem5_0.calculateOutput("iG");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(189, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      
      problem5_0.calculateOutput("iG");
      assertEquals(136, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(200, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(156, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(337, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(251, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(181, problem5_0.a1219723237);
      assertEquals(26821, problem5_0.a1240663365);
      
      problem5_0.a645550563 = 0;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertTrue(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(189, problem5_0.a645550563);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-28433), problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(142, problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(202, problem5_0.a645550563);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(333, problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(169, problem5_0.a1219723237);
      assertEquals(262, problem5_0.a1507548554);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iA");
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-18), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(167, problem5_0.a1135414112);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(219, problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(39, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals(117, problem5_0.a518089629);
      
      problem5_0.calculateOutput("iF");
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-18), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(167, problem5_0.a1135414112);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(219, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(4425, problem5_0.a1185506925);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(39, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertFalse(problem5_0.cf);
      assertEquals(117, problem5_0.a518089629);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(291, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(4, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(291, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(4, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iA");
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(191, problem5_0.a608789820);
      assertEquals((-25530), problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-19805), problem5_0.a1219723237);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-19912), problem5_0.a1135414112);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(115, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-13951), problem5_0.a1507548554);
      assertEquals((-14339), problem5_0.a1544481660);
      assertEquals((-24028), problem5_0.a518089629);
      
      problem5_0.calculateOutput("iA");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(200, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(150, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a362703815);
      assertEquals(191, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(266, problem5_0.a1507548554);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(115, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(153, problem5_0.a1219723237);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(305, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(4, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-2), problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(10, problem5_0.a362703815);
      assertEquals(228, problem5_0.a1135414112);
      assertEquals(191, problem5_0.a608789820);
      assertEquals(214, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(115, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(58, problem5_0.a1219723237);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(93, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(188, problem5_0.a645550563);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(96, problem5_1.a518089629);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(265, problem5_1.a82233648);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(189, problem5_1.a645550563);
      assertTrue(problem5_1.cf);
      assertNotNull(problem5_1);
      
      Problem5 problem5_2 = new Problem5();
      assertFalse(problem5_2.equals((Object)problem5_0));
      assertFalse(problem5_2.equals((Object)problem5_1));
      assertEquals((-34), problem5_2.a853335314);
      assertEquals(2, problem5_2.a998820044);
      assertEquals(10, problem5_2.a339428322);
      assertEquals(265, problem5_2.a82233648);
      assertEquals(68, problem5_2.a1185506925);
      assertEquals(15, problem5_2.a1185559685);
      assertEquals(12, problem5_2.a424236355);
      assertEquals(3, problem5_2.a1922234987);
      assertEquals(113, problem5_2.a1240663365);
      assertEquals(112, problem5_2.a1219723237);
      assertEquals(6, problem5_2.a674385059);
      assertEquals(7, problem5_2.a463267856);
      assertEquals(212, problem5_2.a1135414112);
      assertEquals(9, problem5_2.a2015506287);
      assertEquals(114, problem5_2.a1544481660);
      assertEquals((-42), problem5_2.a2077034612);
      assertEquals(201, problem5_2.a1507548554);
      assertEquals((-70), problem5_2.a15580097);
      assertEquals(15, problem5_2.a2112741742);
      assertEquals(318, problem5_2.a1318003364);
      assertEquals(1, problem5_2.a1138218523);
      assertEquals(14, problem5_2.a362703815);
      assertEquals(6, problem5_2.a1175663450);
      assertEquals(96, problem5_2.a518089629);
      assertEquals(75, problem5_2.a321762694);
      assertEquals(3, problem5_2.a608789820);
      assertEquals(12, problem5_2.a1176556958);
      assertEquals(9, problem5_2.a737138579);
      assertEquals(241, problem5_2.a281657923);
      assertTrue(problem5_2.cf);
      assertEquals((-63), problem5_2.a1680669372);
      assertEquals(172, problem5_2.a449177388);
      assertEquals(189, problem5_2.a645550563);
      assertEquals(90, problem5_2.a754912052);
      assertEquals(213, problem5_2.a723549884);
      assertNotNull(problem5_2);
      
      // Undeclared exception!
      try { 
        problem5_2.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iE");
      assertEquals(171, problem5_0.a1219723237);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(226, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(268, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(133, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(282, problem5_0.a1135414112);
      assertEquals(192, problem5_0.a645550563);
      assertEquals(8, problem5_0.a737138579);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iB");
      assertEquals(113, problem5_0.a1219723237);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(177, problem5_0.a645550563);
      assertEquals(197, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(31, problem5_0.a1544481660);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(120, problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(187, problem5_0.a1135414112);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(8, problem5_0.a737138579);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iF");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(128, problem5_0.a754912052);
      assertEquals((-29588), problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(17, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-25317), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-25014), problem5_0.a1219723237);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-18301), problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-5951), problem5_0.a1507548554);
      assertEquals((-13249), problem5_0.a1544481660);
      assertEquals(8, problem5_0.a737138579);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-11843), problem5_0.a518089629);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(265, problem5_1.a82233648);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(172, problem5_1.a449177388);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(10, problem5_1.a339428322);
      assertTrue(problem5_1.cf);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(14, problem5_1.a362703815);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(2, problem5_1.a998820044);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("\\aAXSaI");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertTrue(problem5_0.cf);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a2015506287);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-17449), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-13852), problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals((-19544), problem5_0.a518089629);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-17449), problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals((-18614), problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-13852), problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals((-19544), problem5_0.a518089629);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(206, problem5_0.a1507548554);
      assertEquals(105, problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals((-18614), problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals(129, problem5_0.a1219723237);
      assertEquals(118, problem5_0.a518089629);
      assertEquals(188, problem5_0.a645550563);
      assertEquals(183, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      
      problem5_0.calculateOutput("iC");
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-27946), problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-20269), problem5_0.a1507548554);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-18128), problem5_0.a1219723237);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-12295), problem5_0.a1544481660);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-17024), problem5_0.a1135414112);
      assertEquals(163, problem5_0.a754912052);
      assertEquals((-23085), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-20936), problem5_0.a645550563);
      
      problem5_0.a836046917 = "e";
      problem5_0.calculateOutput("iC");
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(84, problem5_0.a518089629);
      assertEquals(49, problem5_0.a15580097);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(123, problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-17024), problem5_0.a1135414112);
      assertEquals(163, problem5_0.a754912052);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-23085), problem5_0.a2077034612);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals(38, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(190, problem5_0.a645550563);
      
      problem5_0.calculateOutput("iB");
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(84, problem5_0.a518089629);
      assertEquals(49, problem5_0.a15580097);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(123, problem5_0.a1219723237);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-17024), problem5_0.a1135414112);
      assertEquals(163, problem5_0.a754912052);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-23085), problem5_0.a2077034612);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals(38, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(190, problem5_0.a645550563);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a998820044);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iE");
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a998820044);
      
      problem5_0.a860255372 = "iE";
      problem5_0.calculateOutput("iE");
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(2, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-4076), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-2390), problem5_0.a1544481660);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-20360), problem5_0.a1219723237);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-3128), problem5_0.a1507548554);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-20417), problem5_0.a645550563);
      assertEquals((-15245), problem5_0.a518089629);
      
      problem5_0.calculateOutput("iE");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(206, problem5_0.a1135414112);
      assertEquals(180, problem5_0.a645550563);
      assertEquals(218, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(14, problem5_0.a1176556958);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(112, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(57, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(121, problem5_0.a518089629);
      
      problem5_0.calculateOutput("iE");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(206, problem5_0.a1135414112);
      assertEquals(180, problem5_0.a645550563);
      assertEquals(218, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(14, problem5_0.a1176556958);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(112, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(57, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(121, problem5_0.a518089629);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("Problem5");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iA");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      
      // SystemInUtil.addInputLine("%j1x^lC)'z({z");
      String string0 = "iB";
      problem5_0.calculateOutput("iB");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(183, problem5_0.a608789820);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(8, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      
      String string1 = "iF";
      problem5_0.calculateOutput("iF");
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(187, problem5_0.a1507548554);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(96, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(118, problem5_0.a518089629);
      assertEquals(207, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iB");
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(187, problem5_0.a1507548554);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(96, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(118, problem5_0.a518089629);
      assertEquals(207, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iF");
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(187, problem5_0.a1507548554);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(96, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(118, problem5_0.a518089629);
      assertEquals(207, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertFalse(problem5_0.cf);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      
      problem5_0.calculateOutput("iH");
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(154, problem5_0.a754912052);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      
      problem5_0.calculateOutput("iG");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(338, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(154, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(167, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(280, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(25114, problem5_0.a1240663365);
      assertEquals(251, problem5_0.a1507548554);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(150, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(210, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(3, problem5_0.a998820044);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      
      problem5_0.calculateOutput("iB");
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(154, problem5_0.a754912052);
      assertEquals(237, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(190, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(8, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(30, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(25114, problem5_0.a1240663365);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(199, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(124, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      
      problem5_0.calculateOutput("iF");
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-26246), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(154, problem5_0.a754912052);
      assertEquals((-23560), problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(25114, problem5_0.a1240663365);
      assertEquals(5, problem5_0.a1138218523);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-28738), problem5_0.a518089629);
      assertEquals((-20306), problem5_0.a1219723237);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-20304), problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-15704), problem5_0.a1135414112);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(96, problem5_1.a518089629);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(3, problem5_1.a608789820);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(189, problem5_1.a645550563);
      assertTrue(problem5_1.cf);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(9, problem5_1.a737138579);
      assertNotNull(problem5_1);
      
      problem5_1.calculateOutput("iD");
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(213, problem5_1.a723549884);
      assertEquals(3, problem5_1.a998820044);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(3, problem5_1.a608789820);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(8, problem5_1.a463267856);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(7, problem5_1.a674385059);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(208, problem5_1.a645550563);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(4, problem5_1.a1922234987);
      assertEquals(255, problem5_1.a1507548554);
      assertEquals(10115, problem5_1.a1240663365);
      assertEquals(190, problem5_1.a518089629);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(303, problem5_1.a1135414112);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(152, problem5_1.a1544481660);
      assertFalse(problem5_1.cf);
      assertEquals(165, problem5_1.a1219723237);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(10, problem5_1.a2015506287);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(11, problem5_1.a339428322);
      assertEquals(12, problem5_1.a2112741742);
      assertNotSame(problem5_1, problem5_0);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      
      problem5_0.calculateOutput("iH");
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(154, problem5_0.a754912052);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      
      // SystemInUtil.addInputLine("oY");
      problem5_0.calculateOutput("iB");
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(154, problem5_0.a754912052);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("s-n9<+Lw");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(318, problem5_0.a1318003364);
      assertTrue(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(291, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iF");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-21212), problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a1138218523);
      assertEquals((-12067), problem5_0.a518089629);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-21689), problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-18160), problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-23088), problem5_0.a1135414112);
      assertEquals((-28555), problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iA");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-21212), problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a1138218523);
      assertEquals((-12067), problem5_0.a518089629);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-21689), problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-18160), problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-23088), problem5_0.a1135414112);
      assertEquals((-28555), problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("i");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(114, problem5_0.a1544481660);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      // SystemInUtil.addInputLine("e89} ccO5Th|");
      problem5_0.calculateOutput("iF");
      assertEquals((-26197), problem5_0.a1544481660);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-20962), problem5_0.a1219723237);
      assertEquals(245, problem5_0.a608789820);
      assertEquals((-26262), problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-10331), problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-26168), problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-29656), problem5_0.a645550563);
      
      problem5_0.calculateOutput("iA");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(325, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(245, problem5_0.a608789820);
      assertEquals(267, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a362703815);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(151, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(157, problem5_0.a518089629);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(193, problem5_0.a645550563);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(139, problem5_0.a1544481660);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(113, problem5_0.a1240663365);
      
      problem5_0.calculateOutput("iF");
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(245, problem5_0.a608789820);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a362703815);
      assertEquals(109, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(102, problem5_0.a1544481660);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(206, problem5_0.a1507548554);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(184, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(53, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(7, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iF");
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(245, problem5_0.a608789820);
      assertEquals(10, problem5_0.a362703815);
      assertEquals((-669), problem5_0.a754912052);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals((-20256), problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-17746), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-22473), problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-21566), problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-27674), problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(10, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-375), problem5_0.a518089629);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(2, problem5_1.a998820044);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(9, problem5_1.a737138579);
      assertTrue(problem5_1.cf);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(10, problem5_1.a339428322);
      assertNotNull(problem5_1);
      
      Problem5 problem5_2 = new Problem5();
      assertFalse(problem5_2.equals((Object)problem5_1));
      assertFalse(problem5_2.equals((Object)problem5_0));
      assertEquals(3, problem5_2.a608789820);
      assertEquals(9, problem5_2.a2015506287);
      assertEquals(213, problem5_2.a723549884);
      assertEquals(75, problem5_2.a321762694);
      assertEquals((-42), problem5_2.a2077034612);
      assertEquals(96, problem5_2.a518089629);
      assertEquals(201, problem5_2.a1507548554);
      assertEquals(15, problem5_2.a2112741742);
      assertEquals(12, problem5_2.a1176556958);
      assertEquals(6, problem5_2.a1175663450);
      assertEquals(189, problem5_2.a645550563);
      assertEquals((-63), problem5_2.a1680669372);
      assertEquals(112, problem5_2.a1219723237);
      assertEquals(318, problem5_2.a1318003364);
      assertEquals(3, problem5_2.a1922234987);
      assertEquals(265, problem5_2.a82233648);
      assertEquals(12, problem5_2.a424236355);
      assertEquals(172, problem5_2.a449177388);
      assertTrue(problem5_2.cf);
      assertEquals(15, problem5_2.a1185559685);
      assertEquals(9, problem5_2.a737138579);
      assertEquals(114, problem5_2.a1544481660);
      assertEquals(90, problem5_2.a754912052);
      assertEquals((-70), problem5_2.a15580097);
      assertEquals(2, problem5_2.a998820044);
      assertEquals(68, problem5_2.a1185506925);
      assertEquals(14, problem5_2.a362703815);
      assertEquals(1, problem5_2.a1138218523);
      assertEquals(10, problem5_2.a339428322);
      assertEquals(241, problem5_2.a281657923);
      assertEquals(212, problem5_2.a1135414112);
      assertEquals((-34), problem5_2.a853335314);
      assertEquals(7, problem5_2.a463267856);
      assertEquals(6, problem5_2.a674385059);
      assertEquals(113, problem5_2.a1240663365);
      assertNotNull(problem5_2);
      
      // Undeclared exception!
      try { 
        problem5_2.calculateOutput("e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(252, problem5_0.a1507548554);
      
      problem5_0.calculateOutput("iA");
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(10, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iB");
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-3611), problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iF");
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(168, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(118, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(96, problem5_0.a1544481660);
      assertEquals(187, problem5_0.a1507548554);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(207, problem5_0.a1135414112);
      
      problem5_0.calculateOutput("iA");
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(168, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(118, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(96, problem5_0.a1544481660);
      assertEquals(187, problem5_0.a1507548554);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(106, problem5_0.a754912052);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(207, problem5_0.a1135414112);
      
      problem5_0.calculateOutput("iF");
      assertEquals(10, problem5_0.a424236355);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-27150), problem5_0.a645550563);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-375), problem5_0.a518089629);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-17632), problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-20901), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-28054), problem5_0.a1507548554);
      assertEquals((-1039), problem5_0.a754912052);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-17296), problem5_0.a1544481660);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iA");
      assertEquals(175, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(174, problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(223, problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(39, problem5_0.a1219723237);
      assertEquals(183, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(26, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(117, problem5_0.a518089629);
      assertEquals((-1039), problem5_0.a754912052);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a674385059);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(158, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(291, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(11, problem5_0.a339428322);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(16, problem5_0.a2112741742);
      
      // SystemInUtil.addInputLine("g");
      problem5_0.calculateOutput("iA");
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(175, problem5_0.a1318003364);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-21149), problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(175, problem5_0.a1318003364);
      
      problem5_0.calculateOutput("iB");
      assertEquals(2, problem5_0.a998820044);
      assertEquals(104, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(232, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(232, problem5_0.a1507548554);
      assertEquals(89, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(176, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(175, problem5_0.a1318003364);
      
      problem5_0.a998820044 = 15;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("[&q");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertTrue(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      
      problem5_0.calculateOutput("iB");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      
      problem5_0.calculateOutput("iI");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-12358), problem5_0.a1507548554);
      assertEquals((-25621), problem5_0.a1135414112);
      assertEquals((-29109), problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-6322), problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-12367), problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-14514), problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      
      problem5_0.calculateOutput("iA");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(196, problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals(13, problem5_0.a1219723237);
      assertEquals(164, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(107, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a1176556958);
      assertEquals(172, problem5_0.a449177388);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "i";
      // SystemInUtil.addInputLine("iA");
      problem5_0.calculateOutput("iB");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(196, problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals(13, problem5_0.a1219723237);
      assertEquals(164, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(107, problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a1176556958);
      assertEquals(172, problem5_0.a449177388);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("2pS-gPe({CbuQu");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertNotNull(problem5_0);
      
      problem5_0.a645550563 = 3498;
      problem5_0.calculateOutput("iJ");
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-21716), problem5_0.a1135414112);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-25863), problem5_0.a1507548554);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(394182, problem5_0.a723549884);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      
      // SystemInUtil.addInputLine("i");
      problem5_0.calculateOutput("iB");
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-21716), problem5_0.a1135414112);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-25863), problem5_0.a1507548554);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(5, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(394182, problem5_0.a723549884);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      
      problem5_0.calculateOutput("iA");
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(290, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(151, problem5_0.a1544481660);
      assertEquals(193, problem5_0.a645550563);
      assertEquals(248, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(173, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(176, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(5, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(394182, problem5_0.a723549884);
      assertEquals(12, problem5_0.a737138579);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(4, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iC");
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-25593), problem5_0.a15580097);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(164, problem5_0.a1135414112);
      assertEquals(84, problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(184, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(183, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(5, problem5_0.a1175663450);
      assertEquals(110, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(394182, problem5_0.a723549884);
      assertEquals(12, problem5_0.a737138579);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      
      problem5_0.calculateOutput("iC");
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-25593), problem5_0.a15580097);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-19061), problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-5472), problem5_0.a645550563);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-3410), problem5_0.a1135414112);
      assertEquals((-21706), problem5_0.a1507548554);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(5, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(394182, problem5_0.a723549884);
      assertEquals(12, problem5_0.a737138579);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-14248), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-23361), problem5_0.a518089629);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("nPAo'XnquK=tsneZ.z");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertNotNull(problem5_0);
      
      String string0 = "iB";
      problem5_0.calculateOutput("iB");
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      
      problem5_0.calculateOutput("iE");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(133, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(282, problem5_0.a1135414112);
      assertEquals(192, problem5_0.a645550563);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(8, problem5_0.a737138579);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(226, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(171, problem5_0.a1219723237);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(268, problem5_0.a1507548554);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("Y");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      
      problem5_0.calculateOutput("iA");
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-21149), problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      
      String string0 = "iI";
      problem5_0.calculateOutput("iI");
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-21149), problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-25008), problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-13091), problem5_0.a1507548554);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals((-25017), problem5_0.a1219723237);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-25861), problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-3611), problem5_0.a1135414112);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      
      // SystemInUtil.addInputLine("e");
      problem5_0.calculateOutput("iI");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertFalse(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(169, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(54, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(73, problem5_0.a518089629);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(55, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(175, problem5_0.a645550563);
      assertEquals(7, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(207, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iI");
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-29164), problem5_0.a518089629);
      assertFalse(problem5_0.cf);
      assertEquals((-519), problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-5020), problem5_0.a1135414112);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-16310), problem5_0.a645550563);
      assertEquals(12, problem5_0.a1175663450);
      assertEquals((-27503), problem5_0.a1219723237);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(175, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(7, problem5_0.a1176556958);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-21001), problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-15726), problem5_0.a1544481660);
      assertEquals(10, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("r#IyV%{DkFUiABq}h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(241, problem5_0.a281657923);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iB");
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      
      problem5_0.calculateOutput("iB");
      assertEquals(241, problem5_0.a281657923);
      assertEquals(103, problem5_0.a754912052);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(267, problem5_0.a608789820);
      assertEquals((-26543), problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-2867), problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-918), problem5_0.a518089629);
      assertEquals((-496), problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-14975), problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-22043), problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      
      problem5_0.calculateOutput("iB");
      assertEquals(241, problem5_0.a281657923);
      assertEquals(103, problem5_0.a754912052);
      assertEquals(80, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(267, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(83, problem5_0.a518089629);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(205, problem5_0.a1507548554);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(89, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(220, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(181, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      
      problem5_0.a645550563 = 197;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(114, problem5_0.a1544481660);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(7, problem5_0.a674385059);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-28555), problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-23088), problem5_0.a1135414112);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-18160), problem5_0.a1544481660);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-21212), problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(2, problem5_0.a1138218523);
      assertEquals((-12067), problem5_0.a518089629);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-21689), problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("i");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertNotNull(problem5_0);
      
      problem5_0.a1135414112 = 1433;
      String string0 = "iB";
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-13852), problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-17449), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-18614), problem5_0.a754912052);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-13852), problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-17449), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iF");
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-18614), problem5_0.a754912052);
      assertEquals(321, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(266, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(155, problem5_0.a1219723237);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(153, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(223, problem5_0.a645550563);
      assertEquals(193, problem5_0.a1135414112);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-18614), problem5_0.a754912052);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(190, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(50, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(91, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(91, problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(171, problem5_0.a645550563);
      assertEquals(193, problem5_0.a1135414112);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.a518089629 = 6;
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(14, problem5_1.a362703815);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(241, problem5_1.a281657923);
      assertTrue(problem5_1.cf);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(10, problem5_1.a339428322);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals((-70), problem5_1.a15580097);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(222, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iB");
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(222, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iB");
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-22043), problem5_0.a1544481660);
      assertEquals((-496), problem5_0.a1135414112);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(267, problem5_0.a608789820);
      assertEquals((-14975), problem5_0.a1507548554);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-918), problem5_0.a518089629);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(103, problem5_0.a754912052);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-2867), problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-26543), problem5_0.a1219723237);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iB");
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(205, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(267, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(220, problem5_0.a1135414112);
      assertEquals(83, problem5_0.a518089629);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(80, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(181, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(103, problem5_0.a754912052);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(89, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iA");
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(205, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(267, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(220, problem5_0.a1135414112);
      assertEquals(83, problem5_0.a518089629);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(80, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(181, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(103, problem5_0.a754912052);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(89, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iA");
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-4507), problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-8630), problem5_0.a1219723237);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(10, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-14804), problem5_0.a754912052);
      assertEquals(267, problem5_0.a608789820);
      assertEquals(9, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-17633), problem5_0.a518089629);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-16572), problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-667), problem5_0.a1544481660);
      assertEquals((-29252), problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      
      problem5_0.a998820044 = (-1086);
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("&L`$8veI~%;m?L(Nl>");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(168, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(78, problem5_0.a518089629);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(125, problem5_0.a1544481660);
      assertEquals(160, problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(238, problem5_0.a518089629);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(361, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(207, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(3, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iH");
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-23824), problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-25978), problem5_0.a1219723237);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-9142), problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-3222), problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-1503), problem5_0.a1507548554);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-9635), problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      
      // SystemInUtil.addInputLine("f");
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertNotNull(problem5_0);
      
      String string0 = "iB";
      problem5_0.calculateOutput("iF");
      assertEquals(107, problem5_0.a754912052);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-13852), problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-17449), problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iB");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-13852), problem5_0.a645550563);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-1170), problem5_0.a754912052);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-17449), problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iF");
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(112, problem5_0.a518089629);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(168, problem5_0.a1507548554);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-1170), problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(208, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(105, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(64, problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-19507), problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(231, problem5_0.a754912052);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-21126), problem5_0.a2077034612);
      assertEquals((-13109), problem5_0.a1507548554);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-3414), problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-28702), problem5_0.a518089629);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-1631), problem5_0.a1135414112);
      assertEquals((-19680), problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("<=ZpD9`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertTrue(problem5_0.cf);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iF");
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals((-17449), problem5_0.a1544481660);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertFalse(problem5_0.cf);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals((-13852), problem5_0.a645550563);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      
      problem5_0.calculateOutput("iB");
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals((-17449), problem5_0.a1544481660);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals((-70), problem5_0.a15580097);
      assertFalse(problem5_0.cf);
      assertEquals((-1170), problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals((-13852), problem5_0.a645550563);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      
      problem5_0.calculateOutput("iB");
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(77, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-70), problem5_0.a15580097);
      assertFalse(problem5_0.cf);
      assertEquals((-1170), problem5_0.a754912052);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(173, problem5_0.a645550563);
      assertEquals(166, problem5_0.a1135414112);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals(34, problem5_0.a1219723237);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(120, problem5_0.a518089629);
      assertEquals(194, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a1176556958);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("{'a");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a1175663450);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(248, problem5_0.a1507548554);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(206, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(94, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(170, problem5_0.a645550563);
      assertEquals(165, problem5_0.a1507548554);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(175, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(71, problem5_0.a1219723237);
      assertEquals(91, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      
      String string0 = "iC";
      problem5_0.calculateOutput("iC");
      assertEquals(246, problem5_0.a1507548554);
      assertEquals(156, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(183, problem5_0.a518089629);
      assertEquals(221, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(375, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(164, problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("\"4{^3Xflb");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iF");
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(107, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-17449), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-13852), problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iF");
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-1144), problem5_0.a1219723237);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-19544), problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-28169), problem5_0.a1135414112);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-27304), problem5_0.a1507548554);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-18614), problem5_0.a754912052);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-17449), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-13852), problem5_0.a645550563);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iF");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(223, problem5_0.a645550563);
      assertEquals(321, problem5_0.a518089629);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(153, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(193, problem5_0.a1135414112);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-18614), problem5_0.a754912052);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(155, problem5_0.a1219723237);
      assertEquals(266, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(16, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iF");
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(50, problem5_0.a1544481660);
      assertEquals(171, problem5_0.a645550563);
      assertEquals(193, problem5_0.a1135414112);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(91, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(190, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-18614), problem5_0.a754912052);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(91, problem5_0.a1219723237);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      
      problem5_0.calculateOutput("iF");
      assertEquals((-4896), problem5_0.a1135414112);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(11, problem5_0.a424236355);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(50, problem5_0.a1544481660);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(171, problem5_0.a645550563);
      assertEquals((-24408), problem5_0.a608789820);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(91, problem5_0.a518089629);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(50, problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(190, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-18614), problem5_0.a754912052);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(91, problem5_0.a1219723237);
      assertFalse(problem5_0.cf);
      assertEquals(213, problem5_0.a723549884);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("/rsbq.YN m");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(189, problem5_0.a645550563);
      assertTrue(problem5_0.cf);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(264, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(155, problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(274, problem5_0.a1135414112);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(264, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(155, problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(193, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-20825), problem5_0.a1185506925);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(17, problem5_0.a1544481660);
      assertEquals(113, problem5_0.a518089629);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(189, problem5_0.a645550563);
      
      problem5_0.calculateOutput("iG");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(240, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(175, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(204, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(184, problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(336, problem5_0.a1135414112);
      assertEquals((-20825), problem5_0.a1185506925);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(17, problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(201, problem5_0.a1135414112);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-20825), problem5_0.a1185506925);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(17, problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(198, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(80, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(25, problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(201, problem5_0.a1135414112);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(17, problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(198, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(368, problem5_0.a1185506925);
      assertEquals(80, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(25, problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iG");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(201, problem5_0.a1135414112);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(179, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(17, problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(198, problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(368, problem5_0.a1185506925);
      assertEquals(80, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(25, problem5_0.a1219723237);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "f";
      stringArray0[1] = "e";
      problem5_0.calculateOutput("iE");
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(224, problem5_0.a518089629);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(344, problem5_0.a1135414112);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(261, problem5_0.a1507548554);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(160, problem5_0.a1544481660);
      assertEquals(185, problem5_0.a1219723237);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(207, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-22560), problem5_0.a1240663365);
      assertEquals(172, problem5_0.a449177388);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(368, problem5_0.a1185506925);
      assertEquals((-63), problem5_0.a1680669372);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(212, problem5_1.a1135414112);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(241, problem5_1.a281657923);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(213, problem5_1.a723549884);
      assertTrue(problem5_1.cf);
      assertEquals(9, problem5_1.a737138579);
      assertNotNull(problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput(". M{O;8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertTrue(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(8, problem5_0.a463267856);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(4, problem5_0.a1922234987);
      
      String string0 = "iE";
      // SystemInUtil.addInputLine("e");
      problem5_0.calculateOutput("iE");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(64, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(14, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(62, problem5_0.a1219723237);
      assertEquals(187, problem5_0.a645550563);
      assertEquals(285, problem5_0.a281657923);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(95, problem5_0.a518089629);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(206, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(209, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      
      problem5_0.calculateOutput("iA");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(64, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(14, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(62, problem5_0.a1219723237);
      assertEquals(187, problem5_0.a645550563);
      assertEquals(285, problem5_0.a281657923);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(95, problem5_0.a518089629);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(206, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(209, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      
      BufferedReader bufferedReader0 = Problem5.stdin;
      assertNotNull(bufferedReader0);
      
      BufferedReader bufferedReader1 = new BufferedReader(bufferedReader0, 9);
      assertFalse(bufferedReader1.equals((Object)bufferedReader0));
      assertNotNull(bufferedReader1);
      
      problem5_0.calculateOutput("iE");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(64, problem5_0.a1544481660);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(62, problem5_0.a1219723237);
      assertEquals(187, problem5_0.a645550563);
      assertEquals(285, problem5_0.a281657923);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(95, problem5_0.a518089629);
      assertEquals(7, problem5_0.a1176556958);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(206, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(209, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput(";RR9gaD1`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-42), problem5_0.a2077034612);
      assertTrue(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(222, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(144, problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iB");
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(222, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(144, problem5_0.a1219723237);
      
      problem5_0.calculateOutput("iB");
      assertEquals(267, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-26543), problem5_0.a1219723237);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(103, problem5_0.a754912052);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-22043), problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-14975), problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-918), problem5_0.a518089629);
      assertEquals((-496), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-2867), problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(10, problem5_1.a339428322);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(9, problem5_1.a737138579);
      assertTrue(problem5_1.cf);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(3, problem5_1.a608789820);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(6, problem5_1.a1175663450);
      assertNotNull(problem5_1);
      
      problem5_1.calculateOutput("iI");
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(10, problem5_1.a339428322);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(10, problem5_1.a2112741742);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(7, problem5_1.a463267856);
      assertFalse(problem5_1.cf);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(3, problem5_1.a608789820);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(6, problem5_1.a1175663450);
      assertNotSame(problem5_1, problem5_0);
      
      // SystemInUtil.addInputLine("4G4&ZMGl,eWlo3o");
      problem5_0.calculateOutput("iI");
      assertFalse(problem5_0.equals((Object)problem5_1));
      assertEquals(267, problem5_0.a608789820);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-26543), problem5_0.a1219723237);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(103, problem5_0.a754912052);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-22043), problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-14975), problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals((-918), problem5_0.a518089629);
      assertEquals((-496), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-6956), problem5_0.a1318003364);
      assertEquals((-2867), problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertNotSame(problem5_0, problem5_1);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertTrue(problem5_0.cf);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(212, problem5_0.a1135414112);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-15021), problem5_0.a1544481660);
      assertFalse(problem5_0.cf);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(262, problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertFalse(problem5_0.cf);
      assertEquals(333, problem5_0.a1135414112);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(142, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(169, problem5_0.a1219723237);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(202, problem5_0.a645550563);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      
      // SystemInUtil.addInputLine("iJ");
      problem5_0.calculateOutput("iJ");
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(262, problem5_0.a1507548554);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertFalse(problem5_0.cf);
      assertEquals(333, problem5_0.a1135414112);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(142, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(169, problem5_0.a1219723237);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(202, problem5_0.a645550563);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      
      problem5_0.calculateOutput("iC");
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(120, problem5_0.a518089629);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-26), problem5_0.a1680669372);
      assertEquals(41, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(168, problem5_0.a1135414112);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(12, problem5_0.a362703815);
      assertEquals(171, problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(212, problem5_0.a1507548554);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(65, problem5_0.a1544481660);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(213, problem5_1.a723549884);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(189, problem5_1.a645550563);
      assertEquals(2, problem5_1.a998820044);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(9, problem5_1.a737138579);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(7, problem5_1.a463267856);
      assertTrue(problem5_1.cf);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(12, problem5_1.a424236355);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(6, problem5_1.a1175663450);
      assertNotNull(problem5_1);
      
      Problem5 problem5_2 = new Problem5();
      assertFalse(problem5_2.equals((Object)problem5_1));
      assertFalse(problem5_2.equals((Object)problem5_0));
      assertEquals(318, problem5_2.a1318003364);
      assertEquals(6, problem5_2.a1175663450);
      assertEquals(14, problem5_2.a362703815);
      assertEquals(15, problem5_2.a2112741742);
      assertEquals(9, problem5_2.a2015506287);
      assertEquals(201, problem5_2.a1507548554);
      assertEquals(9, problem5_2.a737138579);
      assertTrue(problem5_2.cf);
      assertEquals((-42), problem5_2.a2077034612);
      assertEquals(114, problem5_2.a1544481660);
      assertEquals((-63), problem5_2.a1680669372);
      assertEquals(3, problem5_2.a1922234987);
      assertEquals(112, problem5_2.a1219723237);
      assertEquals(265, problem5_2.a82233648);
      assertEquals(12, problem5_2.a1176556958);
      assertEquals((-34), problem5_2.a853335314);
      assertEquals(10, problem5_2.a339428322);
      assertEquals(189, problem5_2.a645550563);
      assertEquals(90, problem5_2.a754912052);
      assertEquals((-70), problem5_2.a15580097);
      assertEquals(7, problem5_2.a463267856);
      assertEquals(241, problem5_2.a281657923);
      assertEquals(6, problem5_2.a674385059);
      assertEquals(213, problem5_2.a723549884);
      assertEquals(113, problem5_2.a1240663365);
      assertEquals(3, problem5_2.a608789820);
      assertEquals(172, problem5_2.a449177388);
      assertEquals(212, problem5_2.a1135414112);
      assertEquals(12, problem5_2.a424236355);
      assertEquals(96, problem5_2.a518089629);
      assertEquals(68, problem5_2.a1185506925);
      assertEquals(2, problem5_2.a998820044);
      assertEquals(75, problem5_2.a321762694);
      assertEquals(1, problem5_2.a1138218523);
      assertEquals(15, problem5_2.a1185559685);
      assertNotNull(problem5_2);
      
      Problem5 problem5_3 = new Problem5();
      assertFalse(problem5_3.equals((Object)problem5_0));
      assertFalse(problem5_3.equals((Object)problem5_1));
      assertFalse(problem5_3.equals((Object)problem5_2));
      assertEquals(3, problem5_3.a1922234987);
      assertEquals(189, problem5_3.a645550563);
      assertEquals((-42), problem5_3.a2077034612);
      assertEquals(3, problem5_3.a608789820);
      assertEquals(2, problem5_3.a998820044);
      assertEquals((-34), problem5_3.a853335314);
      assertEquals(241, problem5_3.a281657923);
      assertEquals(68, problem5_3.a1185506925);
      assertEquals(75, problem5_3.a321762694);
      assertEquals(96, problem5_3.a518089629);
      assertEquals(318, problem5_3.a1318003364);
      assertEquals(14, problem5_3.a362703815);
      assertEquals(213, problem5_3.a723549884);
      assertEquals(90, problem5_3.a754912052);
      assertEquals(9, problem5_3.a737138579);
      assertEquals(114, problem5_3.a1544481660);
      assertTrue(problem5_3.cf);
      assertEquals((-63), problem5_3.a1680669372);
      assertEquals(212, problem5_3.a1135414112);
      assertEquals(113, problem5_3.a1240663365);
      assertEquals(172, problem5_3.a449177388);
      assertEquals(12, problem5_3.a424236355);
      assertEquals(12, problem5_3.a1176556958);
      assertEquals(6, problem5_3.a1175663450);
      assertEquals(6, problem5_3.a674385059);
      assertEquals(265, problem5_3.a82233648);
      assertEquals(7, problem5_3.a463267856);
      assertEquals(15, problem5_3.a1185559685);
      assertEquals(112, problem5_3.a1219723237);
      assertEquals(1, problem5_3.a1138218523);
      assertEquals((-70), problem5_3.a15580097);
      assertEquals(10, problem5_3.a339428322);
      assertEquals(9, problem5_3.a2015506287);
      assertEquals(15, problem5_3.a2112741742);
      assertEquals(201, problem5_3.a1507548554);
      assertNotNull(problem5_3);
      
      Problem5 problem5_4 = new Problem5();
      assertFalse(problem5_4.equals((Object)problem5_0));
      assertFalse(problem5_4.equals((Object)problem5_3));
      assertFalse(problem5_4.equals((Object)problem5_2));
      assertFalse(problem5_4.equals((Object)problem5_1));
      assertTrue(problem5_4.cf);
      assertEquals(7, problem5_4.a463267856);
      assertEquals(9, problem5_4.a737138579);
      assertEquals(12, problem5_4.a424236355);
      assertEquals(172, problem5_4.a449177388);
      assertEquals((-63), problem5_4.a1680669372);
      assertEquals(212, problem5_4.a1135414112);
      assertEquals(114, problem5_4.a1544481660);
      assertEquals(112, problem5_4.a1219723237);
      assertEquals(15, problem5_4.a1185559685);
      assertEquals(265, problem5_4.a82233648);
      assertEquals(113, problem5_4.a1240663365);
      assertEquals(6, problem5_4.a674385059);
      assertEquals(12, problem5_4.a1176556958);
      assertEquals(10, problem5_4.a339428322);
      assertEquals(6, problem5_4.a1175663450);
      assertEquals(15, problem5_4.a2112741742);
      assertEquals(201, problem5_4.a1507548554);
      assertEquals((-70), problem5_4.a15580097);
      assertEquals(9, problem5_4.a2015506287);
      assertEquals((-42), problem5_4.a2077034612);
      assertEquals(96, problem5_4.a518089629);
      assertEquals(3, problem5_4.a1922234987);
      assertEquals(75, problem5_4.a321762694);
      assertEquals(3, problem5_4.a608789820);
      assertEquals(68, problem5_4.a1185506925);
      assertEquals(318, problem5_4.a1318003364);
      assertEquals(241, problem5_4.a281657923);
      assertEquals((-34), problem5_4.a853335314);
      assertEquals(1, problem5_4.a1138218523);
      assertEquals(2, problem5_4.a998820044);
      assertEquals(14, problem5_4.a362703815);
      assertEquals(189, problem5_4.a645550563);
      assertEquals(90, problem5_4.a754912052);
      assertEquals(213, problem5_4.a723549884);
      assertNotNull(problem5_4);
      
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertTrue(problem5_0.cf);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(212, problem5_0.a1135414112);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iG");
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(154, problem5_0.a1219723237);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(248, problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(206, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(155, problem5_0.a1544481660);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(264, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(274, problem5_0.a1135414112);
      
      problem5_0.calculateOutput("iG");
      assertEquals(211, problem5_0.a1507548554);
      assertEquals(174, problem5_0.a1135414112);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(38, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(78, problem5_0.a518089629);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(168, problem5_0.a645550563);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-16), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      
      problem5_0.a1644966660 = "r0pC<;h";
      String string0 = "iD";
      problem5_0.calculateOutput("iD");
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(146, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(172, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a1176556958);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(256, problem5_0.a1507548554);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(291, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(203, problem5_0.a645550563);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(236, problem5_0.a518089629);
      
      problem5_0.calculateOutput("iD");
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-17210), problem5_0.a1544481660);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-17310), problem5_0.a1135414112);
      assertEquals((-19497), problem5_0.a1219723237);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-22854), problem5_0.a1507548554);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-25933), problem5_0.a518089629);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-766), problem5_0.a645550563);
      assertEquals(2, problem5_0.a1922234987);
      
      problem5_0.a339428322 = 64;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a674385059);
      assertTrue(problem5_0.cf);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(15, problem5_0.a2112741742);
      
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iG");
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(181, problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(337, problem5_0.a1135414112);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals(136, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(156, problem5_0.a518089629);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(251, problem5_0.a1507548554);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(26821, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(200, problem5_0.a645550563);
      assertEquals((-70), problem5_0.a15580097);
      
      String string0 = "q}].ZDbY?Sb~";
      problem5_0.a1867715898 = "q}].ZDbY?Sb~";
      problem5_0.calculateOutput("iG");
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(113, problem5_0.a1544481660);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(92, problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(180, problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(222, problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(170, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(26821, problem5_0.a1240663365);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(104, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      
      problem5_0.calculateOutput("iG");
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-6003), problem5_0.a518089629);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-16376), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-6847), problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-25491), problem5_0.a1219723237);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(5, problem5_0.a1138218523);
      assertEquals((-7801), problem5_0.a1135414112);
      assertEquals(26821, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-14523), problem5_0.a1507548554);
      
      problem5_0.calculateOutput("iG");
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-6003), problem5_0.a518089629);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-16376), problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-6847), problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-25491), problem5_0.a1219723237);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals((-31), problem5_0.a853335314);
      assertEquals(5, problem5_0.a1138218523);
      assertEquals((-7801), problem5_0.a1135414112);
      assertEquals(26821, problem5_0.a1240663365);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-14523), problem5_0.a1507548554);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-27061), problem5_0.a1507548554);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-25850), problem5_0.a1135414112);
      assertEquals((-25780), problem5_0.a1219723237);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(9, problem5_0.a339428322);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(14, problem5_0.a362703815);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(169, problem5_0.a1219723237);
      assertEquals(202, problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(262, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(333, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(142, problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(11, problem5_0.a339428322);
      
      // SystemInUtil.addInputLine("iJ");
      problem5_0.calculateOutput("iJ");
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(169, problem5_0.a1219723237);
      assertEquals(202, problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(262, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(333, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(142, problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(11, problem5_0.a339428322);
      
      problem5_0.a1175663450 = 995;
      problem5_0.calculateOutput("iJ");
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(995, problem5_0.a1175663450);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(171, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(189, problem5_0.a1507548554);
      assertEquals(59, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(184, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(30, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-36), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(113, problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(995, problem5_0.a1175663450);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(171, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(189, problem5_0.a1507548554);
      assertEquals(59, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(184, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(30, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-36), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(113, problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a362703815);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(13, problem5_0.a2112741742);
      assertEquals(168, problem5_0.a1240663365);
      assertEquals(995, problem5_0.a1175663450);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(171, problem5_0.a1135414112);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(23574, problem5_0.a723549884);
      assertEquals(189, problem5_0.a1507548554);
      assertEquals(59, problem5_0.a1219723237);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(184, problem5_0.a645550563);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(30, problem5_0.a1544481660);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-36), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(113, problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(189, problem5_1.a645550563);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(15, problem5_1.a1185559685);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(90, problem5_1.a754912052);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(172, problem5_1.a449177388);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(12, problem5_1.a424236355);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(241, problem5_1.a281657923);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(9, problem5_1.a737138579);
      assertTrue(problem5_1.cf);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(265, problem5_1.a82233648);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(12, problem5_1.a1176556958);
      assertNotNull(problem5_1);
      
      problem5_1.a1526400317 = "}rS9kyp;_4\"/=~pT";
      problem5_0.a1526400317 = "h";
      // Undeclared exception!
      try { 
        problem5_1.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertTrue(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(189, problem5_0.a645550563);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iF");
      assertEquals(9, problem5_0.a339428322);
      assertEquals((-8938), problem5_0.a1219723237);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-16856), problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-2240), problem5_0.a518089629);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-15616), problem5_0.a1135414112);
      assertEquals((-2564), problem5_0.a645550563);
      assertEquals((-13994), problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iA");
      assertEquals(3, problem5_0.a998820044);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(164, problem5_0.a1240663365);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals(268, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(246, problem5_0.a1507548554);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(164, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(144, problem5_0.a1544481660);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(152, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(211, problem5_0.a645550563);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.calculateOutput("iB");
      assertEquals(47, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(164, problem5_0.a1240663365);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals((-63), problem5_0.a1680669372);
      assertFalse(problem5_0.cf);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(103, problem5_0.a518089629);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(208, problem5_0.a1507548554);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals(46, problem5_0.a1544481660);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(152, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(178, problem5_0.a645550563);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      
      problem5_0.a645550563 = (-2406);
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("iF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertTrue(problem5_0.cf);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertNotNull(problem5_0);
      
      problem5_0.a881797486 = "oU";
      problem5_0.calculateOutput("iD");
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(165, problem5_0.a1219723237);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(208, problem5_0.a645550563);
      assertEquals(255, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(303, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(10115, problem5_0.a1240663365);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(190, problem5_0.a518089629);
      assertEquals(152, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(12, problem5_0.a2112741742);
      assertFalse(problem5_0.cf);
      
      problem5_0.calculateOutput("iD");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(232, problem5_0.a1135414112);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(15, problem5_0.a1544481660);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(184, problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(110, problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(10115, problem5_0.a1240663365);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(196, problem5_0.a1507548554);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(105, problem5_0.a754912052);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(25, problem5_0.a1219723237);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(213, problem5_0.a723549884);
      assertFalse(problem5_0.cf);
      
      Problem5 problem5_1 = new Problem5();
      assertFalse(problem5_1.equals((Object)problem5_0));
      assertEquals(90, problem5_1.a754912052);
      assertEquals(265, problem5_1.a82233648);
      assertEquals(112, problem5_1.a1219723237);
      assertEquals(113, problem5_1.a1240663365);
      assertEquals(172, problem5_1.a449177388);
      assertEquals((-70), problem5_1.a15580097);
      assertEquals(12, problem5_1.a424236355);
      assertEquals(9, problem5_1.a737138579);
      assertTrue(problem5_1.cf);
      assertEquals(10, problem5_1.a339428322);
      assertEquals(12, problem5_1.a1176556958);
      assertEquals(189, problem5_1.a645550563);
      assertEquals((-63), problem5_1.a1680669372);
      assertEquals(3, problem5_1.a1922234987);
      assertEquals(6, problem5_1.a1175663450);
      assertEquals(318, problem5_1.a1318003364);
      assertEquals(114, problem5_1.a1544481660);
      assertEquals((-42), problem5_1.a2077034612);
      assertEquals(15, problem5_1.a2112741742);
      assertEquals(3, problem5_1.a608789820);
      assertEquals(213, problem5_1.a723549884);
      assertEquals(201, problem5_1.a1507548554);
      assertEquals(9, problem5_1.a2015506287);
      assertEquals(68, problem5_1.a1185506925);
      assertEquals(14, problem5_1.a362703815);
      assertEquals(212, problem5_1.a1135414112);
      assertEquals(241, problem5_1.a281657923);
      assertEquals((-34), problem5_1.a853335314);
      assertEquals(7, problem5_1.a463267856);
      assertEquals(6, problem5_1.a674385059);
      assertEquals(2, problem5_1.a998820044);
      assertEquals(1, problem5_1.a1138218523);
      assertEquals(96, problem5_1.a518089629);
      assertEquals(75, problem5_1.a321762694);
      assertEquals(15, problem5_1.a1185559685);
      assertNotNull(problem5_1);
      
      problem5_0.a674385059 = 1917;
      problem5_0.calculateOutput("iB");
      assertFalse(problem5_0.equals((Object)problem5_1));
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-19283), problem5_0.a1544481660);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-24901), problem5_0.a1507548554);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-13321), problem5_0.a1135414112);
      assertEquals(10115, problem5_0.a1240663365);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-25298), problem5_0.a645550563);
      assertEquals(105, problem5_0.a754912052);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(172, problem5_0.a449177388);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-1992), problem5_0.a1219723237);
      assertEquals((-27283), problem5_0.a518089629);
      assertFalse(problem5_0.cf);
      assertEquals(145, problem5_0.a723549884);
      assertNotSame(problem5_0, problem5_1);
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iB");
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(9, problem5_0.a2015506287);
      
      problem5_0.calculateOutput("iB");
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(210, problem5_0.a754912052);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      
      problem5_0.calculateOutput("iA");
      assertEquals((-28019), problem5_0.a1219723237);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-15168), problem5_0.a518089629);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(5, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals((-16302), problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertFalse(problem5_0.cf);
      assertEquals(301, problem5_0.a608789820);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-17370), problem5_0.a1135414112);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(110, problem5_0.a754912052);
      assertEquals((-5823), problem5_0.a1507548554);
      assertEquals((-19651), problem5_0.a1544481660);
      
      problem5_0.calculateOutput("iB");
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(241, problem5_0.a281657923);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(72, problem5_0.a1544481660);
      assertEquals(202, problem5_0.a1507548554);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(85, problem5_0.a1219723237);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(82, problem5_0.a518089629);
      assertEquals(214, problem5_0.a1135414112);
      assertFalse(problem5_0.cf);
      assertEquals(301, problem5_0.a608789820);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(180, problem5_0.a645550563);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(110, problem5_0.a754912052);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(11, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a2015506287);
      
      problem5_0.a1135414112 = 346;
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("D}");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals((-63), problem5_0.a1680669372);
      assertTrue(problem5_0.cf);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      assertNotNull(problem5_0);
      
      problem5_0.a1138218523 = 1604;
      problem5_0.calculateOutput("iB");
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(201, problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1604, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iF");
      assertEquals(9, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a998820044);
      assertFalse(problem5_0.cf);
      assertEquals((-8938), problem5_0.a1219723237);
      assertEquals((-2564), problem5_0.a645550563);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-13994), problem5_0.a1507548554);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals((-15616), problem5_0.a1135414112);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(1604, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals((-2240), problem5_0.a518089629);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-16856), problem5_0.a1544481660);
      
      problem5_0.calculateOutput("iA");
      assertEquals(164, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertFalse(problem5_0.cf);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(152, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(268, problem5_0.a518089629);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(211, problem5_0.a645550563);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(144, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(1604, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(12, problem5_0.a2112741742);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(265, problem5_0.a82233648);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals(7, problem5_0.a674385059);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(246, problem5_0.a1507548554);
      assertEquals(8, problem5_0.a463267856);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(164, problem5_0.a1219723237);
      assertEquals(6, problem5_0.a1175663450);
      
      problem5_0.calculateOutput("iA");
      assertEquals(164, problem5_0.a1240663365);
      assertEquals(318, problem5_0.a1318003364);
      assertFalse(problem5_0.cf);
      assertEquals(152, problem5_0.a1135414112);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(13, problem5_0.a424236355);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(178, problem5_0.a645550563);
      assertEquals(14, problem5_0.a2112741742);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(196, problem5_0.a1507548554);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(28, problem5_0.a1544481660);
      assertEquals(1604, problem5_0.a1138218523);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-13013), problem5_0.a754912052);
      assertEquals(54, problem5_0.a1219723237);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(103, problem5_0.a518089629);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(6, problem5_0.a1175663450);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("(lDf 3WeHuO6MzK&P");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(90, problem5_0.a754912052);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(96, problem5_0.a518089629);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(10, problem5_0.a339428322);
      assertNotNull(problem5_0);
      
      problem5_0.a645550563 = 3498;
      String string0 = "iJ";
      problem5_0.calculateOutput("iJ");
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-25863), problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(172, problem5_0.a449177388);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-21716), problem5_0.a1135414112);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(394182, problem5_0.a723549884);
      assertEquals((-25780), problem5_0.a1219723237);
      
      // SystemInUtil.addInputLine("i");
      problem5_0.calculateOutput("iB");
      assertEquals(90, problem5_0.a754912052);
      assertEquals((-25863), problem5_0.a1507548554);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-15021), problem5_0.a1544481660);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(5, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(10, problem5_0.a2112741742);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-21716), problem5_0.a1135414112);
      assertEquals((-28433), problem5_0.a645550563);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-27148), problem5_0.a518089629);
      assertEquals(1, problem5_0.a998820044);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals(394182, problem5_0.a723549884);
      assertEquals((-25780), problem5_0.a1219723237);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "h";
      problem5_0.calculateOutput("iG");
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(12, problem5_0.a424236355);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(143, problem5_0.a1219723237);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(149, problem5_0.a1544481660);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(5, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(380, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(9, problem5_0.a737138579);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(216, problem5_0.a645550563);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(10, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(284, problem5_0.a518089629);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals(263, problem5_0.a1507548554);
      assertEquals(394182, problem5_0.a723549884);
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      assertTrue(problem5_0.cf);
      assertNotNull(problem5_0);
      
      problem5_0.a645550563 = 3498;
      // SystemInUtil.addInputLine("i");
      String string0 = "iB";
      problem5_0.calculateOutput("iB");
      assertEquals(2, problem5_0.a998820044);
      assertEquals(10, problem5_0.a339428322);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(9, problem5_0.a1176556958);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(3498, problem5_0.a645550563);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(6, problem5_0.a1175663450);
      assertFalse(problem5_0.cf);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-63), problem5_0.a1680669372);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(265, problem5_0.a82233648);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Problem5 problem5_0 = new Problem5();
      assertEquals(9, problem5_0.a737138579);
      assertTrue(problem5_0.cf);
      assertEquals(114, problem5_0.a1544481660);
      assertEquals(6, problem5_0.a674385059);
      assertEquals(7, problem5_0.a463267856);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(14, problem5_0.a362703815);
      assertEquals(10, problem5_0.a339428322);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(201, problem5_0.a1507548554);
      assertEquals(2, problem5_0.a998820044);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(212, problem5_0.a1135414112);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(9, problem5_0.a2015506287);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(96, problem5_0.a518089629);
      assertEquals(15, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(112, problem5_0.a1219723237);
      assertEquals(189, problem5_0.a645550563);
      assertEquals(3, problem5_0.a1922234987);
      assertEquals((-63), problem5_0.a1680669372);
      assertNotNull(problem5_0);
      
      problem5_0.calculateOutput("iA");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals(14, problem5_0.a362703815);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iB");
      assertEquals(9, problem5_0.a737138579);
      assertEquals(332, problem5_0.a1135414112);
      assertEquals(10, problem5_0.a2015506287);
      assertFalse(problem5_0.cf);
      assertEquals(291, problem5_0.a518089629);
      assertEquals(90, problem5_0.a754912052);
      assertEquals(16, problem5_0.a2112741742);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals(144, problem5_0.a1219723237);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(3, problem5_0.a608789820);
      assertEquals(158, problem5_0.a1544481660);
      assertEquals(4, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(8, problem5_0.a463267856);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(7, problem5_0.a674385059);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(213, problem5_0.a723549884);
      assertEquals(11, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(3, problem5_0.a998820044);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(222, problem5_0.a645550563);
      assertEquals(252, problem5_0.a1507548554);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iA");
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-19805), problem5_0.a1219723237);
      assertEquals((-25530), problem5_0.a645550563);
      assertEquals((-13951), problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-24028), problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(191, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-14339), problem5_0.a1544481660);
      assertEquals(12, problem5_0.a424236355);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-19912), problem5_0.a1135414112);
      assertEquals(115, problem5_0.a754912052);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      
      problem5_0.calculateOutput("iJ");
      assertEquals(9, problem5_0.a737138579);
      assertEquals((-19805), problem5_0.a1219723237);
      assertEquals((-25530), problem5_0.a645550563);
      assertEquals((-13951), problem5_0.a1507548554);
      assertFalse(problem5_0.cf);
      assertEquals((-14447), problem5_0.a754912052);
      assertEquals(172, problem5_0.a449177388);
      assertEquals(6, problem5_0.a1175663450);
      assertEquals((-70), problem5_0.a15580097);
      assertEquals((-34), problem5_0.a853335314);
      assertEquals((-24028), problem5_0.a518089629);
      assertEquals(1, problem5_0.a1138218523);
      assertEquals(15, problem5_0.a1185559685);
      assertEquals(191, problem5_0.a608789820);
      assertEquals(68, problem5_0.a1185506925);
      assertEquals((-14339), problem5_0.a1544481660);
      assertEquals(113, problem5_0.a1240663365);
      assertEquals(2, problem5_0.a1922234987);
      assertEquals((-42), problem5_0.a2077034612);
      assertEquals(241, problem5_0.a281657923);
      assertEquals(15, problem5_0.a424236355);
      assertEquals(6, problem5_0.a463267856);
      assertEquals(5, problem5_0.a674385059);
      assertEquals(75, problem5_0.a321762694);
      assertEquals(9, problem5_0.a362703815);
      assertEquals(17, problem5_0.a2112741742);
      assertEquals(213, problem5_0.a723549884);
      assertEquals((-19912), problem5_0.a1135414112);
      assertEquals(9, problem5_0.a339428322);
      assertEquals(318, problem5_0.a1318003364);
      assertEquals(1, problem5_0.a998820044);
      assertEquals(12, problem5_0.a1176556958);
      assertEquals(265, problem5_0.a82233648);
      assertEquals(8, problem5_0.a2015506287);
      assertEquals((-63), problem5_0.a1680669372);
      
      // Undeclared exception!
      try { 
        problem5_0.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem3", e);
      }
  }
}
