package nl.tudelft.mutated_rers; 

/*
 * This file was automatically generated by EvoSuite
 */

import org.junit.Test;
import static org.junit.Assert.*;

public class Problem1_ESTest {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iG");
        assertEquals(4, problem1_0.a691849188);

        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iG");
        assertEquals(10, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iI");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iI");
        assertEquals(13, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test002() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iB");
        assertEquals(7, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test003() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iF");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iF");
        assertEquals(13, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test004() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iC");
        problem1_0.calculateOutput("iC");
        problem1_0.calculateOutput("iC");
        assertEquals(6, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test005() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iD");
        assertEquals(6, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test006() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iG");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test007() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        assertTrue(problem1_0.cf);

        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iI");
        problem1_0.calculateOutput("iI");
        problem1_0.calculateOutput("iI");
        assertEquals(13, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test008() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iA");
        assertEquals(7, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test009() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iA");
        assertEquals(14, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test010() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iB");
        problem1_0.calculateOutput("iB");
        problem1_0.calculateOutput("iA");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iF");
        problem1_0.calculateOutput("iF");
        problem1_0.calculateOutput("iH");
        assertEquals(12, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iB");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iB");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test013() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iC");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iC");
        assertFalse(problem1_0.cf);
    }

    @Test(timeout = 4000)
    public void test014() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iD");
        assertEquals(5, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test015() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iB");
        problem1_0.calculateOutput("iE");
        assertEquals(5, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test016() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iF");
        assertEquals(15, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test017() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iG");
        assertEquals(12, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test018() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iI");
        assertEquals(9, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test019() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        assertEquals(5, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test020() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("g");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test021() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iB");
        problem1_0.calculateOutput("iB");
        assertEquals(13, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iF");
        problem1_0.calculateOutput("iF");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iF");
        assertEquals(13, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        assertEquals(12, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test024() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iA");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iA");
        problem1_0.calculateOutput("iA");
        assertEquals(6, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test025() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iC");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("\"X;Q%]Xr,TT27.");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test026() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        assertEquals(6, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test027() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iD");
        assertEquals(7, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test028() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iG");
        assertEquals(9, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test029() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("e");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test030() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iF");
        problem1_0.calculateOutput("iI");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test031() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        assertEquals(4, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test032() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.a691849188 = 8;
        problem1_0.calculateOutput("iG");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput(" q,m?y4-<U/?*x0< ");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iH");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test035() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iI");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test036() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test037() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("oX");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test038() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iI");
        problem1_0.calculateOutput("iI");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("iB");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test039() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iC");
        problem1_0.calculateOutput("iC");
        assertEquals(7, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test040() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iC");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test041() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iF");
        problem1_0.calculateOutput("iF");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test042() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        assertEquals(9, problem1_0.a691849188);

        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iD");
        assertEquals(10, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test043() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iG");
        assertEquals(11, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iD");
        assertFalse(problem1_0.cf);
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iG");
        assertEquals(7, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test046() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("e");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test047() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iC");
        problem1_0.calculateOutput("iE");
        assertEquals(11, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test048() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.a1305805768 = 11;
        problem1_0.calculateOutput("iF");
        problem1_0.calculateOutput("iF");
        assertEquals(11, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test049() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        assertEquals(8, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test050() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        assertEquals(10, problem1_0.a1122863037);
        assertEquals(10, problem1_0.a691849188);

        problem1_0.a547336540 = "i";
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iA");
        assertEquals(13, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test051() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        assertEquals(11, problem1_0.a691849188);

        problem1_0.calculateOutput("iE");
        assertEquals(10, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test052() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        assertEquals(13, problem1_0.a1305805768);

        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        assertEquals(10, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test053() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iA");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        assertEquals(14, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test054() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iA");
        problem1_0.calculateOutput("iE");
        assertEquals(14, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.a612577343 = 4;
        problem1_0.calculateOutput("iA");
        problem1_0.calculateOutput("iA");
        problem1_0.calculateOutput("iA");
        assertEquals(4, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iA");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("1CKpj;6}Q+*'");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iA");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iE");
        assertEquals(10, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test058() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iD");
        assertEquals(10, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test059() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        assertEquals(15, problem1_0.a1305805768);

        problem1_0.a1305805768 = 10;
        problem1_0.calculateOutput("iF");
        assertEquals(10, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test060() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iA");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iJ");
        assertEquals(10, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test061() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iA");
        assertEquals(7, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test062() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.a1305805768 = 10;
        problem1_0.calculateOutput("iB");
        assertEquals(14, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test063() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.a1305805768 = 10;
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("YiG");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test064() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iH");
        assertEquals(14, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test065() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.a1305805768 = 11;
        problem1_0.calculateOutput("iB");
        assertEquals(13, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        assertEquals(11, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.a1305805768 = 11;
        problem1_0.calculateOutput("iG");
        assertEquals(11, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test068() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iA");
        assertEquals(8, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test069() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        assertEquals(8, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test070() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.a1305805768 = 11;
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("g");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test071() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iB");
        problem1_0.calculateOutput("iB");
        problem1_0.calculateOutput("iB");
        problem1_0.calculateOutput("iA");
        assertEquals(5, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test072() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iC");
        problem1_0.calculateOutput("iC");
        problem1_0.calculateOutput("iC");
        problem1_0.calculateOutput("iC");
        assertEquals(9, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test073() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        assertEquals(12, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test074() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iF");
        problem1_0.calculateOutput("iF");
        assertEquals(15, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test075() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iG");
        assertEquals(15, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test076() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iI");
        problem1_0.calculateOutput("iI");
        assertEquals(15, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iA");
        problem1_0.calculateOutput("iA");
        problem1_0.calculateOutput("iA");
        assertEquals(15, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iC");
        problem1_0.calculateOutput("iD");
        assertEquals(15, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test079() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iJ");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("f");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test080() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        assertEquals(10, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test081() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iC");
        problem1_0.calculateOutput("iC");
        assertEquals(7, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test082() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        assertEquals(15, problem1_0.a1305805768);

        problem1_0.a1305805768 = 13;
        problem1_0.calculateOutput("iD");
        assertEquals(10, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test083() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iE");
        assertEquals(7, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test084() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iC");
        problem1_0.calculateOutput("iF");
        assertEquals(13, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test085() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        assertEquals(13, problem1_0.a1305805768);

        problem1_0.a547336540 = "i";
        problem1_0.calculateOutput("iI");
        problem1_0.calculateOutput("iI");
        assertEquals(8, problem1_0.a612577343);
        assertEquals(10, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test086() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iJ");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test087() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.a547336540 = "i";
        problem1_0.calculateOutput("iA");
        problem1_0.calculateOutput("iA");
        assertEquals(10, problem1_0.a691849188);
        assertEquals(8, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iB");
        assertEquals(14, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iC");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test090() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iD");
        assertFalse(problem1_0.cf);
    }

    @Test(timeout = 4000)
    public void test091() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iE");
        assertEquals(14, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test092() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iF");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test093() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iH");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test094() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iI");
        assertEquals(14, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test095() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iJ");
        assertEquals(14, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test096() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iD");
        assertEquals(5, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test097() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iC");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test098() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iH");
        assertEquals(5, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iF");
        problem1_0.calculateOutput("iF");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test100() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iI");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test101() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iA");
        problem1_0.calculateOutput("iA");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test102() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iB");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test103() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("f");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test104() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iE");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test105() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iH");
        assertEquals(16, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test106() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iB");
        problem1_0.calculateOutput("iB");
        assertEquals(16, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test107() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iG");
        assertEquals(14, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test108() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iJ");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test109() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iG");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("B\"?ORRfE)_B>Rx2yv)");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test110() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iC");
        problem1_0.calculateOutput("iC");
        assertEquals(5, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test111() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iD");
        assertEquals(5, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test112() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        assertEquals(5, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test113() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iF");
        problem1_0.calculateOutput("iF");
        assertEquals(14, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test114() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iG");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test115() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iI");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test116() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test117() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iB");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test118() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iF");
        assertEquals(5, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test119() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iG");
        assertEquals(5, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test120() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iI");
        assertEquals(14, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test121() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iA");
        assertEquals(14, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test122() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("g");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test123() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iB");
        assertEquals(15, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test124() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iC");
        assertEquals(15, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test125() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iE");
        assertEquals(6, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test126() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iF");
        assertEquals(6, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test127() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iG");
        assertEquals(6, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test128() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iH");
        assertEquals(6, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test129() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iI");
        assertEquals(6, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test130() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iJ");
        assertEquals(6, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test131() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iA");
        assertEquals(15, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test132() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iD");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("g");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test133() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iC");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test134() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iC");
        assertEquals(10, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test135() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iF");
        problem1_0.calculateOutput("iF");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test136() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iI");
        problem1_0.calculateOutput("iI");
        assertEquals(10, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test137() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iB");
        assertEquals(7, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test138() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        assertEquals(6, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test139() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iA");
        problem1_0.calculateOutput("iH");
        assertEquals(7, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test140() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("g");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test141() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        assertEquals(12, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test142() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iG");
        assertEquals(9, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test143() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iI");
        assertEquals(12, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test144() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test145() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iC");
        problem1_0.calculateOutput("iJ");
        assertEquals(10, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test146() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iA");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test147() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iH");
        assertEquals(13, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test148() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iB");
        assertEquals(13, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test149() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        assertEquals(10, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test150() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test151() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iC");
        problem1_0.calculateOutput("iC");
        problem1_0.calculateOutput("iC");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test152() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iI");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iI");
        assertEquals(5, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test153() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        assertEquals(11, problem1_0.a612577343);

        problem1_0.calculateOutput("iJ");
        assertEquals(10, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test154() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("g");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test155() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        assertEquals(10, problem1_0.a691849188);

        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iB");
        problem1_0.calculateOutput("iB");
        assertEquals(10, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test156() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iC");
        problem1_0.calculateOutput("iC");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test157() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iF");
        assertEquals(13, problem1_0.a1305805768);
        assertEquals(10, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test158() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iI");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test159() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iA");
        problem1_0.calculateOutput("iA");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test160() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iF");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test161() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        assertEquals(10, problem1_0.a691849188);

        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iI");
        assertEquals(13, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test162() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        assertEquals(10, problem1_0.a691849188);

        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iJ");
        assertEquals(13, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test163() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iC");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test164() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        assertEquals(10, problem1_0.a691849188);

        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iE");
        assertEquals(10, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test165() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iF");
        assertEquals(7, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test166() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.a547336540 = "h";
        problem1_0.calculateOutput("iI");
        assertEquals(13, problem1_0.a1305805768);
        assertEquals(8, problem1_0.a612577343);
        assertEquals(10, problem1_0.a1122863037);
        assertEquals(10, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test167() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        assertTrue(problem1_0.cf);

        problem1_0.a547336540 = "h";
        problem1_0.calculateOutput("iJ");
        assertEquals(13, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test168() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iA");
        assertEquals(9, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test169() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iA");
        assertEquals(7, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test170() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iF");
        assertEquals(7, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test171() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iG");
        assertEquals(7, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test172() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iJ");
        assertEquals(7, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test173() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iG");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("*Zec;9}Q*X5PTG");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test174() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iH");
        assertEquals(10, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test175() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iE");
        assertEquals(7, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test176() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iF");
        assertEquals(10, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test177() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iI");
        problem1_0.calculateOutput("iI");
        assertEquals(12, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test178() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test179() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        assertEquals(13, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test180() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iB");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test181() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("h");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test182() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iG");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test183() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iB");
        assertEquals(8, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test184() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iG");
        assertEquals(13, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test185() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iF");
        assertEquals(8, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test186() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        assertEquals(8, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test187() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iA");
        assertEquals(6, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test188() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iG");
        assertEquals(8, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test189() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("i");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test190() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iD");
        assertEquals(8, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test191() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iH");
        assertEquals(9, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test192() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iE");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test193() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iI");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test194() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iA");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test195() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iJ");
        assertEquals(10, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test196() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iG");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("e");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test197() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iA");
        problem1_0.calculateOutput("iA");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test198() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iA");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("m");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test199() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iA");
        problem1_0.calculateOutput("iE");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test200() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iB");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test201() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        assertEquals(10, problem1_0.a1122863037);

        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iC");
        assertEquals(13, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test202() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        assertEquals(12, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test203() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iF");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test204() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iH");
        assertEquals(12, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test205() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iJ");
        assertEquals(4, problem1_0.a691849188);
    }

    @Test(timeout = 4000)
    public void test206() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iA");
        assertEquals(12, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test207() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        assertEquals(7, problem1_0.a691849188);

        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iD");
        assertEquals(8, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test208() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        assertEquals(10, problem1_0.a691849188);

        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iB");
        assertEquals(13, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test209() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iC");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iC");
        assertEquals(13, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test210() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        assertEquals(7, problem1_0.a691849188);

        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        assertEquals(8, problem1_0.a612577343);
    }

    @Test(timeout = 4000)
    public void test211() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        assertEquals(12, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test212() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iJ");
        assertEquals(10, problem1_0.a1122863037);

        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iA");
        assertEquals(13, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test213() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        problem1_0.calculateOutput("iH");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("1VdH6M`]__? ");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test214() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iD");
        problem1_0.calculateOutput("iD");
        assertEquals(14, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test215() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iG");
        assertEquals(15, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test216() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iB");
        assertEquals(14, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test217() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        problem1_0.calculateOutput("iE");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput(">K2iYMp/Ly2");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }

    @Test(timeout = 4000)
    public void test218() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iG");
        problem1_0.calculateOutput("iG");
        assertEquals(15, problem1_0.a1122863037);
    }

    @Test(timeout = 4000)
    public void test219() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iI");
        problem1_0.calculateOutput("iI");
        assertEquals(12, problem1_0.a1305805768);
    }

    @Test(timeout = 4000)
    public void test220() throws Throwable {
        Problem1 problem1_0 = new Problem1();
        problem1_0.calculateOutput("iJ");
        problem1_0.calculateOutput("iJ");
        // Undeclared exception!
        try {
            problem1_0.calculateOutput("i");
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // Current state has no transition for this input!
            //
            //verifyException("Problem1", e);
        }
    }
}
