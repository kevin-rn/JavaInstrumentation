package nl.tudelft.mutated_rers;

/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 15 11:17:55 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import java.io.BufferedReader;
import java.io.IOException;

public class Problem6_ESTest {

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("&F");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertTrue(problem6_0.cf);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iB");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1268933635);
      
      problem6_0.a846298027 = (-1);
      // SystemInUtil.addInputLine("h");
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iB");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertTrue(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      
      problem6_0.calculateOutput("iB");
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      
      // SystemInUtil.addInputLine("iB");
      problem6_0.calculateOutput("iB");
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(96, problem6_0.a1409102093);
      assertEquals(37, problem6_0.a1084416973);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(160, problem6_0.a987727161);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(223, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      
      problem6_0.calculateOutput("iB");
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(155, problem6_0.a2038572265);
      assertEquals((-43), problem6_0.a1409102093);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-69), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(100, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      
      problem6_0.a2038572265 = 1665;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertTrue(problem6_0.cf);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.a927237116 = 0;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("Nos");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      
      problem6_0.calculateOutput("iC");
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(13, problem6_0.a508177696);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = 236;
      problem6_0.calculateOutput("iG");
      assertEquals(203, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a508177696);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals((-23465), problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1084416973);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a927237116);
      assertEquals((-21708), problem6_0.a2038572265);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(236, problem6_0.a402093159);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(50, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(236, problem6_0.a1944045722);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(11, problem6_1.a1052548391);
      assertTrue(problem6_1.cf);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(5, problem6_1.a927237116);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(16, problem6_1.a1265826928);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      problem6_1.a2095109485 = problem6_0.a1987302485;
      problem6_1.calculateOutput("iC");
      assertEquals(2, problem6_1.a1268933635);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals((-84), problem6_1.a402093159);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(5, problem6_1.a927237116);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(347, problem6_1.a1360708750);
      assertFalse(problem6_1.cf);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(16, problem6_1.a1265826928);
      assertNotSame(problem6_1, problem6_0);
      assertFalse(problem6_1.equals((Object)problem6_0));
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      // SystemInUtil.addInputLine("SA");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iD");
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("SA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String[] stringArray0 = new String[3];
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertTrue(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(13, problem6_0.a1527522672);
      assertEquals(38, problem6_0.a1084416973);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(275, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(83, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(239, problem6_0.a987727161);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertFalse(problem6_0.cf);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(3, problem6_0.a1755002313);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("#'<S}'");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertTrue(problem6_0.cf);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      
      problem6_0.calculateOutput("iC");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      
      // SystemInUtil.addInputLine("f");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "g";
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      String[] stringArray0 = new String[3];
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      
      problem6_0.a779607920 = (-3181);
      String string0 = "iC";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iC");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      // SystemInUtil.addInputLine("iA");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      
      problem6_0.calculateOutput("iA");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      
      problem6_0.calculateOutput("iA");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals((-20), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a261449517);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(250, problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(247, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(91, problem6_0.a1409102093);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a508177696);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      // SystemInUtil.addInputLine("SA");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(2, problem6_0.a1755002313);
      assertTrue(problem6_0.cf);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      
      problem6_0.calculateOutput("iE");
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertFalse(problem6_0.cf);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("b)9G2}!yT.qq_E");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      
      problem6_0.calculateOutput("iG");
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(12, problem6_0.a1844564130);
      
      // SystemInUtil.addInputLine("h");
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertTrue(problem6_0.cf);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iC");
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertFalse(problem6_0.cf);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iC");
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(272, problem6_0.a2038572265);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(62, problem6_0.a1409102093);
      assertEquals(261, problem6_0.a987727161);
      assertEquals(7, problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("i");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      
      problem6_0.calculateOutput("iG");
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(6, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      
      problem6_0.calculateOutput("iG");
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(6, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      
      // SystemInUtil.addInputLine("/TZNF= CG");
      // SystemInUtil.addInputLine("h");
      problem6_0.calculateOutput("iI");
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "SA";
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      
      problem6_0.a1279475243 = "h";
      problem6_0.calculateOutput("iG");
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      
      problem6_0.a1546807871 = "SA";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "SA";
      // SystemInUtil.addInputLine("SA");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertTrue(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.a987727161 = 207;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("[v[q9I{h3,4</T1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      
      problem6_0.calculateOutput("iF");
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      
      problem6_0.calculateOutput("iE");
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(217, problem6_0.a987727161);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(102, problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      
      problem6_0.calculateOutput("iF");
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(140, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-5), problem6_0.a1409102093);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(105, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals((-115), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      
      problem6_0.calculateOutput("iE");
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-1766), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-2683), problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-23), problem6_0.a659440330);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals((-15643), problem6_0.a2038572265);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-2334), problem6_0.a1409102093);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(1, problem6_0.a1755002313);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      
      problem6_0.calculateOutput("iA");
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(227, problem6_0.a987727161);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(120, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-2), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(281, problem6_0.a2038572265);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(164, problem6_0.a2038572265);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(70, problem6_0.a987727161);
      assertEquals((-58), problem6_0.a1084416973);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-25), problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      
      // SystemInUtil.addInputLine("h");
      int[] intArray0 = new int[1];
      intArray0[0] = 36;
      problem6_0.a799452155 = intArray0;
      problem6_0.calculateOutput("iD");
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(12, problem6_0.a2118660775);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a261449517);
      assertEquals((-19), problem6_0.a1084416973);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(166, problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(243, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a508177696);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iA");
      assertEquals(3, problem6_0.a1268933635);
      assertEquals((-95), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(12, problem6_0.a2118660775);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(166, problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(243, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iA");
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(12, problem6_0.a2118660775);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a261449517);
      assertEquals((-114), problem6_0.a1084416973);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(166, problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(243, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.a1084416973 = 141;
      // SystemInUtil.addInputLine("h");
      // SystemInUtil.addInputLine("f");
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      
      // SystemInUtil.addInputLine("f");
      problem6_0.calculateOutput("iC");
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertFalse(problem6_0.cf);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(50, problem6_1.a1491392295);
      assertTrue(problem6_1.cf);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(141, problem6_1.a554869193);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(9, problem6_1.a1669668007);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      problem6_1.calculateOutput("iH");
      assertEquals(11, problem6_1.a794870881);
      assertFalse(problem6_1.cf);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(2, problem6_1.a1268933635);
      assertEquals((-107), problem6_1.a402093159);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(9, problem6_1.a1669668007);
      assertNotSame(problem6_1, problem6_0);
      assertFalse(problem6_1.equals((Object)problem6_0));
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      assertTrue(problem6_0.cf);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.calculateOutput("iB");
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-123), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.calculateOutput("iI");
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-123), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.calculateOutput("iB");
      assertEquals((-1264), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-28828), problem6_0.a987727161);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-20509), problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-22607), problem6_0.a1409102093);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a659440330);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(5, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertTrue(problem6_0.cf);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      
      // SystemInUtil.addInputLine("f");
      problem6_0.calculateOutput("iC");
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1268933635);
      
      problem6_0.a402093159 = 16;
      problem6_0.calculateOutput("iC");
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertTrue(problem6_0.cf);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.a1268933635 = 2;
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(2, problem6_1.a1303741660);
      assertTrue(problem6_1.cf);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(13, problem6_1.a311551481);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(11, problem6_1.a794870881);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(13, problem6_1.a508177696);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("i");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.a2038572265 = (-1079);
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iC");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      
      // SystemInUtil.addInputLine("f");
      // SystemInUtil.addInputLine("h");
      problem6_0.calculateOutput("iJ");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(239, problem6_0.a987727161);
      assertEquals(275, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(83, problem6_0.a1409102093);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(38, problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iB");
      assertEquals(11, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(301, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(239, problem6_0.a987727161);
      assertEquals(275, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(83, problem6_0.a1409102093);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(38, problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(11, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-3), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(301, problem6_0.a1360708750);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals((-93), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(136, problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(105, problem6_0.a2038572265);
      assertEquals(13, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("2L");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      
      // SystemInUtil.addInputLine("f");
      // SystemInUtil.addInputLine("h");
      problem6_0.a359661274 = problem6_0.a74876397;
      // SystemInUtil.addInputLine("");
      problem6_0.a1302722907 = problem6_0.a1077438128;
      problem6_0.calculateOutput("iJ");
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(83, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(38, problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(275, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(239, problem6_0.a987727161);
      assertEquals(10, problem6_0.a261449517);
      
      String[] stringArray0 = new String[9];
      problem6_0.calculateOutput("iJ");
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(83, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(13, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(38, problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(314, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(275, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(239, problem6_0.a987727161);
      assertEquals(10, problem6_0.a261449517);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "SA";
      // SystemInUtil.addInputLine("iA");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertTrue(problem6_0.cf);
      
      problem6_0.calculateOutput("iA");
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      
      // SystemInUtil.addInputLine("f");
      problem6_0.calculateOutput("iF");
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      
      problem6_0.calculateOutput("iI");
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(13, problem6_1.a508177696);
      assertEquals((-123), problem6_1.a1084416973);
      assertTrue(problem6_1.cf);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(5, problem6_1.a846298027);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(11, problem6_1.a1844564130);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("i");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertTrue(problem6_0.cf);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      
      problem6_0.a1615683779 = "Invalid input: ";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("p><R0O]sO(w4%]={k");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      // SystemInUtil.addInputLine("f");
      intArray0[1] = 11;
      intArray0[2] = 347;
      // SystemInUtil.addInputLine("h");
      intArray0[3] = 11;
      intArray0[4] = 50;
      intArray0[5] = (-113);
      intArray0[6] = 14;
      problem6_0.a359661274 = intArray0;
      // SystemInUtil.addInputLine("");
      intArray0[7] = (-1689);
      intArray0[8] = 16;
      problem6_0.a1302722907 = intArray0;
      problem6_0.calculateOutput("iJ");
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(83, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(239, problem6_0.a987727161);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(275, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertFalse(problem6_0.cf);
      assertEquals(38, problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "h";
      stringArray0[0] = "";
      stringArray0[2] = "g";
      problem6_0.a1279475243 = "g";
      stringArray0[4] = "";
      stringArray0[5] = "g";
      stringArray0[6] = "i";
      problem6_0.calculateOutput("iF");
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(309, problem6_0.a1360708750);
      assertEquals(83, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(239, problem6_0.a987727161);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(275, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertFalse(problem6_0.cf);
      assertEquals(38, problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      
      // SystemInUtil.addInputLine("f");
      // SystemInUtil.addInputLine("f");
      // SystemInUtil.addInputLine("h");
      problem6_0.calculateOutput("iJ");
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(13, problem6_0.a1527522672);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(38, problem6_0.a1084416973);
      assertEquals(239, problem6_0.a987727161);
      assertEquals(275, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(83, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a794870881);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a141525412);
      
      problem6_0.calculateOutput("iB");
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(13, problem6_0.a1527522672);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(38, problem6_0.a1084416973);
      assertEquals(239, problem6_0.a987727161);
      assertEquals(275, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(83, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a794870881);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(301, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a141525412);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // SystemInUtil.addInputLine(stringArray0[0]);
      assertEquals(3, stringArray0.length);
      
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iF");
      assertEquals(9, problem6_0.a261449517);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iG");
      assertEquals(12, problem6_0.a794870881);
      assertEquals(91, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(213, problem6_0.a1360708750);
      assertEquals(241, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(241, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-16), problem6_0.a1084416973);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertFalse(problem6_0.cf);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput(stringArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a794870881);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      
      problem6_0.calculateOutput("iC");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a794870881);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1268933635);
      
      problem6_0.calculateOutput("iG");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(240, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(237, problem6_0.a987727161);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(111, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(213, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      
      problem6_0.calculateOutput("iC");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(240, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(237, problem6_0.a987727161);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(111, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(17, problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(213, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(16, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iC");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(237, problem6_0.a987727161);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(10, problem6_0.a632192596);
      assertEquals((-16337), problem6_0.a2038572265);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(111, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1084416973);
      assertEquals((-9037), problem6_0.a1360708750);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iC");
      assertFalse(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(7, problem6_0.a1084416973);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(261, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(272, problem6_0.a2038572265);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(62, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iG");
      assertFalse(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(7, problem6_0.a1084416973);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(261, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(272, problem6_0.a2038572265);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(62, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iG");
      assertFalse(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(7, problem6_0.a1084416973);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(261, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(62, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-17938), problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals((-8282), problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("~C-1kN7.h>pa'");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      
      int[] intArray0 = new int[6];
      intArray0[0] = (-123);
      intArray0[1] = 201;
      intArray0[2] = 11;
      intArray0[3] = 8;
      intArray0[4] = 236;
      intArray0[5] = 13;
      problem6_0.a1768935590 = "f";
      problem6_0.a182932449 = intArray0;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      
      // SystemInUtil.addInputLine("f");
      problem6_0.calculateOutput("iF");
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-80), problem6_0.a402093159);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iF");
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(2, problem6_0.a1084416973);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(261, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(112, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-80), problem6_0.a402093159);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(249, problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "SA";
      // SystemInUtil.addInputLine("SA");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(36, problem6_0.a1175903853);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      
      problem6_0.calculateOutput("iF");
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      
      problem6_0.calculateOutput("iG");
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(91, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-16), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(241, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(213, problem6_0.a1360708750);
      assertEquals(241, problem6_0.a987727161);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("SA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "SA";
      // SystemInUtil.addInputLine("SA");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      
      int[] intArray0 = new int[4];
      intArray0[0] = 5;
      problem6_0.a794870881 = 5;
      intArray0[1] = 5;
      intArray0[2] = 14;
      intArray0[3] = 46;
      problem6_0.a1276978776 = intArray0;
      String string0 = "iH";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iH");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertTrue(problem6_0.cf);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iG");
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(269, problem6_0.a2038572265);
      
      problem6_0.calculateOutput("iH");
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(269, problem6_0.a2038572265);
      
      problem6_0.calculateOutput("iG");
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(269, problem6_0.a2038572265);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String[] stringArray0 = new String[2];
      // SystemInUtil.addInputLine(stringArray0[0]);
      assertEquals(2, stringArray0.length);
      
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(27, problem6_0.a1409102093);
      assertTrue(problem6_0.cf);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      
      problem6_0.calculateOutput("iG");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      
      problem6_0.calculateOutput("iG");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("oY");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      // SystemInUtil.addInputLine("iA");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertTrue(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a730330384);
      
      int[] intArray0 = new int[7];
      intArray0[0] = 65;
      intArray0[1] = 13;
      intArray0[2] = 50;
      intArray0[3] = 50;
      intArray0[4] = 46;
      intArray0[5] = 5;
      intArray0[6] = 310;
      problem6_0.a2095109485 = intArray0;
      problem6_0.calculateOutput("iA");
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertFalse(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iA");
      assertEquals(247, problem6_0.a2038572265);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals((-20), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(250, problem6_0.a987727161);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(91, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(14, problem6_0.a730330384);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // SystemInUtil.addInputLine(stringArray0[0]);
      assertEquals(3, stringArray0.length);
      
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(27, problem6_0.a1409102093);
      assertTrue(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-105), problem6_0.a402093159);
      
      problem6_0.calculateOutput("iG");
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertFalse(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-105), problem6_0.a402093159);
      
      problem6_0.calculateOutput("iG");
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertFalse(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals((-105), problem6_0.a402093159);
      
      problem6_0.calculateOutput("iC");
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertFalse(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-105), problem6_0.a402093159);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertTrue(problem6_0.cf);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iB");
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iH");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(10, problem6_0.a261449517);
      assertEquals((-13), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(58, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(219, problem6_0.a987727161);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      
      problem6_0.calculateOutput("iH");
      assertEquals((-53), problem6_0.a1084416973);
      assertEquals(113, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(48, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(34, problem6_0.a1944045722);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      // SystemInUtil.addInputLine("xgq:6<83;:GD9W");
      // SystemInUtil.addInputLine((String) null);
      // SystemInUtil.addInputLine("");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertTrue(problem6_0.cf);
      
      problem6_0.a1546807871 = "iC";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("nE2'V'\u0001|s");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertTrue(problem6_0.cf);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      
      // SystemInUtil.addInputLine("f");
      problem6_0.calculateOutput("iF");
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      
      // SystemInUtil.addInputLine("e");
      problem6_0.calculateOutput("iF");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(261, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(112, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(249, problem6_0.a987727161);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      
      problem6_0.calculateOutput("iF");
      assertEquals((-13), problem6_0.a1409102093);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(26, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals((-95), problem6_0.a1084416973);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(137, problem6_0.a2038572265);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(105, problem6_0.a987727161);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      
      problem6_0.calculateOutput("iF");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals((-7855), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-26161), problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(26, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-20760), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a846298027);
      assertEquals((-12856), problem6_0.a1409102093);
      assertEquals((-27), problem6_0.a659440330);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.calculateOutput("iG");
      assertEquals(10, problem6_0.a261449517);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      
      // SystemInUtil.addInputLine("Current state has no transition for this input!");
      String string0 = "}so4VZ'5 nJS_<HE";
      // SystemInUtil.addInputLine("}so4VZ'5 nJS_<HE");
      problem6_0.calculateOutput("iI");
      assertEquals(10, problem6_0.a261449517);
      assertEquals(15, problem6_0.a1527522672);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("Current state has no transition for this input!");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertFalse(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = (-1014);
      problem6_0.calculateOutput("iA");
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-7557), problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-18485), problem6_0.a1409102093);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-14730), problem6_0.a1084416973);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals((-28009), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-24571), problem6_0.a1175903853);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-1710), problem6_0.a987727161);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals((-1014), problem6_0.a402093159);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iA");
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-7557), problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-18485), problem6_0.a1409102093);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-14730), problem6_0.a1084416973);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals((-28009), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-24571), problem6_0.a1175903853);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-1710), problem6_0.a987727161);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals((-1014), problem6_0.a402093159);
      assertEquals(14, problem6_0.a730330384);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertTrue(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = (-1014);
      // SystemInUtil.addInputLine("h");
      problem6_0.calculateOutput("iA");
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a632192596);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-18208), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(1, problem6_0.a1755002313);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.a1268933635 = 2;
      String string0 = "iA";
      problem6_0.calculateOutput("iA");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-13963), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-16395), problem6_0.a987727161);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals((-25580), problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(160, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-17051), problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(8, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a794870881);
      
      problem6_0.a1678650881 = (-2777);
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "SA";
      // SystemInUtil.addInputLine("SA");
      // SystemInUtil.addInputLine("SA");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      
      problem6_0.calculateOutput("iD");
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      
      problem6_0.calculateOutput("iD");
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a311551481);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertTrue(problem6_0.cf);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iC");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = (-1014);
      problem6_0.calculateOutput("iG");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-1014), problem6_0.a402093159);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iG");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-1014), problem6_0.a402093159);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      
      problem6_0.calculateOutput("iC");
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iD");
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iE");
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(96, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a261449517);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(184, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-27), problem6_0.a1084416973);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(9, problem6_1.a632192596);
      assertTrue(problem6_1.cf);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(141, problem6_1.a554869193);
      assertEquals((-105), problem6_1.a402093159);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_1.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.calculateOutput("iC");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = (-1014);
      String string0 = "UF";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("UF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // SystemInUtil.addInputLine(stringArray0[0]);
      assertEquals(3, stringArray0.length);
      
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      
      problem6_0.a987727161 = (-183);
      int[] intArray0 = new int[6];
      intArray0[0] = 5;
      intArray0[1] = (-4925);
      intArray0[2] = 8;
      intArray0[3] = 201;
      intArray0[4] = 17;
      intArray0[5] = 2;
      problem6_0.a1061475584 = intArray0;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertTrue(problem6_0.cf);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(9, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(62, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a508177696);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(261, problem6_0.a987727161);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(272, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a508177696);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(0, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(140, problem6_0.a2038572265);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-98), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(70, problem6_0.a987727161);
      assertEquals(38, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-20), problem6_0.a659440330);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-7501), problem6_0.a987727161);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a508177696);
      assertFalse(problem6_0.cf);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-27185), problem6_0.a1409102093);
      assertEquals((-24778), problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-2470), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(38, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      
      problem6_0.calculateOutput("iA");
      assertEquals(46, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-20), problem6_0.a659440330);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(213, problem6_0.a987727161);
      assertEquals(281, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-88), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(38, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("eqPIy}&k4w!\"@Z93");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = (-1014);
      problem6_0.calculateOutput("iA");
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.calculateOutput("iA");
      assertEquals(247, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(10, problem6_0.a261449517);
      assertEquals((-20), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(91, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(250, problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.calculateOutput("iA");
      assertEquals(236, problem6_0.a1003030503);
      assertEquals((-105), problem6_0.a1084416973);
      assertEquals(111, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(109, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(34, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertTrue(problem6_0.cf);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      
      // SystemInUtil.addInputLine("f");
      problem6_0.a1084416973 = (-183);
      problem6_0.a1052548391 = 395;
      problem6_0.a359661274 = problem6_0.a182932449;
      String string0 = "iJ";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-105), problem6_0.a402093159);
      
      int[] intArray0 = new int[6];
      intArray0[0] = (-123);
      intArray0[1] = 201;
      intArray0[3] = 8;
      intArray0[4] = 236;
      intArray0[5] = 13;
      problem6_0.a1944045722 = (-123);
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("C0}9h)OM`aP.K(_w1M");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iB");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-61), problem6_0.a402093159);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      
      // SystemInUtil.addInputLine("iB");
      problem6_0.calculateOutput("iH");
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-13), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(58, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals((-61), problem6_0.a402093159);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(219, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a141525412);
      
      problem6_0.calculateOutput("iB");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(98, problem6_0.a987727161);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(31, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-37), problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals((-100), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-61), problem6_0.a402093159);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a141525412);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      
      int[] intArray0 = new int[6];
      intArray0[0] = (-123);
      intArray0[1] = 201;
      intArray0[2] = 11;
      intArray0[3] = 8;
      intArray0[4] = 236;
      intArray0[5] = 13;
      problem6_0.a1944045722 = (-123);
      problem6_0.a182932449 = intArray0;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      
      problem6_0.calculateOutput("iC");
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      
      String string0 = "iA";
      problem6_0.calculateOutput("iA");
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(227, problem6_0.a987727161);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals((-2), problem6_0.a1084416973);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(120, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(281, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      
      problem6_0.calculateOutput("iA");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(100, problem6_0.a2038572265);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(149, problem6_0.a987727161);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(41, problem6_0.a1944045722);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-115), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      
      problem6_0.calculateOutput("iJ");
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-16265), problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-12760), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(18926, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-18546), problem6_0.a987727161);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(41, problem6_0.a1944045722);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("v;00wzI>Z10`JW5z=");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = (-1014);
      problem6_0.calculateOutput("iA");
      assertEquals(4, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-18485), problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-7557), problem6_0.a1453485468);
      assertEquals((-1014), problem6_0.a402093159);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals((-24571), problem6_0.a1175903853);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-14730), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-1710), problem6_0.a987727161);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-28009), problem6_0.a2038572265);
      
      // SystemInUtil.addInputLine("e");
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("A");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = (-1014);
      problem6_0.cf = true;
      problem6_0.a632192596 = 236;
      String string0 = "iA";
      problem6_0.calculateOutput("iA");
      assertEquals(236, problem6_0.a632192596);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      
      problem6_0.calculateOutput("iC");
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = (-1014);
      problem6_0.calculateOutput("iC");
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertFalse(problem6_0.cf);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-1014), problem6_0.a402093159);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      
      // SystemInUtil.addInputLine("f");
      int[] intArray0 = new int[4];
      intArray0[0] = 5;
      intArray0[1] = 11;
      intArray0[2] = 9;
      intArray0[3] = 201;
      problem6_0.a55778504 = intArray0;
      String string0 = "iF";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // SystemInUtil.addInputLine(stringArray0[0]);
      assertEquals(3, stringArray0.length);
      
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      
      problem6_0.calculateOutput("iF");
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(9, problem6_0.a1669668007);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iA");
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(286, problem6_0.a2038572265);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(102, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(254, problem6_0.a987727161);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(1, problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iE");
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-114), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(124, problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(30, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-13), problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(175, problem6_0.a2038572265);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "SA";
      // SystemInUtil.addInputLine("SA");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      
      problem6_0.calculateOutput("iF");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-80), problem6_0.a402093159);
      
      problem6_0.calculateOutput("iE");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(102, problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(36, problem6_0.a1084416973);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(217, problem6_0.a987727161);
      assertEquals((-80), problem6_0.a402093159);
      
      problem6_0.calculateOutput("iE");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(40, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(132, problem6_0.a987727161);
      assertEquals((-126), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(173, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(18, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-80), problem6_0.a402093159);
      
      // SystemInUtil.addInputLine("SA");
      problem6_0.calculateOutput("iA");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-25404), problem6_0.a1084416973);
      assertEquals(40, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a659440330);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-8616), problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-593), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals((-26110), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-80), problem6_0.a402093159);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.calculateOutput("iC");
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-123), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.a402093159 = 16;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("9R3sY");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals(2, problem6_0.a1303741660);
      
      String string0 = "iC";
      problem6_0.calculateOutput("iC");
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(6, problem6_0.a2118660775);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.a1003030503 = 9;
      problem6_0.a402093159 = 90;
      problem6_0.calculateOutput("iA");
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1003030503);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a1678650881);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals(27, problem6_0.a1409102093);
      
      problem6_0.calculateOutput("iC");
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = 236;
      problem6_0.calculateOutput("iG");
      assertEquals(6, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(236, problem6_0.a402093159);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-23465), problem6_0.a1360708750);
      assertEquals(12, problem6_0.a1084416973);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(203, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(50, problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals((-21708), problem6_0.a2038572265);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(36, problem6_1.a1175903853);
      assertTrue(problem6_1.cf);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(5, problem6_1.a927237116);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      problem6_1.calculateOutput("iC");
      assertEquals(5, problem6_1.a846298027);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(2, problem6_1.a1268933635);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(5, problem6_1.a779607920);
      assertFalse(problem6_1.cf);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals((-84), problem6_1.a402093159);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(5, problem6_1.a927237116);
      assertNotSame(problem6_1, problem6_0);
      assertFalse(problem6_1.equals((Object)problem6_0));
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      
      problem6_0.calculateOutput("iC");
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      
      problem6_0.calculateOutput("iA");
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(227, problem6_0.a987727161);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a927237116);
      assertEquals((-2), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(120, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(281, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      
      problem6_0.calculateOutput("iC");
      assertEquals(70, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(164, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-58), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a632192596);
      assertEquals((-25), problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(50, problem6_1.a1491392295);
      assertTrue(problem6_1.cf);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(5, problem6_1.a779607920);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(5, problem6_1.a846298027);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_1.calculateOutput("i");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      
      problem6_0.calculateOutput("iB");
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      
      // SystemInUtil.addInputLine("iB");
      problem6_0.calculateOutput("iH");
      assertEquals(6, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(12, problem6_0.a794870881);
      assertEquals((-13), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(219, problem6_0.a987727161);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(58, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      
      problem6_0.calculateOutput("iH");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(113, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(34, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(48, problem6_0.a987727161);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-53), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      
      problem6_0.calculateOutput("iH");
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-24755), problem6_0.a987727161);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-27746), problem6_0.a1409102093);
      assertEquals((-12975), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(34, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-6), problem6_0.a659440330);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals((-3328), problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertTrue(problem6_0.cf);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      
      // SystemInUtil.addInputLine("f");
      // SystemInUtil.addInputLine("iD");
      String string0 = "oU";
      // SystemInUtil.addInputLine("oU");
      problem6_0.calculateOutput("iD");
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      
      problem6_0.calculateOutput("iD");
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("TiCIcpmZo");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertTrue(problem6_0.cf);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iA");
      assertEquals(227, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-2), problem6_0.a1084416973);
      assertEquals(120, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(281, problem6_0.a2038572265);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iC");
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-58), problem6_0.a1084416973);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(70, problem6_0.a987727161);
      assertEquals(164, problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals((-25), problem6_0.a1409102093);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a1527522672);
      
      problem6_0.calculateOutput("iC");
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      assertEquals((-27185), problem6_0.a1409102093);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-62), problem6_0.a659440330);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals((-17262), problem6_0.a2038572265);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-2470), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-7627), problem6_0.a987727161);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(4, problem6_0.a927237116);
      
      problem6_0.calculateOutput("iC");
      assertEquals(110, problem6_0.a1409102093);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(165, problem6_0.a987727161);
      assertEquals(288, problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals((-132), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a508177696);
      assertEquals((-84), problem6_0.a402093159);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-62), problem6_0.a659440330);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iA");
      assertEquals(110, problem6_0.a1409102093);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(165, problem6_0.a987727161);
      assertEquals(288, problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a508177696);
      assertEquals((-84), problem6_0.a402093159);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-62), problem6_0.a659440330);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-92), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      
      problem6_0.a1268933635 = 2;
      // SystemInUtil.addInputLine("h");
      String string0 = "iJ";
      problem6_0.calculateOutput("iJ");
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(172, problem6_0.a987727161);
      assertEquals(40, problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "S";
      // SystemInUtil.addInputLine("S");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iF");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iE");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(217, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(36, problem6_0.a1084416973);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(102, problem6_0.a1409102093);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iE");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-126), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(18, problem6_0.a1409102093);
      assertFalse(problem6_0.cf);
      assertEquals(173, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(132, problem6_0.a987727161);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      // SystemInUtil.addInputLine("S");
      problem6_0.calculateOutput("iA");
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-8616), problem6_0.a987727161);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a659440330);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals((-26110), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-593), problem6_0.a2038572265);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-25404), problem6_0.a1084416973);
      
      problem6_0.calculateOutput("iF");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(85, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a659440330);
      assertEquals((-93), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(209, problem6_0.a987727161);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(257, problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iD");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(0, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(15, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-93), problem6_0.a1084416973);
      assertEquals(97, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(102, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iD");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(0, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(15, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-93), problem6_0.a1084416973);
      assertEquals(97, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(102, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertTrue(problem6_0.cf);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iC");
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iA");
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-2), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(227, problem6_0.a987727161);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(281, problem6_0.a2038572265);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(120, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iC");
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-58), problem6_0.a1084416973);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(70, problem6_0.a987727161);
      assertEquals(164, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-25), problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(4, problem6_0.a927237116);
      assertFalse(problem6_0.cf);
      assertEquals(9065, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-15228), problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-10931), problem6_0.a987727161);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-12680), problem6_0.a2038572265);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iA");
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(65, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-15228), problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-10931), problem6_0.a987727161);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-12680), problem6_0.a2038572265);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(65, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-15228), problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-10931), problem6_0.a987727161);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-12680), problem6_0.a2038572265);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iI");
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-128), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(190, problem6_0.a987727161);
      assertEquals(65, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(264, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(120, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(4, problem6_0.a927237116);
      assertEquals((-9290), problem6_0.a1409102093);
      assertFalse(problem6_0.cf);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(80, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a632192596);
      assertEquals((-24552), problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-1520), problem6_0.a1084416973);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-9332), problem6_0.a987727161);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("v6d(Sq$Blq/Hh#S");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // SystemInUtil.addInputLine(stringArray0[0]);
      assertEquals(3, stringArray0.length);
      
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iF");
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iE");
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1084416973);
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(102, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(217, problem6_0.a987727161);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
      
      problem6_0.calculateOutput("iF");
      assertEquals(140, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-5), problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(27, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(105, problem6_0.a987727161);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-115), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iE");
      assertEquals(6, problem6_0.a1268933635);
      assertEquals((-2683), problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals((-23), problem6_0.a659440330);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a632192596);
      assertEquals((-1766), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(27, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a846298027);
      assertEquals((-2334), problem6_0.a1409102093);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-15643), problem6_0.a2038572265);
      
      problem6_0.calculateOutput("iF");
      assertEquals(12, problem6_0.a1844564130);
      assertEquals((-23), problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(27, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(104, problem6_0.a1409102093);
      assertEquals(12, problem6_0.a794870881);
      assertEquals((-114), problem6_0.a1084416973);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(304, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(258, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertTrue(problem6_0.cf);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iC");
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = 16;
      problem6_0.calculateOutput("iC");
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a402093159);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iC");
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a402093159);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(7, problem6_0.a1694888134);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(17, problem6_0.a1527522672);
      assertTrue(problem6_0.cf);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      
      problem6_0.calculateOutput("iC");
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      
      problem6_0.calculateOutput("iA");
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a846298027);
      assertEquals((-2), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(281, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(120, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(227, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(10, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iA");
      assertEquals(11, problem6_0.a794870881);
      assertEquals(149, problem6_0.a987727161);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(41, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-115), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(100, problem6_0.a2038572265);
      assertEquals(12, problem6_0.a1527522672);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(8, problem6_0.a261449517);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(41, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-18546), problem6_0.a987727161);
      assertEquals((-16265), problem6_0.a1409102093);
      assertEquals(18926, problem6_0.a1175903853);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-12760), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a927237116);
      
      problem6_0.calculateOutput("iC");
      assertEquals(8, problem6_0.a261449517);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(59, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(41, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-18546), problem6_0.a987727161);
      assertEquals((-16265), problem6_0.a1409102093);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-12760), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a927237116);
      
      problem6_0.calculateOutput("iC");
      assertEquals(8, problem6_0.a261449517);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(59, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(41, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-18546), problem6_0.a987727161);
      assertEquals((-16265), problem6_0.a1409102093);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-12760), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a927237116);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("bL9Uf.G");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      
      problem6_0.calculateOutput("iC");
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      
      problem6_0.calculateOutput("iB");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(209, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(224, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals((-5), problem6_0.a1084416973);
      assertEquals(310, problem6_0.a1003030503);
      
      problem6_0.calculateOutput("iB");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-20), problem6_0.a1409102093);
      assertEquals(168, problem6_0.a2038572265);
      assertEquals((-85), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(94, problem6_0.a987727161);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      
      problem6_0.calculateOutput("iC");
      assertEquals((-7601), problem6_0.a987727161);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-21009), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-2470), problem6_0.a1084416973);
      assertEquals((-28), problem6_0.a659440330);
      assertEquals((-27185), problem6_0.a1409102093);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(10, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(1, problem6_0.a1755002313);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      
      int[] intArray0 = new int[9];
      // SystemInUtil.addInputLine("f");
      intArray0[0] = 2;
      // SystemInUtil.addInputLine("f");
      intArray0[3] = 16;
      intArray0[4] = 50;
      problem6_0.calculateOutput("iF");
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iI");
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iF");
      assertEquals(4, problem6_0.a846298027);
      assertEquals(5, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-16972), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-18123), problem6_0.a1084416973);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-18468), problem6_0.a987727161);
      assertEquals((-24874), problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-11), problem6_0.a659440330);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iH");
      assertEquals(4, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-16972), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-18123), problem6_0.a1084416973);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-18468), problem6_0.a987727161);
      assertEquals((-24874), problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-11), problem6_0.a659440330);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertTrue(problem6_0.cf);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iC");
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(27, problem6_0.a1409102093);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iA");
      assertEquals(281, problem6_0.a2038572265);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(120, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-2), problem6_0.a1084416973);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(227, problem6_0.a987727161);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iC");
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals((-25), problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(70, problem6_0.a987727161);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals((-58), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(164, problem6_0.a2038572265);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iC");
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-62), problem6_0.a659440330);
      assertEquals((-7627), problem6_0.a987727161);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals((-2470), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-27185), problem6_0.a1409102093);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(4, problem6_0.a927237116);
      assertEquals((-17262), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-62), problem6_0.a659440330);
      assertEquals((-7627), problem6_0.a987727161);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals((-2470), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(70, problem6_0.a1175903853);
      assertEquals((-27185), problem6_0.a1409102093);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(4, problem6_0.a927237116);
      assertEquals((-17262), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iA");
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-62), problem6_0.a659440330);
      assertEquals((-7627), problem6_0.a987727161);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals((-2470), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(70, problem6_0.a1175903853);
      assertEquals((-27185), problem6_0.a1409102093);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(4, problem6_0.a927237116);
      assertEquals((-17262), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-62), problem6_0.a659440330);
      assertEquals((-7627), problem6_0.a987727161);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals((-2470), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(70, problem6_0.a1175903853);
      assertEquals((-27185), problem6_0.a1409102093);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(4, problem6_0.a927237116);
      assertEquals((-17262), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iI");
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-62), problem6_0.a659440330);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(112, problem6_0.a1409102093);
      assertEquals((-121), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(70, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(309, problem6_0.a2038572265);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(194, problem6_0.a987727161);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("F(F73';,Q]8YGB+4p");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      
      problem6_0.calculateOutput("iC");
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1268933635);
      
      problem6_0.calculateOutput("iA");
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(227, problem6_0.a987727161);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-2), problem6_0.a1084416973);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(120, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(281, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iC");
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(164, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(70, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-58), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-25), problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-10931), problem6_0.a987727161);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-15228), problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-12680), problem6_0.a2038572265);
      assertEquals(9065, problem6_0.a1175903853);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(16, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iA");
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a508177696);
      assertEquals((-10931), problem6_0.a987727161);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(65, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-15228), problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-12680), problem6_0.a2038572265);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a846298027);
      
      problem6_0.calculateOutput("iA");
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a508177696);
      assertEquals((-10931), problem6_0.a987727161);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(65, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-15228), problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-12680), problem6_0.a2038572265);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a846298027);
      
      problem6_0.calculateOutput("iG");
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a508177696);
      assertEquals((-10931), problem6_0.a987727161);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(65, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-15228), problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-12680), problem6_0.a2038572265);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a846298027);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a508177696);
      assertEquals((-10931), problem6_0.a987727161);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(65, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-15228), problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-12680), problem6_0.a2038572265);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a846298027);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      
      // SystemInUtil.addInputLine("219R");
      problem6_0.a924059192 = "219R";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iB");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iC");
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      
      String string0 = "iH";
      problem6_0.calculateOutput("iH");
      assertEquals(60, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-19), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(276, problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(215, problem6_0.a987727161);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-14535), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-13585), problem6_0.a987727161);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(1935, problem6_0.a659440330);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-8490), problem6_0.a1409102093);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals((-5172), problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertTrue(problem6_0.cf);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      
      problem6_0.calculateOutput("iH");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-107), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      
      problem6_0.calculateOutput("iA");
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(87, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(241, problem6_0.a2038572265);
      assertEquals(215, problem6_0.a987727161);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-8), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-107), problem6_0.a402093159);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-13585), problem6_0.a987727161);
      assertEquals((-14089), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-4509), problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-3895), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-107), problem6_0.a402093159);
      assertEquals(2024, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iH");
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16422, problem6_0.a1175903853);
      assertEquals((-13585), problem6_0.a987727161);
      assertEquals((-14089), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-4509), problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-3895), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-107), problem6_0.a402093159);
      assertEquals(2024, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a261449517);
      
      String string0 = "iI";
      problem6_0.calculateOutput("iH");
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-13585), problem6_0.a987727161);
      assertEquals((-14089), problem6_0.a1084416973);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(59, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a141525412);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-4509), problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-3895), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-107), problem6_0.a402093159);
      assertEquals(2024, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a261449517);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("1$J4Bg~%B");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = (-1014);
      // SystemInUtil.addInputLine("h");
      problem6_0.calculateOutput("iA");
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-123), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iA");
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-20), problem6_0.a1084416973);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(250, problem6_0.a987727161);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(247, problem6_0.a2038572265);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(91, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-14472), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-5915), problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-5111), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(1799, problem6_0.a659440330);
      assertEquals((-13585), problem6_0.a987727161);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertTrue(problem6_0.cf);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      
      String string0 = "iA";
      problem6_0.calculateOutput("iA");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertFalse(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      
      problem6_0.calculateOutput("iC");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(261, problem6_0.a987727161);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(7, problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(63, problem6_0.a1409102093);
      assertEquals(272, problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a632192596);
      assertEquals((-2760), problem6_0.a1409102093);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals((-13585), problem6_0.a987727161);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a1268933635);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-13933), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2252, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-3742), problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      
      problem6_0.calculateOutput("iA");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a632192596);
      assertEquals((-2760), problem6_0.a1409102093);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals((-13585), problem6_0.a987727161);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(90, problem6_0.a1453485468);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9063, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-13933), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2252, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-3742), problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a632192596);
      assertEquals((-2760), problem6_0.a1409102093);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals((-13585), problem6_0.a987727161);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(90, problem6_0.a1453485468);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-13933), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2252, problem6_0.a659440330);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(63, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-3742), problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      
      problem6_0.calculateOutput("iC");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      
      problem6_0.calculateOutput("iH");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(60, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a927237116);
      assertEquals((-19), problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(215, problem6_0.a987727161);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(276, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      
      String string0 = "iJ";
      problem6_0.calculateOutput("iJ");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals((-14535), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-13585), problem6_0.a987727161);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(1935, problem6_0.a659440330);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-8490), problem6_0.a1409102093);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals((-5172), problem6_0.a2038572265);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals((-14535), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-13585), problem6_0.a987727161);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(1935, problem6_0.a659440330);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(17492, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-8490), problem6_0.a1409102093);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals((-5172), problem6_0.a2038572265);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      
      problem6_0.calculateOutput("iC");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = 16;
      problem6_0.calculateOutput("iC");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a927237116);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("$nSCr");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iC");
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      
      String string0 = "'o8zUU\"Hw";
      // SystemInUtil.addInputLine("'o8zUU\"Hw");
      problem6_0.a924059192 = "5UVE\"0)cHC:`Q";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      problem6_0.calculateOutput("iD");
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      
      problem6_0.calculateOutput("iG");
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1248854190);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      
      problem6_0.calculateOutput("iD");
      assertEquals(10, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(253, problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(74, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a1248854190);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-23), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(198, problem6_0.a987727161);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("dz5<eNIvj$");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertTrue(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iC");
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iD");
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iE");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(184, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(96, problem6_0.a1409102093);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-27), problem6_0.a1084416973);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iC");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-12634), problem6_0.a987727161);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1669668007);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-16677), problem6_0.a1409102093);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-25152), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals((-5860), problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iD");
      assertEquals((-55), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(19, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(120, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(131, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iA");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-5687), problem6_0.a987727161);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-25646), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a927237116);
      assertEquals((-23618), problem6_0.a2038572265);
      assertEquals((-5774), problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("F1EDA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertTrue(problem6_0.cf);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertFalse(problem6_0.cf);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      
      problem6_0.calculateOutput("iD");
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertFalse(problem6_0.cf);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      
      problem6_0.calculateOutput("iE");
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(12, problem6_0.a311551481);
      assertEquals((-27), problem6_0.a1084416973);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a2118660775);
      assertFalse(problem6_0.cf);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(96, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(184, problem6_0.a987727161);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals((-16677), problem6_0.a1409102093);
      assertEquals(6, problem6_0.a2118660775);
      assertFalse(problem6_0.cf);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-5860), problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-25152), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-12634), problem6_0.a987727161);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1669668007);
      assertEquals(90, problem6_0.a1453485468);
      
      problem6_0.calculateOutput("iE");
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a2118660775);
      assertFalse(problem6_0.cf);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(0, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-43), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(151, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(140, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iC");
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertFalse(problem6_0.cf);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1268933635);
      
      problem6_0.calculateOutput("iD");
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertFalse(problem6_0.cf);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iE");
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-27), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(184, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(96, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a730330384);
      assertFalse(problem6_0.cf);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      
      problem6_0.calculateOutput("iC");
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-16677), problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-12634), problem6_0.a987727161);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-5860), problem6_0.a2038572265);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a730330384);
      assertFalse(problem6_0.cf);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals((-25152), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1669668007);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iD");
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(131, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(120, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a730330384);
      assertEquals((-55), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertFalse(problem6_0.cf);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(19, problem6_0.a1409102093);
      
      problem6_0.calculateOutput("iF");
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(131, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(120, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a730330384);
      assertEquals((-55), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertFalse(problem6_0.cf);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(19, problem6_0.a1409102093);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(13, problem6_1.a311551481);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(11, problem6_1.a1844564130);
      assertTrue(problem6_1.cf);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(11, problem6_1.a794870881);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      problem6_1.calculateOutput("iD");
      assertEquals(13, problem6_1.a311551481);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(9, problem6_1.a632192596);
      assertFalse(problem6_1.cf);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(11, problem6_1.a794870881);
      assertNotSame(problem6_1, problem6_0);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_1.calculateOutput("e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      // SystemInUtil.addInputLine("5dOzfJr");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertTrue(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iC");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iG");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(237, problem6_0.a987727161);
      assertEquals(240, problem6_0.a2038572265);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(213, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(111, problem6_0.a1409102093);
      
      problem6_0.calculateOutput("iC");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(237, problem6_0.a987727161);
      assertEquals(240, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(213, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(111, problem6_0.a1409102093);
      
      problem6_0.calculateOutput("iC");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(237, problem6_0.a987727161);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-9037), problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals((-16337), problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(111, problem6_0.a1409102093);
      
      problem6_0.calculateOutput("iC");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-5888), problem6_0.a1084416973);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-18485), problem6_0.a1409102093);
      assertEquals((-22103), problem6_0.a987727161);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-9037), problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(4, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals((-16337), problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      
      problem6_0.calculateOutput("iC");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(231, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(53, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-9037), problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-63), problem6_0.a1084416973);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(4, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(249, problem6_0.a2038572265);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      
      problem6_0.a1453485468 = (-2928);
      problem6_0.calculateOutput("iC");
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-2928), problem6_0.a1453485468);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      
      // SystemInUtil.addInputLine("i");
      // SystemInUtil.addInputLine("f");
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(16, problem6_1.a1265826928);
      assertTrue(problem6_1.cf);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(13, problem6_1.a311551481);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(6, problem6_1.a2118660775);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      problem6_0.calculateOutput("iJ");
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals((-2928), problem6_0.a1453485468);
      assertFalse(problem6_0.cf);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-16584), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(236, problem6_0.a1944045722);
      assertNotSame(problem6_0, problem6_1);
      assertFalse(problem6_0.equals((Object)problem6_1));
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertTrue(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      
      problem6_0.calculateOutput("iC");
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      
      problem6_0.calculateOutput("iD");
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      
      problem6_0.calculateOutput("iE");
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(6, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(96, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-27), problem6_0.a1084416973);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(184, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      
      problem6_0.calculateOutput("iC");
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(12, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a730330384);
      assertEquals((-25152), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-16677), problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-12634), problem6_0.a987727161);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-5860), problem6_0.a2038572265);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(5, problem6_1.a927237116);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(27, problem6_1.a1409102093);
      assertTrue(problem6_1.cf);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(13, problem6_1.a508177696);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      
      problem6_0.a1268933635 = 2;
      // SystemInUtil.addInputLine("h");
      problem6_0.calculateOutput("iI");
      assertFalse(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-27672), problem6_0.a2038572265);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-29093), problem6_0.a987727161);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-8520), problem6_0.a1084416973);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-27577), problem6_0.a1409102093);
      assertEquals(19685, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(1, problem6_0.a1755002313);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iI");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      
      problem6_0.a261449517 = 281;
      String string0 = "iC";
      problem6_0.calculateOutput("iC");
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(281, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      
      String string1 = "iA";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iC");
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = 16;
      problem6_0.calculateOutput("iC");
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a402093159);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iG");
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a402093159);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // SystemInUtil.addInputLine(stringArray0[0]);
      assertEquals(3, stringArray0.length);
      
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iH");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-107), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iE");
      assertEquals(211, problem6_0.a987727161);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(4, problem6_0.a1084416973);
      assertEquals(102, problem6_0.a1409102093);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-107), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iA");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-43), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a794870881);
      assertEquals((-1), problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-107), problem6_0.a402093159);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(133, problem6_0.a987727161);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(171, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iE");
      assertEquals(8, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-38), problem6_0.a659440330);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals((-22182), problem6_0.a2038572265);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-2365), problem6_0.a1409102093);
      assertEquals(4, problem6_0.a927237116);
      assertEquals((-1270), problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-107), problem6_0.a402093159);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-216), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iE");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(178, problem6_0.a987727161);
      assertEquals((-38), problem6_0.a659440330);
      assertEquals(65, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a927237116);
      assertEquals((-56), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(279, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-107), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a794870881);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertTrue(problem6_0.cf);
      assertEquals(27, problem6_0.a1409102093);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      problem6_0.a794870881 = 6;
      // SystemInUtil.addInputLine("f");
      intArray0[1] = 6;
      // SystemInUtil.addInputLine("h");
      intArray0[3] = 6;
      problem6_0.a1615683779 = "Y.qf{G_4 &?_5{p4%,";
      intArray0[4] = 50;
      intArray0[5] = (-113);
      intArray0[6] = 14;
      problem6_0.calculateOutput("iG");
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(269, problem6_0.a2038572265);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(16, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iI");
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(15, problem6_0.a1527522672);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(269, problem6_0.a2038572265);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(16, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iI");
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(269, problem6_0.a2038572265);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(16, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iI");
      assertEquals(11, problem6_0.a508177696);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-24206), problem6_0.a1360708750);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(12, problem6_0.a794870881);
      assertEquals((-16850), problem6_0.a2038572265);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a846298027);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("i");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertTrue(problem6_0.cf);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      
      int[] intArray0 = new int[10];
      intArray0[0] = 2;
      // SystemInUtil.addInputLine("f");
      intArray0[1] = 11;
      // SystemInUtil.addInputLine("h");
      problem6_0.a1844564130 = 11;
      intArray0[4] = 50;
      intArray0[5] = (-113);
      intArray0[6] = 14;
      problem6_0.calculateOutput("iG");
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iI");
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(15, problem6_0.a1527522672);
      
      problem6_0.calculateOutput("iI");
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(46, problem6_1.a987727161);
      assertTrue(problem6_1.cf);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(14, problem6_1.a730330384);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(201, problem6_1.a2038572265);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_1.calculateOutput("e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertTrue(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iC");
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = 236;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("X<r}z!/gUhGeE]t{n_b");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "SA";
      // SystemInUtil.addInputLine("SA");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.a778604490 = "SA";
      problem6_0.calculateOutput("iG");
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a927237116);
      
      problem6_0.calculateOutput("iF");
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a927237116);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      // SystemInUtil.addInputLine("D`Ph?ZzLi#e&`+k");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertTrue(problem6_0.cf);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      
      problem6_0.calculateOutput("iI");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(7, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1268933635);
      
      problem6_0.calculateOutput("iI");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(7, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertTrue(problem6_0.cf);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      
      int[] intArray0 = new int[6];
      problem6_0.a1409102093 = 2;
      intArray0[1] = 50;
      // SystemInUtil.addInputLine("h");
      problem6_0.a2129706085 = intArray0;
      intArray0[4] = 50;
      problem6_0.calculateOutput("iI");
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.calculateOutput("iI");
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      
      String string0 = "g";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertTrue(problem6_0.cf);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iG");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1527522672);
      assertFalse(problem6_0.cf);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      
      // SystemInUtil.addInputLine("h");
      problem6_0.calculateOutput("iJ");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a730330384);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1527522672);
      assertFalse(problem6_0.cf);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a141525412);
      
      problem6_0.calculateOutput("iA");
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-35), problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(98, problem6_0.a987727161);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1248854190);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(118, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-78), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1527522672);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-35), problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(98, problem6_0.a987727161);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1248854190);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(118, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-78), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1527522672);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertTrue(problem6_0.cf);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      // SystemInUtil.addInputLine("f");
      intArray0[1] = 11;
      // SystemInUtil.addInputLine("h");
      intArray0[3] = 11;
      intArray0[4] = 50;
      intArray0[5] = (-113);
      intArray0[6] = 14;
      problem6_0.calculateOutput("iI");
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(7, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iI");
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(7, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      
      String[] stringArray0 = new String[5];
      problem6_0.calculateOutput("iG");
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(250, problem6_0.a987727161);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(209, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(107, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(7, problem6_0.a1248854190);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iC");
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      
      int[] intArray0 = new int[6];
      intArray0[0] = 5;
      intArray0[1] = 50;
      intArray0[2] = 2;
      intArray0[3] = 5;
      intArray0[4] = 15;
      problem6_0.a1004251640 = intArray0;
      problem6_0.a1003030503 = 9;
      problem6_0.a402093159 = 90;
      String string0 = "iA";
      problem6_0.calculateOutput("iA");
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a402093159);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      
      // SystemInUtil.addInputLine("f");
      problem6_0.calculateOutput("iA");
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a402093159);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("psHU@C1{B&");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String string0 = "Z";
      // SystemInUtil.addInputLine("Z");
      stringArray0[0] = "S";
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(13, problem6_0.a508177696);
      assertTrue(problem6_0.cf);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      
      problem6_0.calculateOutput("iE");
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      
      problem6_0.calculateOutput("iG");
      assertEquals((-16), problem6_0.a1084416973);
      assertEquals(241, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(213, problem6_0.a1360708750);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(216, problem6_0.a987727161);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(79, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      
      problem6_0.calculateOutput("iE");
      assertEquals((-16), problem6_0.a1084416973);
      assertEquals(241, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(213, problem6_0.a1360708750);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(216, problem6_0.a987727161);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(79, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a1527522672);
      
      problem6_0.calculateOutput("iA");
      assertEquals((-16), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-24439), problem6_0.a2038572265);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals((-19831), problem6_0.a1360708750);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(216, problem6_0.a987727161);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(79, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a1527522672);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("S");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      
      String string0 = "iC";
      problem6_0.calculateOutput("iC");
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-123), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      
      problem6_0.calculateOutput("iC");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(62, problem6_0.a1409102093);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(261, problem6_0.a987727161);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(7, problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(272, problem6_0.a2038572265);
      
      problem6_0.calculateOutput("iG");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(62, problem6_0.a1409102093);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(261, problem6_0.a987727161);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(7, problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(272, problem6_0.a2038572265);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.calculateOutput("iC");
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertFalse(problem6_0.cf);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      
      String string0 = "iG";
      problem6_0.calculateOutput("iG");
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(240, problem6_0.a2038572265);
      assertEquals(237, problem6_0.a987727161);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertFalse(problem6_0.cf);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(213, problem6_0.a1360708750);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(17, problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(111, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iI");
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(240, problem6_0.a2038572265);
      assertEquals(237, problem6_0.a987727161);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertFalse(problem6_0.cf);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(213, problem6_0.a1360708750);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(17, problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(111, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("Q92qJNjKim%");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "SA";
      // SystemInUtil.addInputLine("SA");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      
      problem6_0.calculateOutput("iF");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      
      problem6_0.calculateOutput("iG");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(241, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(213, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-16), problem6_0.a1084416973);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(91, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(241, problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(236, problem6_0.a1944045722);
      
      problem6_0.calculateOutput("iF");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(241, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(213, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-16), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(91, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(241, problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(236, problem6_0.a1944045722);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      
      problem6_0.calculateOutput("iG");
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      
      // SystemInUtil.addInputLine("Current state has no transition for this input!");
      int[] intArray0 = new int[5];
      intArray0[0] = 16;
      intArray0[1] = 16;
      intArray0[2] = 50;
      intArray0[3] = 11;
      intArray0[4] = 10;
      problem6_0.a1552674339 = intArray0;
      problem6_0.a659440330 = (-9074);
      problem6_0.calculateOutput("iG");
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals((-9074), problem6_0.a659440330);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      
      problem6_0.calculateOutput("iG");
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertFalse(problem6_0.cf);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals((-9074), problem6_0.a659440330);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      
      problem6_0.calculateOutput("iI");
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertFalse(problem6_0.cf);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-24206), problem6_0.a1360708750);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals((-16850), problem6_0.a2038572265);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals((-9074), problem6_0.a659440330);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertTrue(problem6_0.cf);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iC");
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iC");
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(3, problem6_0.a1755002313);
      assertFalse(problem6_0.cf);
      assertEquals(62, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(272, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(261, problem6_0.a987727161);
      assertEquals(7, problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iD");
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(3, problem6_0.a1755002313);
      assertFalse(problem6_0.cf);
      assertEquals(62, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(272, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(261, problem6_0.a987727161);
      assertEquals(7, problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iC");
      assertEquals(12, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(3, problem6_0.a1755002313);
      assertFalse(problem6_0.cf);
      assertEquals(62, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(272, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(261, problem6_0.a987727161);
      assertEquals(7, problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iC");
      assertEquals(12, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(158, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(28, problem6_0.a1409102093);
      assertEquals((-61), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(88, problem6_0.a987727161);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(14, problem6_1.a730330384);
      assertEquals((-123), problem6_1.a1084416973);
      assertTrue(problem6_1.cf);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(310, problem6_1.a1003030503);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_1.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertTrue(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      
      problem6_0.calculateOutput("iC");
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      
      problem6_0.a1003030503 = 236;
      problem6_0.calculateOutput("iA");
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(120, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(281, problem6_0.a2038572265);
      assertEquals(227, problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-2), problem6_0.a1084416973);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      
      problem6_0.a794870881 = 59;
      // SystemInUtil.addInputLine("ID{vau#");
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      
      problem6_0.a1844564130 = (-19117);
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      
      problem6_0.calculateOutput("iC");
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      
      problem6_0.calculateOutput("iA");
      assertEquals(6, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(281, problem6_0.a2038572265);
      assertEquals(120, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-2), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(227, problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      
      problem6_0.calculateOutput("iC");
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-25), problem6_0.a1409102093);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(164, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(70, problem6_0.a987727161);
      assertEquals((-58), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(13, problem6_0.a311551481);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals((-10931), problem6_0.a987727161);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-12680), problem6_0.a2038572265);
      assertEquals((-15228), problem6_0.a1409102093);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9065, problem6_0.a1175903853);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      
      problem6_0.calculateOutput("iA");
      assertEquals(13, problem6_0.a311551481);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals((-10931), problem6_0.a987727161);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-12680), problem6_0.a2038572265);
      assertEquals((-15228), problem6_0.a1409102093);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(65, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(13, problem6_0.a311551481);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals((-10931), problem6_0.a987727161);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-12680), problem6_0.a2038572265);
      assertEquals((-15228), problem6_0.a1409102093);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(65, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      
      problem6_0.calculateOutput("iI");
      assertEquals(6, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(264, problem6_0.a2038572265);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(120, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(190, problem6_0.a987727161);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-128), problem6_0.a1084416973);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(65, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(16, problem6_0.a1265826928);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("F(F73';,Q]8YGB+4p");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertTrue(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      
      problem6_0.calculateOutput("iB");
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      
      // SystemInUtil.addInputLine("iB");
      String string0 = "iH";
      int[] intArray0 = new int[7];
      intArray0[0] = 2;
      intArray0[1] = 141;
      intArray0[2] = 2;
      intArray0[3] = 5;
      intArray0[4] = 5;
      intArray0[5] = (-61);
      intArray0[6] = 11;
      problem6_0.a1370180893 = intArray0;
      problem6_0.calculateOutput("iH");
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-13), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(58, problem6_0.a1409102093);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(219, problem6_0.a987727161);
      assertEquals(11, problem6_0.a141525412);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iH");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a1248854190);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = (-1044);
      problem6_0.calculateOutput("iA");
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      
      String string0 = "iI";
      problem6_0.calculateOutput("iI");
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      
      String[] stringArray0 = null;
      problem6_0.calculateOutput("iI");
      assertEquals(13, problem6_0.a311551481);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(8, problem6_0.a632192596);
      assertEquals((-2986), problem6_0.a1409102093);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(5, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-14544), problem6_0.a2038572265);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-24015), problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-15360), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(30, problem6_0.a659440330);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-105), problem6_0.a402093159);
      
      problem6_0.calculateOutput("iC");
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      
      String string0 = "iA";
      problem6_0.calculateOutput("iA");
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(120, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(281, problem6_0.a2038572265);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(227, problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-2), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a632192596);
      
      problem6_0.calculateOutput("iC");
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(164, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-25), problem6_0.a1409102093);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(70, problem6_0.a987727161);
      assertEquals((-58), problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(4, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9065, problem6_0.a1175903853);
      assertEquals((-12680), problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals((-10931), problem6_0.a987727161);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-15228), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(4, problem6_0.a779607920);
      
      // SystemInUtil.addInputLine("i");
      problem6_0.calculateOutput("iJ");
      assertEquals(4, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(62, problem6_0.a1175903853);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-12680), problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals((-10931), problem6_0.a987727161);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-15228), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(4, problem6_0.a779607920);
      
      problem6_0.calculateOutput("iA");
      assertEquals(4, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(62, problem6_0.a1175903853);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-12680), problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals((-10931), problem6_0.a987727161);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-15228), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(4, problem6_0.a779607920);
      
      problem6_0.a927237116 = 74;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iJ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      // SystemInUtil.addInputLine("f");
      problem6_0.calculateOutput("iF");
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      // SystemInUtil.addInputLine("e");
      problem6_0.calculateOutput("iF");
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(112, problem6_0.a1409102093);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(261, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(249, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-13585), problem6_0.a987727161);
      assertEquals(2208, problem6_0.a659440330);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-4019), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-8485), problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-13641), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      
      // SystemInUtil.addInputLine("h");
      problem6_0.a927237116 = (-1385);
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iJ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      
      problem6_0.calculateOutput("iC");
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = 236;
      problem6_0.calculateOutput("iH");
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-14746), problem6_0.a2038572265);
      assertFalse(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(24, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-27231), problem6_0.a1409102093);
      assertEquals((-13586), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-2970), problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      
      // SystemInUtil.addInputLine("i");
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(9, problem6_1.a261449517);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(201, problem6_1.a2038572265);
      assertTrue(problem6_1.cf);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(13, problem6_1.a508177696);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      problem6_1.calculateOutput("iH");
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(2, problem6_1.a1268933635);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals((-107), problem6_1.a402093159);
      assertEquals(9, problem6_1.a261449517);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(236, problem6_1.a1944045722);
      assertFalse(problem6_1.cf);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(13, problem6_1.a508177696);
      assertNotSame(problem6_1, problem6_0);
      assertFalse(problem6_1.equals((Object)problem6_0));
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      
      problem6_0.calculateOutput("iC");
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertFalse(problem6_0.cf);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      
      problem6_0.calculateOutput("iD");
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertFalse(problem6_0.cf);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      
      problem6_0.calculateOutput("iE");
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(96, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-27), problem6_0.a1084416973);
      assertEquals(141, problem6_0.a554869193);
      assertFalse(problem6_0.cf);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(184, problem6_0.a987727161);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      
      problem6_0.calculateOutput("iD");
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(96, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a2118660775);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-27), problem6_0.a1084416973);
      assertEquals(141, problem6_0.a554869193);
      assertFalse(problem6_0.cf);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(184, problem6_0.a987727161);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iC");
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(44, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals((-69), problem6_0.a1084416973);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(195, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertFalse(problem6_0.cf);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iG");
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(44, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals((-69), problem6_0.a1084416973);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(195, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertFalse(problem6_0.cf);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iG");
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(44, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals((-69), problem6_0.a1084416973);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(195, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertFalse(problem6_0.cf);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iC");
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(44, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals((-69), problem6_0.a1084416973);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(195, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertFalse(problem6_0.cf);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a508177696);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("p%lq]h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(13, problem6_0.a508177696);
      assertTrue(problem6_0.cf);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iG");
      assertEquals(10, problem6_0.a261449517);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1527522672);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iH");
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1527522672);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iH");
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "h";
      stringArray0[1] = "e";
      stringArray0[2] = "h";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(27, problem6_0.a1409102093);
      assertTrue(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iC");
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iB");
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-5), problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(209, problem6_0.a987727161);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(69, problem6_0.a1409102093);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(224, problem6_0.a2038572265);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(12, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iB");
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(94, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals((-20), problem6_0.a1409102093);
      assertEquals(168, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-85), problem6_0.a1084416973);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      // SystemInUtil.addInputLine("f");
      problem6_0.calculateOutput("iC");
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals((-21009), problem6_0.a2038572265);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-7601), problem6_0.a987727161);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(1, problem6_0.a1755002313);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-27185), problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a846298027);
      assertEquals((-2470), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-28), problem6_0.a659440330);
      assertEquals(10, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iH");
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-115), problem6_0.a1084416973);
      assertEquals(274, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(180, problem6_0.a987727161);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1268933635);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-28), problem6_0.a659440330);
      assertEquals(81, problem6_0.a1409102093);
      assertEquals(12, problem6_0.a794870881);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      // SystemInUtil.addInputLine("f");
      intArray0[1] = 11;
      // SystemInUtil.addInputLine("h");
      intArray0[3] = 16;
      intArray0[4] = 50;
      intArray0[5] = (-113);
      problem6_0.calculateOutput("iB");
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-17150), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      
      problem6_0.calculateOutput("iB");
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-17150), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(23576, problem6_0.a659440330);
      assertFalse(problem6_0.cf);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 11;
      // SystemInUtil.addInputLine("h");
      intArray0[3] = 16;
      intArray0[4] = 50;
      intArray0[5] = (-113);
      intArray0[6] = 14;
      problem6_0.calculateOutput("iB");
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a927237116);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertFalse(problem6_0.cf);
      assertEquals((-17150), problem6_0.a1084416973);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals(13, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iB");
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a927237116);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertFalse(problem6_0.cf);
      assertEquals((-17150), problem6_0.a1084416973);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals(23576, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iD");
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a1303741660);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(234, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertFalse(problem6_0.cf);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a508177696);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(207, problem6_0.a987727161);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(111, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(23576, problem6_0.a659440330);
      assertEquals((-8), problem6_0.a1084416973);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "S";
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iF");
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iE");
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(36, problem6_0.a1084416973);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(217, problem6_0.a987727161);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(102, problem6_0.a1409102093);
      
      problem6_0.calculateOutput("iE");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(18, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(173, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals((-126), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(132, problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iF");
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a632192596);
      assertEquals((-12817), problem6_0.a1409102093);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-7855), problem6_0.a1084416973);
      assertEquals((-15321), problem6_0.a2038572265);
      assertEquals((-23611), problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-36), problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(4, problem6_0.a927237116);
      
      problem6_0.calculateOutput("iE");
      assertEquals(6, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-59), problem6_0.a1084416973);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(53, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(175, problem6_0.a987727161);
      assertEquals(279, problem6_0.a2038572265);
      assertEquals((-36), problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1527522672);
      
      problem6_0.calculateOutput("iF");
      assertEquals(6, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(53, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-69), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(175, problem6_0.a987727161);
      assertEquals(279, problem6_0.a2038572265);
      assertEquals((-36), problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1527522672);
      
      problem6_0.calculateOutput("iE");
      assertEquals(6, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(53, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-86), problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(175, problem6_0.a987727161);
      assertEquals(279, problem6_0.a2038572265);
      assertEquals((-36), problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1527522672);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertTrue(problem6_0.cf);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iC");
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iB");
      assertEquals(6, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(224, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(209, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-5), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iB");
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-20), problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(168, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(94, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-85), problem6_0.a1084416973);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      
      int[] intArray0 = new int[8];
      intArray0[0] = 50;
      intArray0[1] = 9;
      problem6_0.calculateOutput("iC");
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-27185), problem6_0.a1409102093);
      assertEquals((-28), problem6_0.a659440330);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(4, problem6_0.a927237116);
      assertEquals((-7601), problem6_0.a987727161);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-21009), problem6_0.a2038572265);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-2470), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iB");
      assertEquals(6, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-28), problem6_0.a659440330);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(269, problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a730439811);
      assertEquals((-47), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(101, problem6_0.a1409102093);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iC");
      assertEquals(6, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-28), problem6_0.a659440330);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(269, problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(15, problem6_0.a508177696);
      assertEquals((-103), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(101, problem6_0.a1409102093);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(7, problem6_0.a1694888134);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      
      int[] intArray0 = new int[10];
      intArray0[0] = 2;
      // SystemInUtil.addInputLine("f");
      intArray0[1] = 11;
      intArray0[2] = 347;
      // SystemInUtil.addInputLine("h");
      intArray0[3] = 16;
      intArray0[4] = 50;
      intArray0[5] = (-113);
      intArray0[6] = 14;
      String string0 = "iB";
      problem6_0.calculateOutput("iB");
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.a55778504 = intArray0;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iJ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals((-105), problem6_0.a402093159);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      // SystemInUtil.addInputLine("f");
      intArray0[1] = 11;
      intArray0[2] = 347;
      // SystemInUtil.addInputLine("h");
      intArray0[4] = 50;
      intArray0[5] = (-113);
      intArray0[6] = 14;
      problem6_0.a1084416973 = (-183);
      problem6_0.a273195999 = problem6_0.a1120699359;
      problem6_0.a1052548391 = 395;
      problem6_0.a359661274 = problem6_0.a182932449;
      // SystemInUtil.addInputLine("");
      problem6_0.a1409102093 = 14;
      intArray0[7] = (-1689);
      intArray0[8] = 16;
      problem6_0.a1302722907 = intArray0;
      problem6_0.calculateOutput("iJ");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(395, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(275, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(227, problem6_0.a987727161);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(67, problem6_0.a1409102093);
      assertEquals(22, problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "h";
      stringArray0[1] = "";
      stringArray0[2] = "g";
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(334, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(395, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(275, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(227, problem6_0.a987727161);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(67, problem6_0.a1409102093);
      assertEquals(22, problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      
      String[] stringArray1 = new String[0];
      assertFalse(stringArray1.equals((Object)stringArray0));
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertTrue(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      
      problem6_0.calculateOutput("iC");
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      
      problem6_0.calculateOutput("iD");
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      
      problem6_0.calculateOutput("iE");
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(184, problem6_0.a987727161);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(96, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-27), problem6_0.a1084416973);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a779607920);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(50, problem6_1.a1491392295);
      assertTrue(problem6_1.cf);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(11, problem6_1.a794870881);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      
      String string0 = "iC";
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a794870881);
      assertEquals(50, problem6_0.a1491392295);
      assertFalse(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = 236;
      problem6_0.calculateOutput("iA");
      assertEquals(50, problem6_0.a1491392295);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals((-52), problem6_0.a659440330);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-19682), problem6_0.a2038572265);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-22007), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-21407), problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-21418), problem6_0.a987727161);
      
      problem6_0.calculateOutput("iC");
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(282, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a730439811);
      assertEquals((-52), problem6_0.a659440330);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(183, problem6_0.a987727161);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(236, problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-106), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(116, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(3, problem6_0.a1755002313);
      
      String string1 = "uSC#'%#}E+2`[}:H\\p!";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("uSC#'%#}E+2`[}:Hp!");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      
      problem6_0.calculateOutput("iC");
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      
      problem6_0.calculateOutput("iD");
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(261, problem6_0.a2038572265);
      assertEquals(202, problem6_0.a987727161);
      assertEquals(6, problem6_0.a927237116);
      assertEquals((-18380), problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-4182), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(74, problem6_0.a1409102093);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("3");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertTrue(problem6_0.cf);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iB");
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iD");
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iB");
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals((-10476), problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(82, problem6_0.a1409102093);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(223, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-17015), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(211, problem6_0.a987727161);
      assertEquals(11, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iD");
      assertEquals(12, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a311551481);
      assertEquals((-4), problem6_0.a1084416973);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals((-10476), problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(82, problem6_0.a1409102093);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(223, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a508177696);
      assertEquals(211, problem6_0.a987727161);
      assertEquals(11, problem6_0.a730330384);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      
      // SystemInUtil.addInputLine("h");
      problem6_0.calculateOutput("iC");
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      
      problem6_0.calculateOutput("iD");
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(201, problem6_0.a2038572265);
      
      problem6_0.calculateOutput("iA");
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-10150), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-330), problem6_0.a987727161);
      assertEquals(233, problem6_0.a1453485468);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-12268), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a846298027);
      assertEquals((-16192), problem6_0.a1175903853);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals((-12169), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(12, problem6_0.a311551481);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(2, problem6_1.a1303741660);
      assertTrue(problem6_1.cf);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals((-105), problem6_1.a402093159);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      
      // SystemInUtil.addInputLine("h");
      problem6_0.calculateOutput("iC");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      
      problem6_0.calculateOutput("iD");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertTrue(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.calculateOutput("iB");
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-61), problem6_0.a402093159);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      // SystemInUtil.addInputLine(".06&D");
      problem6_0.calculateOutput("iB");
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(37, problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a927237116);
      assertEquals((-61), problem6_0.a402093159);
      assertFalse(problem6_0.cf);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(160, problem6_0.a987727161);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(223, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(96, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      
      // SystemInUtil.addInputLine("5I1\"V^Q+qHd_=6mFCAP");
      problem6_0.calculateOutput("iI");
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-20), problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(57, problem6_0.a987727161);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(134, problem6_0.a2038572265);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-82), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(30, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.calculateOutput("iB");
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-10932), problem6_0.a1084416973);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-17147), problem6_0.a2038572265);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(10, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a846298027);
      assertEquals((-18573), problem6_0.a987727161);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals((-10569), problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-21), problem6_0.a659440330);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(30, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(50, problem6_0.a1491392295);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // SystemInUtil.addInputLine(stringArray0[0]);
      assertEquals(3, stringArray0.length);
      
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iE");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iE");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(35, problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(239, problem6_0.a987727161);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(102, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iF");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-140), problem6_0.a1084416973);
      assertEquals((-21), problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(105, problem6_0.a987727161);
      assertEquals(25, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(186, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iE");
      assertEquals(8, problem6_0.a730439811);
      assertEquals((-5945), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-22514), problem6_0.a2038572265);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals((-13), problem6_0.a659440330);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(25, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-3266), problem6_0.a987727161);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-2549), problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(4, problem6_0.a927237116);
      
      problem6_0.calculateOutput("iF");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-13), problem6_0.a659440330);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(99, problem6_0.a1409102093);
      assertEquals(279, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(25, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-110), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(265, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iE");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-13), problem6_0.a659440330);
      assertEquals((-69), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(99, problem6_0.a1409102093);
      assertEquals(279, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(25, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(265, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a261449517);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      
      // SystemInUtil.addInputLine("e");
      problem6_0.calculateOutput("iA");
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a794870881);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      
      problem6_0.a261449517 = (-1644);
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("KGm![7B_' (a+{H");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      
      problem6_0.a261449517 = (-2093064);
      int[] intArray0 = new int[9];
      intArray0[0] = 5;
      // SystemInUtil.addInputLine("f");
      intArray0[1] = 11;
      intArray0[2] = 347;
      // SystemInUtil.addInputLine("h");
      intArray0[3] = 16;
      intArray0[4] = 50;
      intArray0[5] = (-113);
      intArray0[6] = 14;
      String string0 = "iB";
      problem6_0.calculateOutput("iB");
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-2093064), problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      
      String string1 = "iJ";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iJ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      // SystemInUtil.addInputLine("5dOzfJr");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iC");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iG");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(237, problem6_0.a987727161);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(240, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(17, problem6_0.a1084416973);
      assertEquals(111, problem6_0.a1409102093);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(213, problem6_0.a1360708750);
      
      problem6_0.calculateOutput("iC");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(237, problem6_0.a987727161);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(240, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(17, problem6_0.a1084416973);
      assertEquals(111, problem6_0.a1409102093);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(213, problem6_0.a1360708750);
      
      int[] intArray0 = new int[2];
      intArray0[0] = 141;
      intArray0[1] = 7;
      problem6_0.a182932449 = intArray0;
      problem6_0.calculateOutput("iC");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(237, problem6_0.a987727161);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-16337), problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-9037), problem6_0.a1360708750);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(17, problem6_0.a1084416973);
      assertEquals(111, problem6_0.a1409102093);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iC");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a632192596);
      assertEquals((-16337), problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-9037), problem6_0.a1360708750);
      assertEquals((-5888), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-18485), problem6_0.a1409102093);
      assertEquals((-22103), problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a1669668007);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iC");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(231, problem6_0.a987727161);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-9037), problem6_0.a1360708750);
      assertEquals(53, problem6_0.a1409102093);
      assertEquals(249, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a1669668007);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a846298027);
      assertEquals((-63), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("5dOzfJr");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iA");
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 8;
      intArray0[1] = 9;
      intArray0[2] = 50;
      intArray0[3] = 16;
      intArray0[4] = 201;
      intArray0[5] = 9;
      intArray0[6] = 7;
      problem6_0.calculateOutput("iA");
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-20), problem6_0.a1084416973);
      assertEquals(247, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(91, problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(250, problem6_0.a987727161);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      
      intArray0[7] = 228;
      intArray0[8] = 13;
      problem6_0.a424910590 = intArray0;
      problem6_0.calculateOutput("iC");
      assertEquals((-13), problem6_0.a1409102093);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(119, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-78), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(100, problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(32, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iJ");
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-15454), problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-10403), problem6_0.a987727161);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals((-12671), problem6_0.a2038572265);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(32, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(11785, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iA");
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-15454), problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(52, problem6_0.a1175903853);
      assertEquals((-10403), problem6_0.a987727161);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals((-12671), problem6_0.a2038572265);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(32, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iJ");
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-15454), problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(52, problem6_0.a1175903853);
      assertEquals((-10403), problem6_0.a987727161);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals((-12671), problem6_0.a2038572265);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(32, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iI");
      assertEquals(10, problem6_0.a730439811);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals((-122), problem6_0.a1084416973);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(118, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(210, problem6_0.a987727161);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(52, problem6_0.a1175903853);
      assertEquals(12, problem6_0.a794870881);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(32, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(290, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("F(F73';,Q]8YGB+4p");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.calculateOutput("iC");
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.a1003030503 = 90;
      problem6_0.a402093159 = 90;
      String string0 = "iH";
      problem6_0.calculateOutput("iH");
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a402093159);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1003030503);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      // SystemInUtil.addInputLine("f");
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("tO$u");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // SystemInUtil.addInputLine("oZ");
      stringArray0[0] = "S";
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertTrue(problem6_0.cf);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      
      String string0 = "iF";
      problem6_0.calculateOutput("iE");
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      
      int[] intArray0 = new int[4];
      intArray0[0] = 50;
      intArray0[1] = 5;
      intArray0[2] = 7;
      intArray0[3] = 310;
      problem6_0.a203969606 = intArray0;
      problem6_0.calculateOutput("iE");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1527522672);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(102, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(239, problem6_0.a987727161);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(35, problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(10, problem6_0.a632192596);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      
      problem6_0.a1222489849 = intArray0;
      // SystemInUtil.addInputLine("S");
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "S";
      // SystemInUtil.addInputLine("S");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.calculateOutput("iF");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-123), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.calculateOutput("iE");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(36, problem6_0.a1084416973);
      assertEquals(262, problem6_0.a2038572265);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(102, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(217, problem6_0.a987727161);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.calculateOutput("iE");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(173, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(50, problem6_0.a1491392295);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(132, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals((-126), problem6_0.a1084416973);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(18, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      
      // SystemInUtil.addInputLine("S");
      problem6_0.a1546807871 = "S";
      problem6_0.calculateOutput("iA");
      assertEquals((-593), problem6_0.a2038572265);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(10, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-25404), problem6_0.a1084416973);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-8616), problem6_0.a987727161);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a659440330);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-26110), problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.calculateOutput("iF");
      assertEquals(209, problem6_0.a987727161);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a659440330);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(85, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a927237116);
      assertEquals((-93), problem6_0.a1084416973);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(257, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a508177696);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.a1580572397 = "S";
      problem6_0.calculateOutput("iD");
      assertEquals(10, problem6_0.a730439811);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a1268933635);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(102, problem6_0.a987727161);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(97, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a659440330);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(0, problem6_0.a1409102093);
      assertEquals((-93), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a508177696);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.calculateOutput("iD");
      assertEquals(10, problem6_0.a730439811);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a1268933635);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(102, problem6_0.a987727161);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(97, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a659440330);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(0, problem6_0.a1409102093);
      assertEquals((-93), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a508177696);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      
      String string0 = "iC";
      problem6_0.calculateOutput("iC");
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a779607920);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      
      String string1 = "iA";
      problem6_0.calculateOutput("iA");
      assertEquals(12, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(281, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-2), problem6_0.a1084416973);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(227, problem6_0.a987727161);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(120, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 8;
      intArray0[1] = 10;
      intArray0[2] = 50;
      problem6_0.a779607920 = 10;
      int[] intArray1 = new int[3];
      assertFalse(intArray1.equals((Object)intArray0));
      
      intArray1[0] = 6;
      intArray1[1] = 141;
      intArray1[2] = 14;
      problem6_0.a1430949514 = intArray1;
      intArray0[3] = 16;
      intArray0[4] = 281;
      intArray0[5] = 10;
      intArray0[6] = 7;
      int int0 = 228;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iC");
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertFalse(problem6_0.cf);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      String string0 = "iE";
      String string1 = "iD";
      problem6_0.calculateOutput("iD");
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertFalse(problem6_0.cf);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      // SystemInUtil.addInputLine("f");
      problem6_0.calculateOutput("iE");
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-27), problem6_0.a1084416973);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(184, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(96, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(93, problem6_0.a1491392295);
      assertFalse(problem6_0.cf);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      
      // SystemInUtil.addInputLine("g");
      problem6_0.calculateOutput("iE");
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-9949), problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-15725), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(2, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a927237116);
      assertEquals((-16551), problem6_0.a1409102093);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals((-15734), problem6_0.a987727161);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("tb;v");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iB");
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertFalse(problem6_0.cf);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      
      // SystemInUtil.addInputLine("h");
      problem6_0.calculateOutput("iG");
      assertEquals(198, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(112, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(1, problem6_0.a1084416973);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(245, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(213, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iG");
      assertEquals(198, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(112, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(1, problem6_0.a1084416973);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(245, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(213, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-105), problem6_0.a402093159);
      
      problem6_0.calculateOutput("iC");
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertFalse(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.a1944045722 = 2641;
      problem6_0.calculateOutput("iA");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(281, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(120, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-2), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(227, problem6_0.a987727161);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2641, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      
      problem6_0.calculateOutput("iC");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-25), problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(164, problem6_0.a2038572265);
      assertFalse(problem6_0.cf);
      assertEquals(70, problem6_0.a987727161);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-58), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-10931), problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-15228), problem6_0.a1409102093);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(9065, problem6_0.a1175903853);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-12680), problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertFalse(problem6_0.cf);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.calculateOutput("iA");
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-10931), problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-15228), problem6_0.a1409102093);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-12680), problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertFalse(problem6_0.cf);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(65, problem6_0.a1175903853);
      
      problem6_0.a2038572265 = 2641;
      String string0 = "iI";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iJ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertTrue(problem6_0.cf);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      
      problem6_0.calculateOutput("iC");
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      
      String string0 = "iA";
      problem6_0.calculateOutput("iC");
      assertEquals(7, problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(261, problem6_0.a987727161);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(62, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(272, problem6_0.a2038572265);
      
      problem6_0.calculateOutput("iC");
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(38, problem6_0.a1944045722);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-98), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(70, problem6_0.a987727161);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(0, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(140, problem6_0.a2038572265);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      
      problem6_0.a632192596 = (-1104);
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iC");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -123
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      
      String string0 = "iC";
      problem6_0.calculateOutput("iC");
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = 236;
      problem6_0.calculateOutput("iC");
      assertEquals((-21975), problem6_0.a987727161);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-8561), problem6_0.a2038572265);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-3844), problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-4), problem6_0.a659440330);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a402093159);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-3066), problem6_0.a1084416973);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iC");
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(110, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals((-4), problem6_0.a659440330);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-127), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(236, problem6_0.a402093159);
      assertEquals(285, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(187, problem6_0.a987727161);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      
      problem6_0.calculateOutput("iC");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      
      problem6_0.calculateOutput("iB");
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(209, problem6_0.a987727161);
      assertFalse(problem6_0.cf);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals((-5), problem6_0.a1084416973);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(224, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      
      problem6_0.calculateOutput("iB");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-20), problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(94, problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-85), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(168, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      
      int[] intArray0 = new int[8];
      intArray0[0] = 50;
      problem6_0.calculateOutput("iB");
      assertEquals(50, problem6_0.a1491392295);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-10557), problem6_0.a1409102093);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-55), problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-8688), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-17811), problem6_0.a2038572265);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-15475), problem6_0.a987727161);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      
      problem6_0.calculateOutput("iC");
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-55), problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(191, problem6_0.a987727161);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(254, problem6_0.a2038572265);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(111, problem6_0.a1409102093);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-91), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1268933635);
      
      // SystemInUtil.addInputLine("pC,$Q");
      problem6_0.calculateOutput("iB");
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertFalse(problem6_0.cf);
      assertEquals((-49), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-55), problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(191, problem6_0.a987727161);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(254, problem6_0.a2038572265);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(111, problem6_0.a1409102093);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1268933635);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      // SystemInUtil.addInputLine("f");
      intArray0[1] = 11;
      intArray0[2] = 347;
      // SystemInUtil.addInputLine("h");
      intArray0[3] = 16;
      intArray0[4] = 50;
      intArray0[5] = (-113);
      intArray0[6] = 14;
      problem6_0.calculateOutput("iB");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-17150), problem6_0.a1084416973);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iD");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-26), problem6_0.a1409102093);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(144, problem6_0.a2038572265);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-89), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-18679), problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(113, problem6_0.a987727161);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertTrue(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      
      String string0 = "iC";
      problem6_0.calculateOutput("iC");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      
      int[] intArray0 = new int[4];
      problem6_0.a1370180893 = intArray0;
      intArray0[0] = 17;
      intArray0[1] = 236;
      intArray0[2] = 310;
      intArray0[3] = 7;
      problem6_0.a815477271 = intArray0;
      problem6_0.calculateOutput("iD");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a2118660775);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      
      // SystemInUtil.addInputLine("f");
      problem6_0.calculateOutput("iE");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals((-27), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a2118660775);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(184, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(96, problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(273, problem6_0.a2038572265);
      
      // SystemInUtil.addInputLine("g");
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertTrue(problem6_0.cf);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      
      problem6_0.calculateOutput("iC");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      
      int[] intArray0 = new int[6];
      intArray0[0] = 5;
      intArray0[1] = 50;
      problem6_0.calculateOutput("iB");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-5), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(209, problem6_0.a987727161);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(224, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      
      // SystemInUtil.addInputLine("h");
      problem6_0.calculateOutput("iD");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-5), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(209, problem6_0.a987727161);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(224, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      
      // SystemInUtil.addInputLine("h");
      problem6_0.calculateOutput("iC");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-5), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(209, problem6_0.a987727161);
      assertEquals(9, problem6_0.a508177696);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(224, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      
      problem6_0.calculateOutput("iD");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(110, problem6_0.a987727161);
      assertEquals(9, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-39), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1409102093);
      assertEquals(187, problem6_0.a2038572265);
      assertEquals(12, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      
      String string0 = "iI";
      problem6_0.calculateOutput("iI");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(296, problem6_0.a2038572265);
      assertEquals(233, problem6_0.a987727161);
      assertEquals(6, problem6_0.a927237116);
      assertEquals((-83), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(87, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(13, problem6_1.a508177696);
      assertEquals((-123), problem6_1.a1084416973);
      assertTrue(problem6_1.cf);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(5, problem6_1.a927237116);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      BufferedReader bufferedReader0 = Problem6.stdin;
      assertNotNull(bufferedReader0);
      
      BufferedReader bufferedReader1 = new BufferedReader(bufferedReader0);
      assertNotNull(bufferedReader1);
      assertFalse(bufferedReader1.equals((Object)bufferedReader0));
      
      Problem6.stdin = bufferedReader1;
      Problem6 problem6_2 = new Problem6();
      assertNotNull(problem6_2);
      assertEquals(347, problem6_2.a1360708750);
      assertEquals(13, problem6_2.a311551481);
      assertEquals(5, problem6_2.a927237116);
      assertEquals(14, problem6_2.a730330384);
      assertEquals(8, problem6_2.a1678650881);
      assertEquals(46, problem6_2.a987727161);
      assertEquals(11, problem6_2.a1052548391);
      assertEquals(9, problem6_2.a1669668007);
      assertEquals(16, problem6_2.a1265826928);
      assertEquals(50, problem6_2.a1491392295);
      assertEquals(13, problem6_2.a508177696);
      assertEquals(36, problem6_2.a1175903853);
      assertEquals(5, problem6_2.a846298027);
      assertEquals(2, problem6_2.a1755002313);
      assertEquals(8, problem6_2.a730439811);
      assertEquals(16, problem6_2.a659440330);
      assertEquals(141, problem6_2.a554869193);
      assertEquals((-105), problem6_2.a402093159);
      assertEquals(11, problem6_2.a141525412);
      assertEquals(11, problem6_2.a1844564130);
      assertEquals(5, problem6_2.a1268933635);
      assertEquals(6, problem6_2.a2118660775);
      assertEquals(201, problem6_2.a2038572265);
      assertEquals(7, problem6_2.a1694888134);
      assertEquals(236, problem6_2.a1944045722);
      assertEquals(14, problem6_2.a1248854190);
      assertEquals(90, problem6_2.a1453485468);
      assertEquals(11, problem6_2.a794870881);
      assertEquals(17, problem6_2.a1527522672);
      assertEquals(9, problem6_2.a261449517);
      assertEquals(15, problem6_2.a109697372);
      assertEquals(2, problem6_2.a1303741660);
      assertEquals(310, problem6_2.a1003030503);
      assertEquals((-123), problem6_2.a1084416973);
      assertEquals(5, problem6_2.a779607920);
      assertEquals(9, problem6_2.a632192596);
      assertEquals(27, problem6_2.a1409102093);
      assertTrue(problem6_2.cf);
      assertFalse(problem6_2.equals((Object)problem6_0));
      assertFalse(problem6_2.equals((Object)problem6_1));
      
      Problem6 problem6_3 = new Problem6();
      assertNotNull(problem6_3);
      assertTrue(problem6_3.cf);
      assertEquals(11, problem6_3.a794870881);
      assertEquals(9, problem6_3.a632192596);
      assertEquals(7, problem6_3.a1694888134);
      assertEquals(13, problem6_3.a508177696);
      assertEquals(5, problem6_3.a779607920);
      assertEquals(5, problem6_3.a1268933635);
      assertEquals(310, problem6_3.a1003030503);
      assertEquals(8, problem6_3.a730439811);
      assertEquals(16, problem6_3.a659440330);
      assertEquals(2, problem6_3.a1755002313);
      assertEquals(50, problem6_3.a1491392295);
      assertEquals(90, problem6_3.a1453485468);
      assertEquals(11, problem6_3.a141525412);
      assertEquals(14, problem6_3.a1248854190);
      assertEquals((-123), problem6_3.a1084416973);
      assertEquals(6, problem6_3.a2118660775);
      assertEquals(347, problem6_3.a1360708750);
      assertEquals(15, problem6_3.a109697372);
      assertEquals(13, problem6_3.a311551481);
      assertEquals(46, problem6_3.a987727161);
      assertEquals(17, problem6_3.a1527522672);
      assertEquals(5, problem6_3.a927237116);
      assertEquals(9, problem6_3.a261449517);
      assertEquals(11, problem6_3.a1052548391);
      assertEquals(16, problem6_3.a1265826928);
      assertEquals(8, problem6_3.a1678650881);
      assertEquals(14, problem6_3.a730330384);
      assertEquals(5, problem6_3.a846298027);
      assertEquals(141, problem6_3.a554869193);
      assertEquals((-105), problem6_3.a402093159);
      assertEquals(27, problem6_3.a1409102093);
      assertEquals(2, problem6_3.a1303741660);
      assertEquals(11, problem6_3.a1844564130);
      assertEquals(201, problem6_3.a2038572265);
      assertEquals(9, problem6_3.a1669668007);
      assertEquals(36, problem6_3.a1175903853);
      assertEquals(236, problem6_3.a1944045722);
      assertFalse(problem6_3.equals((Object)problem6_0));
      assertFalse(problem6_3.equals((Object)problem6_1));
      assertFalse(problem6_3.equals((Object)problem6_2));
      
      // Undeclared exception!
      try { 
        problem6_3.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // SystemInUtil.addInputLine("oZ");
      stringArray0[0] = "S";
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertTrue(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-123), problem6_0.a1084416973);
      
      problem6_0.calculateOutput("iE");
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-123), problem6_0.a1084416973);
      
      problem6_0.a203969606 = problem6_0.a815477271;
      problem6_0.calculateOutput("iE");
      assertEquals(102, problem6_0.a1409102093);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(239, problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(35, problem6_0.a1084416973);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(88, problem6_0.a1527522672);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(347, problem6_0.a1360708750);
      
      problem6_0.calculateOutput("iA");
      assertEquals(40, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(114, problem6_0.a987727161);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(199, problem6_0.a2038572265);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(88, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-84), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-4), problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      
      problem6_0.calculateOutput("iD");
      assertEquals(40, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(217, problem6_0.a987727161);
      assertEquals(67, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(278, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(19, problem6_0.a1084416973);
      assertEquals(9, problem6_0.a508177696);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(12, problem6_0.a2118660775);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(88, problem6_0.a1527522672);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(347, problem6_0.a1360708750);
      
      problem6_0.calculateOutput("iD");
      assertEquals(40, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(150, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(12, problem6_0.a2118660775);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1409102093);
      assertEquals(88, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(110, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-61), problem6_0.a1084416973);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iB");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1268933635);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iB");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(160, problem6_0.a987727161);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(223, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(96, problem6_0.a1409102093);
      assertEquals(37, problem6_0.a1084416973);
      
      problem6_0.calculateOutput("iD");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(160, problem6_0.a987727161);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(223, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(96, problem6_0.a1409102093);
      assertEquals(37, problem6_0.a1084416973);
      
      problem6_0.calculateOutput("iD");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a508177696);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(160, problem6_0.a987727161);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(223, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(12, problem6_0.a2118660775);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(96, problem6_0.a1409102093);
      assertEquals(37, problem6_0.a1084416973);
      
      String[] stringArray0 = new String[4];
      int[] intArray0 = new int[5];
      intArray0[0] = 14;
      intArray0[1] = 12;
      intArray0[2] = 236;
      intArray0[3] = 236;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("]5v6g`aqY|");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      
      problem6_0.calculateOutput("iC");
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      
      problem6_0.calculateOutput("iE");
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(102, problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(223, problem6_0.a987727161);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(23, problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      
      // SystemInUtil.addInputLine("e");
      problem6_0.calculateOutput("iD");
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(12, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(102, problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(223, problem6_0.a987727161);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(23, problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("d7=QPa[9M");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      
      int[] intArray0 = new int[9];
      // SystemInUtil.addInputLine("f");
      intArray0[0] = 2;
      // SystemInUtil.addInputLine("f");
      intArray0[2] = 347;
      // SystemInUtil.addInputLine("h");
      intArray0[3] = 16;
      intArray0[4] = 50;
      problem6_0.calculateOutput("iF");
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iI");
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iF");
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-18468), problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-24874), problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-11), problem6_0.a659440330);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(4, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a141525412);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-18123), problem6_0.a1084416973);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals((-16972), problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iI");
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-18468), problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-24874), problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-11), problem6_0.a659440330);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(4, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-18123), problem6_0.a1084416973);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals((-16972), problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "S";
      // SystemInUtil.addInputLine("S");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertTrue(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iF");
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iE");
      assertEquals(36, problem6_0.a1084416973);
      assertEquals(217, problem6_0.a987727161);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(262, problem6_0.a2038572265);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(102, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iE");
      assertEquals(18, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(173, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-126), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(132, problem6_0.a987727161);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      
      // SystemInUtil.addInputLine("S");
      problem6_0.a1409102093 = 102;
      problem6_0.calculateOutput("iA");
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-26033), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-593), problem6_0.a2038572265);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a659440330);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(8, problem6_0.a632192596);
      assertEquals((-8616), problem6_0.a987727161);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-37870), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(4, problem6_0.a927237116);
      
      problem6_0.calculateOutput("iF");
      assertEquals(209, problem6_0.a987727161);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(88, problem6_0.a1409102093);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a659440330);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(257, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-126), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      
      String string0 = "iD";
      problem6_0.calculateOutput("iD");
      assertEquals((-1), problem6_0.a1409102093);
      assertEquals(117, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a659440330);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(62, problem6_0.a987727161);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-126), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a1268933635);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a730439811);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      
      int[] intArray0 = new int[9];
      // SystemInUtil.addInputLine("f");
      intArray0[0] = 2;
      // SystemInUtil.addInputLine("f");
      intArray0[2] = 347;
      // SystemInUtil.addInputLine("h");
      problem6_0.a746238037 = intArray0;
      intArray0[3] = 16;
      intArray0[4] = 50;
      problem6_0.calculateOutput("iF");
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iI");
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iF");
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-16972), problem6_0.a1409102093);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-18468), problem6_0.a987727161);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals((-24874), problem6_0.a2038572265);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(8, problem6_0.a632192596);
      assertEquals((-18123), problem6_0.a1084416973);
      assertEquals((-11), problem6_0.a659440330);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(4, problem6_0.a927237116);
      
      problem6_0.calculateOutput("iI");
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-16972), problem6_0.a1409102093);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-18468), problem6_0.a987727161);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals((-24874), problem6_0.a2038572265);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(8, problem6_0.a632192596);
      assertEquals((-18123), problem6_0.a1084416973);
      assertEquals((-11), problem6_0.a659440330);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(4, problem6_0.a927237116);
      
      problem6_0.calculateOutput("iD");
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(68, problem6_0.a987727161);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-132), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(179, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-11), problem6_0.a659440330);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(15, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iG");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertFalse(problem6_0.cf);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iH");
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertFalse(problem6_0.cf);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iH");
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertFalse(problem6_0.cf);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iB");
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-7562), problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals((-25185), problem6_0.a2038572265);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iB");
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-7562), problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals((-25185), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-27075), problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-15509), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(12, problem6_0.a730330384);
      assertEquals((-5463), problem6_0.a1084416973);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a261449517);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(9, problem6_1.a632192596);
      assertTrue(problem6_1.cf);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(201, problem6_1.a2038572265);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_1.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertTrue(problem6_0.cf);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      
      // SystemInUtil.addInputLine("h");
      String string0 = "iC";
      problem6_0.calculateOutput("iC");
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iD");
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a779607920);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iA");
      assertEquals((-12268), problem6_0.a2038572265);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(233, problem6_0.a1453485468);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-10150), problem6_0.a1409102093);
      assertEquals((-16192), problem6_0.a1175903853);
      assertEquals(8, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals((-330), problem6_0.a987727161);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-12169), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iC");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(233, problem6_0.a1453485468);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(105, problem6_0.a1409102093);
      assertEquals(258, problem6_0.a2038572265);
      assertEquals((-16192), problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(21, problem6_0.a1084416973);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(214, problem6_0.a987727161);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(5, problem6_1.a779607920);
      assertTrue(problem6_1.cf);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(11, problem6_1.a794870881);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      Problem6 problem6_2 = new Problem6();
      assertNotNull(problem6_2);
      assertEquals(16, problem6_2.a1265826928);
      assertEquals(9, problem6_2.a261449517);
      assertEquals(5, problem6_2.a846298027);
      assertEquals(14, problem6_2.a730330384);
      assertEquals(9, problem6_2.a1669668007);
      assertEquals(8, problem6_2.a1678650881);
      assertEquals(11, problem6_2.a1052548391);
      assertEquals((-123), problem6_2.a1084416973);
      assertEquals(90, problem6_2.a1453485468);
      assertEquals(5, problem6_2.a927237116);
      assertEquals(5, problem6_2.a779607920);
      assertEquals(13, problem6_2.a311551481);
      assertEquals(27, problem6_2.a1409102093);
      assertEquals(15, problem6_2.a109697372);
      assertEquals(9, problem6_2.a632192596);
      assertEquals(310, problem6_2.a1003030503);
      assertEquals(347, problem6_2.a1360708750);
      assertEquals(2, problem6_2.a1303741660);
      assertEquals(11, problem6_2.a794870881);
      assertTrue(problem6_2.cf);
      assertEquals(50, problem6_2.a1491392295);
      assertEquals(7, problem6_2.a1694888134);
      assertEquals(13, problem6_2.a508177696);
      assertEquals(6, problem6_2.a2118660775);
      assertEquals(46, problem6_2.a987727161);
      assertEquals(17, problem6_2.a1527522672);
      assertEquals(14, problem6_2.a1248854190);
      assertEquals(8, problem6_2.a730439811);
      assertEquals(16, problem6_2.a659440330);
      assertEquals(5, problem6_2.a1268933635);
      assertEquals(11, problem6_2.a1844564130);
      assertEquals(201, problem6_2.a2038572265);
      assertEquals(11, problem6_2.a141525412);
      assertEquals(141, problem6_2.a554869193);
      assertEquals(236, problem6_2.a1944045722);
      assertEquals((-105), problem6_2.a402093159);
      assertEquals(2, problem6_2.a1755002313);
      assertEquals(36, problem6_2.a1175903853);
      assertFalse(problem6_2.equals((Object)problem6_0));
      assertFalse(problem6_2.equals((Object)problem6_1));
      
      // Undeclared exception!
      try { 
        problem6_2.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      
      // SystemInUtil.addInputLine("h");
      String string0 = "iC";
      problem6_0.calculateOutput("iC");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1268933635);
      
      String string1 = "iD";
      problem6_0.calculateOutput("iD");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      
      problem6_0.calculateOutput("iA");
      assertEquals(233, problem6_0.a1453485468);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-330), problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertFalse(problem6_0.cf);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-10150), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-12268), problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-12169), problem6_0.a1084416973);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-16192), problem6_0.a1175903853);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iC");
      assertEquals(233, problem6_0.a1453485468);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(21, problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(214, problem6_0.a987727161);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(105, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-16192), problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(258, problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(12, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a846298027);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("dupU[saB0:lJ3");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iC");
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.a987727161 = 236;
      problem6_0.a402093159 = 16;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iC");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iC");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.a1279475243 = "iC";
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = 236;
      problem6_0.calculateOutput("iG");
      assertEquals(6, problem6_0.a779607920);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(203, problem6_0.a987727161);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a1084416973);
      assertEquals(236, problem6_0.a402093159);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(50, problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-23465), problem6_0.a1360708750);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(6, problem6_0.a846298027);
      assertEquals((-21708), problem6_0.a2038572265);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      
      int[] intArray0 = new int[2];
      intArray0[0] = 3;
      problem6_0.calculateOutput("iG");
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals((-4095), problem6_0.a987727161);
      assertEquals((-17479), problem6_0.a1409102093);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a402093159);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(4, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-23465), problem6_0.a1360708750);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-21708), problem6_0.a2038572265);
      assertEquals((-7140), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iG");
      assertEquals(6, problem6_0.a779607920);
      assertEquals(195, problem6_0.a987727161);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(4, problem6_0.a1669668007);
      assertEquals((-68), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-23465), problem6_0.a1360708750);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(87, problem6_0.a1409102093);
      assertEquals(219, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("oz");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      
      problem6_0.calculateOutput("iC");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      
      problem6_0.a1279475243 = "iC";
      problem6_0.a1003030503 = 236;
      problem6_0.calculateOutput("iG");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(237, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(213, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(240, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(17, problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(111, problem6_0.a1409102093);
      
      problem6_0.calculateOutput("iC");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(237, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(213, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(240, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(17, problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(111, problem6_0.a1409102093);
      
      problem6_0.calculateOutput("iC");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(237, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-9037), problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a632192596);
      assertEquals((-16337), problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(17, problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(111, problem6_0.a1409102093);
      
      problem6_0.calculateOutput("iG");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-2261), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-4542), problem6_0.a987727161);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-16321), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-9037), problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-16337), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(4, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      
      problem6_0.calculateOutput("iC");
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1268933635);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      
      problem6_0.a1003030503 = 5;
      problem6_0.a402093159 = 236;
      // SystemInUtil.addInputLine("");
      problem6_0.calculateOutput("iE");
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-12905), problem6_0.a987727161);
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-10683), problem6_0.a2038572265);
      assertEquals(5, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a659440330);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-24240), problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-15984), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a1268933635);
      
      String string0 = "7>DY02Z2QZi";
      problem6_0.calculateOutput("iE");
      assertEquals(178, problem6_0.a987727161);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a659440330);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(265, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(77, problem6_0.a1409102093);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-61), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(3, problem6_0.a1755002313);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("7>DY02Z2QZi");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      problem6_0.calculateOutput("iD");
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a1669668007);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.calculateOutput("iG");
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a1669668007);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iB");
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      
      // SystemInUtil.addInputLine("iB");
      problem6_0.calculateOutput("iE");
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(102, problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(43, problem6_0.a1084416973);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(235, problem6_0.a987727161);
      
      problem6_0.calculateOutput("iE");
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(132, problem6_0.a987727161);
      assertEquals((-126), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(28, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(173, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-2), problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iE");
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      assertEquals((-2578), problem6_0.a1409102093);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-20), problem6_0.a659440330);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(28, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals((-24448), problem6_0.a2038572265);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-4481), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-3696), problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(4, problem6_0.a927237116);
      
      problem6_0.a1546807871 = "";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iC");
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iD");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      
      // SystemInUtil.addInputLine("iC");
      // SystemInUtil.addInputLine("f");
      problem6_0.calculateOutput("iJ");
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1678650881);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(12, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(84, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(262, problem6_0.a987727161);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(259, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1052548391);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      
      problem6_0.calculateOutput("iC");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      
      problem6_0.calculateOutput("iD");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      
      // SystemInUtil.addInputLine("#VI");
      problem6_0.calculateOutput("iJ");
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a1678650881);
      assertEquals(84, problem6_0.a1409102093);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(259, problem6_0.a2038572265);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(262, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(36, problem6_1.a1175903853);
      assertTrue(problem6_1.cf);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(14, problem6_1.a730330384);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_1.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertTrue(problem6_0.cf);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      
      int[] intArray0 = new int[7];
      intArray0[0] = 11;
      intArray0[1] = 8;
      intArray0[2] = 90;
      intArray0[3] = 13;
      intArray0[4] = 87;
      intArray0[5] = 236;
      intArray0[6] = (-123);
      problem6_0.a1479381915 = intArray0;
      // SystemInUtil.addInputLine("h");
      problem6_0.calculateOutput("iI");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1268933635);
      
      String string0 = "iD";
      problem6_0.calculateOutput("iD");
      assertEquals(10, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1248854190);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals((-8477), problem6_0.a1409102093);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-8227), problem6_0.a987727161);
      assertEquals((-24707), problem6_0.a2038572265);
      assertEquals((-6610), problem6_0.a1084416973);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(1, problem6_0.a1755002313);
      
      problem6_0.calculateOutput("iG");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(55, problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1248854190);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(167, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1678650881);
      assertEquals(261, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(112, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a846298027);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "g";
      stringArray0[1] = "iI";
      stringArray0[2] = "iI";
      stringArray0[3] = "h";
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      // SystemInUtil.addInputLine("Q");
      // SystemInUtil.addInputLine("@R/&%+s)");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertTrue(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      
      problem6_0.calculateOutput("iI");
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(253, problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(48, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(297, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a730330384);
      assertEquals(17, problem6_0.a1527522672);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(9, problem6_1.a632192596);
      assertTrue(problem6_1.cf);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(15, problem6_1.a109697372);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_1.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      int[] intArray0 = new int[9];
      // SystemInUtil.addInputLine("f");
      intArray0[0] = 2;
      // SystemInUtil.addInputLine("f");
      intArray0[2] = 347;
      // SystemInUtil.addInputLine("h");
      problem6_0.a746238037 = intArray0;
      intArray0[3] = 16;
      intArray0[4] = 50;
      problem6_0.calculateOutput("iI");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a508177696);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iF");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(4, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-14523), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-4078), problem6_0.a2038572265);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(3462, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-18119), problem6_0.a987727161);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-27744), problem6_0.a1409102093);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.a632192596 = 9;
      problem6_0.calculateOutput("iI");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6503, problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a1409102093);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(40, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(3462, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(161, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-52), problem6_0.a1084416973);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iD");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      problem6_0.calculateOutput("iD");
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      
      problem6_0.calculateOutput("iG");
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1248854190);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "g";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // SystemInUtil.addInputLine("oZ");
      stringArray0[0] = "S";
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      String string0 = "iF";
      problem6_0.calculateOutput("iE");
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      int[] intArray0 = new int[4];
      intArray0[0] = 50;
      intArray0[1] = 5;
      intArray0[2] = 7;
      intArray0[3] = 310;
      problem6_0.a203969606 = intArray0;
      problem6_0.calculateOutput("iE");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(239, problem6_0.a987727161);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(35, problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1527522672);
      assertFalse(problem6_0.cf);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(102, problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a508177696);
      
      // SystemInUtil.addInputLine("S");
      problem6_0.calculateOutput("iA");
      assertEquals((-4), problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(199, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(114, problem6_0.a987727161);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertFalse(problem6_0.cf);
      assertEquals((-84), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iF");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-46), problem6_0.a659440330);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-7855), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1527522672);
      assertFalse(problem6_0.cf);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-19666), problem6_0.a2038572265);
      assertEquals((-12845), problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-24331), problem6_0.a987727161);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(16, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iG");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-46), problem6_0.a659440330);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-7855), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1527522672);
      assertFalse(problem6_0.cf);
      assertEquals(4, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-19666), problem6_0.a2038572265);
      assertEquals((-12845), problem6_0.a1409102093);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-24331), problem6_0.a987727161);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(16, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iF");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(239, problem6_0.a987727161);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-130), problem6_0.a1084416973);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(10, problem6_0.a730439811);
      assertEquals((-46), problem6_0.a659440330);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1527522672);
      assertFalse(problem6_0.cf);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(4, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(110, problem6_0.a1409102093);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(283, problem6_0.a2038572265);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("S");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iC");
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iC");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(62, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(272, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1084416973);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(261, problem6_0.a987727161);
      assertEquals(12, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iC");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(70, problem6_0.a987727161);
      assertEquals(0, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(38, problem6_0.a1944045722);
      assertEquals(140, problem6_0.a2038572265);
      assertFalse(problem6_0.cf);
      assertEquals((-98), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.a1527522672 = (-1104);
      problem6_0.calculateOutput("iC");
      assertEquals((-7501), problem6_0.a987727161);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-1104), problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-27185), problem6_0.a1409102093);
      assertEquals(38, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals((-24778), problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-20), problem6_0.a659440330);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-2470), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      
      problem6_0.calculateOutput("iA");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(213, problem6_0.a987727161);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a508177696);
      assertEquals((-1104), problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(38, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals((-88), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(46, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(281, problem6_0.a2038572265);
      assertEquals((-20), problem6_0.a659440330);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iH");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(213, problem6_0.a987727161);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a508177696);
      assertEquals((-1104), problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(38, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals((-86), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(46, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(281, problem6_0.a2038572265);
      assertEquals((-20), problem6_0.a659440330);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iH");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(213, problem6_0.a987727161);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a508177696);
      assertEquals((-1104), problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(38, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals((-86), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(46, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(281, problem6_0.a2038572265);
      assertEquals((-20), problem6_0.a659440330);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      
      problem6_0.calculateOutput("iB");
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a508177696);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      
      // SystemInUtil.addInputLine("iB");
      problem6_0.calculateOutput("iH");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(50, problem6_0.a1491392295);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(58, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals((-13), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(219, problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      
      problem6_0.calculateOutput("iI");
      assertEquals(24, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(50, problem6_0.a1491392295);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(157, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(73, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-37), problem6_0.a1409102093);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-33), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a1527522672);
      
      problem6_0.calculateOutput("iH");
      assertEquals(24, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a730439811);
      assertEquals((-27746), problem6_0.a1409102093);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals((-17961), problem6_0.a987727161);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-12975), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(4, problem6_0.a846298027);
      assertEquals((-3328), problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-24), problem6_0.a659440330);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a1527522672);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(16, problem6_0.a659440330);
      
      problem6_0.calculateOutput("iC");
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(16, problem6_0.a659440330);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 16;
      intArray0[1] = 14;
      intArray0[2] = 5;
      intArray0[3] = 13;
      intArray0[4] = 9;
      intArray0[5] = 8;
      intArray0[6] = 9;
      intArray0[7] = 11;
      intArray0[8] = 11;
      problem6_0.a2095109485 = intArray0;
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = 236;
      // SystemInUtil.addInputLine("'[:");
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("oY");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertTrue(problem6_0.cf);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      
      problem6_0.a1268933635 = 2;
      // SystemInUtil.addInputLine("iD");
      problem6_0.calculateOutput("iD");
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iF");
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      
      // SystemInUtil.addInputLine("Current state has no transition for this input!");
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("M%Gk4Z");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.a1268933635 = 2;
      problem6_0.calculateOutput("iE");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iE");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iE");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      
      int[] intArray0 = new int[9];
      problem6_0.a1268933635 = 2;
      intArray0[1] = 11;
      intArray0[2] = 347;
      // SystemInUtil.addInputLine("h");
      problem6_0.calculateOutput("iJ");
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(172, problem6_0.a987727161);
      assertEquals(40, problem6_0.a1084416973);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a846298027);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(172, problem6_0.a987727161);
      assertEquals(40, problem6_0.a1084416973);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a508177696);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a846298027);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertTrue(problem6_0.cf);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      
      String string0 = "iC";
      problem6_0.calculateOutput("iC");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      
      String string1 = "iE";
      problem6_0.calculateOutput("iD");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      
      // SystemInUtil.addInputLine("f");
      problem6_0.calculateOutput("iE");
      assertEquals(96, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(184, problem6_0.a987727161);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-27), problem6_0.a1084416973);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(93, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(12, problem6_0.a1844564130);
      
      String string2 = "oW";
      problem6_0.a1409102093 = 15510;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("oW");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      
      problem6_0.calculateOutput("iC");
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      
      problem6_0.a1279475243 = "iC";
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = 236;
      problem6_0.calculateOutput("iG");
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a1084416973);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-21708), problem6_0.a2038572265);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals((-23465), problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(203, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      
      int[] intArray0 = new int[2];
      intArray0[0] = 3;
      problem6_0.calculateOutput("iG");
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals((-17479), problem6_0.a1409102093);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-4095), problem6_0.a987727161);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-7140), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-21708), problem6_0.a2038572265);
      assertEquals((-23465), problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(4, problem6_0.a1669668007);
      assertEquals(90, problem6_0.a1453485468);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("ou");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iC");
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.a402093159 = 5;
      problem6_0.calculateOutput("iJ");
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a402093159);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(11, problem6_1.a1052548391);
      assertTrue(problem6_1.cf);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(15, problem6_1.a109697372);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_1.calculateOutput("E4 !)c*&C$~!*KK");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      
      problem6_0.calculateOutput("iH");
      assertEquals(12, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(60, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(215, problem6_0.a987727161);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(276, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-19), problem6_0.a1084416973);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      
      String string0 = "iJ";
      problem6_0.calculateOutput("iJ");
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-14535), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals((-13585), problem6_0.a987727161);
      assertEquals(1935, problem6_0.a659440330);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals((-5172), problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-8490), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-14535), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals((-13585), problem6_0.a987727161);
      assertEquals(1935, problem6_0.a659440330);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals((-5172), problem6_0.a2038572265);
      assertEquals(18904, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-8490), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      
      // SystemInUtil.addInputLine("_c0`XX,Xs");
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("+.WJX~");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(310, problem6_0.a1003030503);
      assertTrue(problem6_0.cf);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      
      problem6_0.a1268933635 = 2;
      // SystemInUtil.addInputLine("h");
      problem6_0.calculateOutput("iJ");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(40, problem6_0.a1084416973);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(172, problem6_0.a987727161);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(347, problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(40, problem6_0.a1084416973);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(172, problem6_0.a987727161);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(347, problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      
      int[] intArray0 = new int[7];
      intArray0[0] = 12;
      intArray0[1] = 12;
      intArray0[2] = 6;
      problem6_0.a55778504 = intArray0;
      problem6_0.a203969606 = intArray0;
      String string0 = null;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iC");
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iD");
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iD");
      assertEquals(12, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(6, problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(221, problem6_0.a987727161);
      assertEquals(257, problem6_0.a2038572265);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(81, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iC");
      assertEquals(12, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(6, problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(12, problem6_0.a2118660775);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(221, problem6_0.a987727161);
      assertEquals(257, problem6_0.a2038572265);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(81, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(13, problem6_1.a311551481);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(5, problem6_1.a779607920);
      assertTrue(problem6_1.cf);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(11, problem6_1.a794870881);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(6, problem6_1.a2118660775);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_1.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      
      problem6_0.calculateOutput("iC");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      
      problem6_0.calculateOutput("iD");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      
      // SystemInUtil.addInputLine("iC");
      problem6_0.calculateOutput("iI");
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-8362), problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-6061), problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-17498), problem6_0.a2038572265);
      assertEquals((-1711), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(4, problem6_0.a846298027);
      assertEquals((-4383), problem6_0.a1175903853);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(167, problem6_0.a1453485468);
      assertEquals(2, problem6_0.a1303741660);
      
      // SystemInUtil.addInputLine("");
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      // SystemInUtil.addInputLine("f");
      intArray0[1] = 11;
      intArray0[2] = 347;
      problem6_0.a1615683779 = "u&v3ym,co";
      // SystemInUtil.addInputLine("h");
      intArray0[3] = 16;
      intArray0[4] = 50;
      intArray0[5] = 11;
      intArray0[6] = 14;
      problem6_0.calculateOutput("iB");
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-123), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(310, problem6_0.a1003030503);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-17150), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      
      problem6_0.calculateOutput("iB");
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(23576, problem6_0.a659440330);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(310, problem6_0.a1003030503);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-17150), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      
      problem6_0.calculateOutput("iD");
      assertEquals(207, problem6_0.a987727161);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(23576, problem6_0.a659440330);
      assertEquals(111, problem6_0.a1409102093);
      assertEquals((-8), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(310, problem6_0.a1003030503);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a508177696);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(234, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(9, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a1265826928);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertTrue(problem6_0.cf);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iC");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iB");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(224, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(209, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a846298027);
      assertEquals((-5), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.a1844564130 = 4367;
      problem6_0.calculateOutput("iB");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-85), problem6_0.a1084416973);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-20), problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(168, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(94, problem6_0.a987727161);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      
      String string0 = "iB";
      int[] intArray0 = new int[8];
      intArray0[0] = 50;
      intArray0[1] = 9;
      intArray0[2] = 23;
      problem6_0.calculateOutput("iC");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals((-2470), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-28), problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-7601), problem6_0.a987727161);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-21009), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-27185), problem6_0.a1409102093);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      
      String string1 = "gT\"t`g]HME";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("gT\"t`g]HME");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      
      // SystemInUtil.addInputLine((String) null);
      problem6_0.a1944045722 = (-1);
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(13, problem6_1.a311551481);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(2, problem6_1.a1303741660);
      assertTrue(problem6_1.cf);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(14, problem6_1.a730330384);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      problem6_0.calculateOutput("iC");
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-3619), problem6_0.a1409102093);
      assertEquals((-20559), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals((-14952), problem6_0.a1084416973);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-17609), problem6_0.a987727161);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals((-36), problem6_0.a659440330);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-1), problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertNotSame(problem6_0, problem6_1);
      assertFalse(problem6_0.equals((Object)problem6_1));
      
      problem6_1.calculateOutput("iB");
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(11, problem6_1.a141525412);
      assertEquals((-61), problem6_1.a402093159);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(16, problem6_1.a1265826928);
      assertFalse(problem6_1.cf);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(2, problem6_1.a1268933635);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(14, problem6_1.a730330384);
      assertNotSame(problem6_1, problem6_0);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.calculateOutput("iC");
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      
      problem6_0.a1084416973 = 7008;
      problem6_0.a402093159 = 5;
      // SystemInUtil.addInputLine("h");
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iC");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      
      int[] intArray0 = new int[9];
      // SystemInUtil.addInputLine("f");
      intArray0[0] = 2;
      // SystemInUtil.addInputLine("f");
      intArray0[2] = 347;
      // SystemInUtil.addInputLine("h");
      problem6_0.a927237116 = 16;
      intArray0[5] = (-113);
      intArray0[6] = 14;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iJ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertTrue(problem6_0.cf);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iC");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.a1052548391 = (-29251);
      problem6_0.calculateOutput("iD");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals((-29251), problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      int[] intArray0 = new int[4];
      intArray0[0] = 390;
      intArray0[1] = 13;
      intArray0[2] = 12;
      intArray0[3] = 36;
      problem6_0.a203969606 = intArray0;
      int[] intArray1 = new int[1];
      assertFalse(intArray1.equals((Object)intArray0));
      
      intArray1[0] = 16;
      problem6_0.a2095109485 = intArray1;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("hLI!\"");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      // SystemInUtil.addInputLine("f");
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a794870881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.a1003030503 = 90;
      problem6_0.a402093159 = 90;
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a794870881);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(90, problem6_0.a1003030503);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a402093159);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iB");
      assertEquals(11, problem6_0.a794870881);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(90, problem6_0.a1003030503);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a402093159);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(13, problem6_1.a508177696);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(2, problem6_1.a1303741660);
      assertTrue(problem6_1.cf);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(7, problem6_1.a1694888134);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // SystemInUtil.addInputLine("iC");
      // Undeclared exception!
      try { 
        problem6_1.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertTrue(problem6_0.cf);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iE");
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.a2038572265 = 230;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iC");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertTrue(problem6_0.cf);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      
      String string0 = "iC";
      problem6_0.calculateOutput("iC");
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      
      int[] intArray0 = new int[6];
      intArray0[0] = 5;
      intArray0[1] = 50;
      intArray0[2] = 2;
      intArray0[3] = 5;
      intArray0[5] = 2;
      problem6_0.a1004251640 = intArray0;
      problem6_0.a2038572265 = 9;
      problem6_0.a402093159 = 90;
      String string1 = "";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      
      problem6_0.calculateOutput("iG");
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      
      String string0 = "iA";
      problem6_0.calculateOutput("iA");
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iG");
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iG");
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-8091), problem6_0.a2038572265);
      assertEquals((-8006), problem6_0.a1360708750);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a730330384);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iE");
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-8091), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-8006), problem6_0.a1360708750);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-17021), problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-1520), problem6_0.a1084416973);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(4, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-17614), problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(4, problem6_0.a1669668007);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // SystemInUtil.addInputLine("oZ");
      stringArray0[0] = "S";
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertTrue(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      
      String string0 = "iE";
      problem6_0.calculateOutput("iE");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(347, problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      
      String string1 = "iA";
      int[] intArray0 = new int[4];
      intArray0[0] = 50;
      intArray0[1] = 5;
      intArray0[2] = 7;
      intArray0[3] = 310;
      problem6_0.a110519328 = "";
      problem6_0.a987727161 = 7;
      problem6_0.a203969606 = intArray0;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertTrue(problem6_0.cf);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.calculateOutput("iG");
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(347, problem6_0.a1360708750);
      assertFalse(problem6_0.cf);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      
      // SystemInUtil.addInputLine("e");
      problem6_0.calculateOutput("iG");
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a730330384);
      assertFalse(problem6_0.cf);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.calculateOutput("iA");
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a730330384);
      assertFalse(problem6_0.cf);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      
      String string0 = "iC";
      // SystemInUtil.addInputLine("h");
      problem6_0.a241491388 = "iC";
      // SystemInUtil.addInputLine("iA");
      String string1 = "iF";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iC");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.calculateOutput("iG");
      assertEquals(6, problem6_0.a846298027);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(44, problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.calculateOutput("iH");
      assertEquals(6, problem6_0.a846298027);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(44, problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.calculateOutput("iH");
      assertEquals(6, problem6_0.a846298027);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(44, problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.calculateOutput("iB");
      assertEquals(6, problem6_0.a846298027);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(44, problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-25185), problem6_0.a2038572265);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals((-7562), problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      
      problem6_0.calculateOutput("iH");
      assertEquals(4, problem6_0.a846298027);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1265826928);
      assertEquals(4, problem6_0.a1669668007);
      assertEquals((-7071), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(12, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a632192596);
      assertEquals((-6947), problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-25185), problem6_0.a2038572265);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals((-8480), problem6_0.a987727161);
      assertEquals((-7562), problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      
      // SystemInUtil.addInputLine("f");
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(5, problem6_1.a927237116);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(2, problem6_1.a1303741660);
      assertTrue(problem6_1.cf);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(11, problem6_1.a141525412);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      Problem6 problem6_2 = new Problem6();
      assertNotNull(problem6_2);
      assertEquals(14, problem6_2.a1248854190);
      assertEquals(36, problem6_2.a1175903853);
      assertEquals(90, problem6_2.a1453485468);
      assertEquals(5, problem6_2.a1268933635);
      assertEquals(27, problem6_2.a1409102093);
      assertEquals(6, problem6_2.a2118660775);
      assertEquals(11, problem6_2.a141525412);
      assertEquals(7, problem6_2.a1694888134);
      assertEquals(5, problem6_2.a846298027);
      assertEquals((-105), problem6_2.a402093159);
      assertEquals(50, problem6_2.a1491392295);
      assertEquals(11, problem6_2.a1844564130);
      assertEquals(141, problem6_2.a554869193);
      assertEquals(201, problem6_2.a2038572265);
      assertEquals(236, problem6_2.a1944045722);
      assertEquals(16, problem6_2.a1265826928);
      assertEquals(5, problem6_2.a927237116);
      assertEquals(8, problem6_2.a730439811);
      assertEquals(16, problem6_2.a659440330);
      assertEquals((-123), problem6_2.a1084416973);
      assertEquals(46, problem6_2.a987727161);
      assertEquals(2, problem6_2.a1755002313);
      assertEquals(9, problem6_2.a1669668007);
      assertEquals(14, problem6_2.a730330384);
      assertEquals(13, problem6_2.a508177696);
      assertEquals(8, problem6_2.a1678650881);
      assertEquals(11, problem6_2.a794870881);
      assertEquals(9, problem6_2.a632192596);
      assertTrue(problem6_2.cf);
      assertEquals(5, problem6_2.a779607920);
      assertEquals(11, problem6_2.a1052548391);
      assertEquals(310, problem6_2.a1003030503);
      assertEquals(2, problem6_2.a1303741660);
      assertEquals(347, problem6_2.a1360708750);
      assertEquals(17, problem6_2.a1527522672);
      assertEquals(9, problem6_2.a261449517);
      assertEquals(15, problem6_2.a109697372);
      assertEquals(13, problem6_2.a311551481);
      assertFalse(problem6_2.equals((Object)problem6_0));
      assertFalse(problem6_2.equals((Object)problem6_1));
      
      // Undeclared exception!
      try { 
        problem6_2.calculateOutput(")wV.G#,");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertTrue(problem6_0.cf);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iC");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iD");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      // SystemInUtil.addInputLine("f");
      problem6_0.calculateOutput("iF");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      // SystemInUtil.addInputLine("e");
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertTrue(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iB");
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a1678650881);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      
      // SystemInUtil.addInputLine("iB");
      problem6_0.a987727161 = 3221;
      problem6_0.calculateOutput("iH");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(232, problem6_0.a987727161);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1678650881);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(58, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a261449517);
      assertEquals((-13), problem6_0.a1084416973);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      
      // SystemInUtil.addInputLine("g");
      problem6_0.calculateOutput("iI");
      assertEquals(24, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(121, problem6_0.a2038572265);
      assertEquals((-86), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a1678650881);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(78, problem6_0.a987727161);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals((-18), problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iH");
      assertEquals((-12975), problem6_0.a1084416973);
      assertEquals(24, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-19602), problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-3328), problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a846298027);
      assertEquals((-27746), problem6_0.a1409102093);
      assertEquals((-24), problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a794870881);
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      
      int[] intArray0 = new int[9];
      problem6_0.a1268933635 = 2;
      intArray0[2] = 347;
      problem6_0.calculateOutput("iG");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // SystemInUtil.addInputLine("oZ");
      stringArray0[0] = "S";
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertTrue(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iE");
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1268933635);
      
      int[] intArray0 = new int[4];
      intArray0[0] = 50;
      problem6_0.a1580572397 = "S";
      intArray0[1] = 5;
      intArray0[2] = 7;
      intArray0[3] = 310;
      problem6_0.a203969606 = intArray0;
      problem6_0.calculateOutput("iE");
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(7, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(35, problem6_0.a1084416973);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(102, problem6_0.a1409102093);
      assertEquals(239, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      
      // SystemInUtil.addInputLine("S");
      problem6_0.calculateOutput("iA");
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(7, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-84), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(114, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(199, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-4), problem6_0.a1409102093);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iF");
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-7855), problem6_0.a1084416973);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals((-46), problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-19666), problem6_0.a2038572265);
      assertEquals((-12845), problem6_0.a1409102093);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-24331), problem6_0.a987727161);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iD");
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(71, problem6_0.a987727161);
      assertEquals(7, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(138, problem6_0.a2038572265);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals((-46), problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals((-128), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iE");
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(71, problem6_0.a987727161);
      assertEquals(7, problem6_0.a1527522672);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(138, problem6_0.a2038572265);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals((-46), problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(40, problem6_0.a1944045722);
      assertEquals((-128), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(14, problem6_1.a730330384);
      assertTrue(problem6_1.cf);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(13, problem6_1.a508177696);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(5, problem6_1.a846298027);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(50, problem6_1.a1491392295);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      problem6_1.a2118660775 = (-46);
      // Undeclared exception!
      try { 
        problem6_1.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "S";
      // SystemInUtil.addInputLine("S");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iF");
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a311551481);
      
      int[] intArray0 = new int[6];
      intArray0[0] = 2;
      intArray0[1] = 9;
      intArray0[2] = 17;
      problem6_0.a1166603901 = intArray0;
      intArray0[3] = 13;
      intArray0[4] = 5;
      intArray0[5] = 310;
      problem6_0.a2095109485 = intArray0;
      problem6_0.calculateOutput("iE");
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(17, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(102, problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(217, problem6_0.a987727161);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(36, problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iE");
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(18, problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(132, problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(40, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-126), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(173, problem6_0.a2038572265);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iE");
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-7747), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals((-2513), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-11), problem6_0.a659440330);
      assertEquals((-3696), problem6_0.a987727161);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(40, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-24448), problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iF");
      assertEquals(10, problem6_0.a632192596);
      assertEquals((-100), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(17, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-11), problem6_0.a659440330);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(40, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(118, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(275, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("jgY\"dO!*W{R~h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertTrue(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      
      int[] intArray0 = new int[9];
      // SystemInUtil.addInputLine("f");
      intArray0[0] = 2;
      // SystemInUtil.addInputLine("f");
      intArray0[2] = 347;
      // SystemInUtil.addInputLine("h");
      problem6_0.a746238037 = intArray0;
      intArray0[3] = 16;
      problem6_0.calculateOutput("iF");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertFalse(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iI");
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertFalse(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iF");
      assertEquals((-18468), problem6_0.a987727161);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-18123), problem6_0.a1084416973);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(4, problem6_0.a927237116);
      assertEquals((-16972), problem6_0.a1409102093);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-11), problem6_0.a659440330);
      assertFalse(problem6_0.cf);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals((-24874), problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(5, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      
      problem6_0.a632192596 = 9;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iI");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertTrue(problem6_0.cf);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      
      String string0 = ":tO#_%B0}u}QVk";
      // SystemInUtil.addInputLine(":tO#_%B0}u}QVk");
      problem6_0.calculateOutput("iD");
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      
      problem6_0.calculateOutput("iD");
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iB");
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(93, problem6_0.a1409102093);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(207, problem6_0.a987727161);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(264, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-7), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(7, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(16, problem6_0.a311551481);
      
      // SystemInUtil.addInputLine("h");
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertTrue(problem6_0.cf);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      
      // SystemInUtil.addInputLine("f");
      problem6_0.calculateOutput("iC");
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.a1003030503 = 90;
      problem6_0.a402093159 = 90;
      problem6_0.calculateOutput("iC");
      assertEquals(8, problem6_0.a1268933635);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(90, problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iB");
      assertEquals(8, problem6_0.a1268933635);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(90, problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(9, problem6_1.a632192596);
      assertTrue(problem6_1.cf);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(13, problem6_1.a311551481);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      problem6_0.calculateOutput("iD");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-5755), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals((-27748), problem6_0.a2038572265);
      assertEquals((-8244), problem6_0.a1409102093);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-24766), problem6_0.a987727161);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(18284, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(90, problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertNotSame(problem6_0, problem6_1);
      assertFalse(problem6_0.equals((Object)problem6_1));
      
      // SystemInUtil.addInputLine("h");
      // Undeclared exception!
      try { 
        problem6_1.calculateOutput("NYY6g4`m-}J?L|S");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a794870881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      
      String string0 = "iE";
      int[] intArray0 = new int[4];
      intArray0[0] = (-1644);
      intArray0[1] = 50;
      intArray0[2] = 16;
      intArray0[3] = 16;
      problem6_0.a424910590 = intArray0;
      problem6_0.calculateOutput("iD");
      assertEquals(11, problem6_0.a794870881);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(201, problem6_0.a2038572265);
      
      problem6_0.calculateOutput("iE");
      assertEquals(184, problem6_0.a987727161);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a730330384);
      assertEquals(96, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(12, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals((-27), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(93, problem6_0.a1491392295);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iC");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      
      // SystemInUtil.addInputLine("i");
      // SystemInUtil.addInputLine("pQ>");
      // SystemInUtil.addInputLine("f");
      problem6_0.calculateOutput("iJ");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(13, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(275, problem6_0.a2038572265);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(239, problem6_0.a987727161);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(38, problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(83, problem6_0.a1409102093);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(13, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(275, problem6_0.a2038572265);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(239, problem6_0.a987727161);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(314, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(38, problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(83, problem6_0.a1409102093);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      
      problem6_0.calculateOutput("iB");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(158, problem6_0.a2038572265);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-54), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(314, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(137, problem6_0.a987727161);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("XjKx__~?y9@N");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(27, problem6_0.a1409102093);
      assertTrue(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      int[] intArray0 = new int[9];
      problem6_0.a1268933635 = 2;
      intArray0[1] = 11;
      intArray0[2] = 347;
      // SystemInUtil.addInputLine("h");
      problem6_0.calculateOutput("iJ");
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(172, problem6_0.a987727161);
      assertEquals(40, problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iF");
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(172, problem6_0.a987727161);
      assertEquals(40, problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      
      // SystemInUtil.addInputLine("e");
      problem6_0.calculateOutput("iF");
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(172, problem6_0.a987727161);
      assertEquals(40, problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.a730439811 = (-12437164);
      problem6_0.calculateOutput("iJ");
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(172, problem6_0.a987727161);
      assertEquals(40, problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-12437164), problem6_0.a730439811);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iF");
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(172, problem6_0.a987727161);
      assertEquals(40, problem6_0.a1084416973);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals((-12437164), problem6_0.a730439811);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      
      int[] intArray0 = new int[7];
      intArray0[0] = 14;
      // SystemInUtil.addInputLine("f");
      intArray0[1] = 11;
      intArray0[2] = 347;
      problem6_0.a1615683779 = "u&v3ym,co";
      // SystemInUtil.addInputLine("h");
      problem6_0.a311551481 = 16;
      intArray0[4] = 50;
      intArray0[5] = 11;
      problem6_0.a367449225 = intArray0;
      intArray0[6] = 11;
      problem6_0.calculateOutput("iB");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(10, problem6_0.a109697372);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a632192596);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals((-17150), problem6_0.a1084416973);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a927237116);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      
      problem6_0.calculateOutput("iB");
      assertEquals(10, problem6_0.a109697372);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a632192596);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals(23576, problem6_0.a659440330);
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals((-17150), problem6_0.a1084416973);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a927237116);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a1268933635);
      
      problem6_0.calculateOutput("iD");
      assertEquals(10, problem6_0.a109697372);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(207, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(111, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-8), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(23576, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1303741660);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a508177696);
      assertEquals(234, problem6_0.a2038572265);
      assertEquals((-61), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(3, problem6_0.a1755002313);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("u&v3ym,co");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      
      String string0 = "iG";
      problem6_0.calculateOutput("iG");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(122, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(274, problem6_0.a987727161);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(44, problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(12, problem6_0.a794870881);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(269, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      
      String string1 = "iH";
      problem6_0.a1409102093 = 8;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iH");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.calculateOutput("iB");
      assertEquals(10, problem6_0.a261449517);
      assertEquals(69, problem6_0.a1409102093);
      assertFalse(problem6_0.cf);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(209, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals((-5), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(224, problem6_0.a2038572265);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.calculateOutput("iB");
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals((-20), problem6_0.a1409102093);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(94, problem6_0.a987727161);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-85), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(168, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      int[] intArray0 = new int[8];
      intArray0[0] = 50;
      problem6_0.calculateOutput("iB");
      assertEquals(8, problem6_0.a261449517);
      assertEquals(4, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals((-10557), problem6_0.a1409102093);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals((-55), problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals((-8688), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-15475), problem6_0.a987727161);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-17811), problem6_0.a2038572265);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.calculateOutput("iI");
      assertEquals(10, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(259, problem6_0.a987727161);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals((-55), problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(56, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(271, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(10, problem6_0.a730439811);
      assertEquals((-130), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertTrue(problem6_1.cf);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(9, problem6_1.a1669668007);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_1.calculateOutput("hkC");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      
      problem6_0.a109697372 = 5;
      problem6_0.a1580572397 = "lq]/TMj>SQE7xyD8p";
      problem6_0.calculateOutput("iJ");
      assertEquals(4, problem6_0.a846298027);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-16584), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      
      String string0 = "iA";
      problem6_0.calculateOutput("iA");
      assertEquals(4, problem6_0.a846298027);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8462, problem6_0.a659440330);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-16584), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a1268933635);
      
      // SystemInUtil.addInputLine("gO|EGp_");
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertTrue(problem6_0.cf);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-105), problem6_0.a402093159);
      
      problem6_0.calculateOutput("iD");
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-105), problem6_0.a402093159);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(5, problem6_1.a779607920);
      assertTrue(problem6_1.cf);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(13, problem6_1.a311551481);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(90, problem6_1.a1453485468);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      problem6_0.calculateOutput("iC");
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-105), problem6_0.a402093159);
      assertNotSame(problem6_0, problem6_1);
      assertFalse(problem6_0.equals((Object)problem6_1));
      
      problem6_1.a554869193 = 7;
      String string0 = "iE";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      
      int[] intArray0 = new int[7];
      intArray0[0] = 310;
      intArray0[1] = 11;
      intArray0[2] = 9;
      intArray0[3] = 11;
      intArray0[5] = 11;
      intArray0[6] = 473;
      problem6_0.a1004251640 = intArray0;
      problem6_0.calculateOutput("iC");
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1678650881);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.a109697372 = 5;
      problem6_0.a1580572397 = "lq]/TMj>SQE7xyD8p";
      problem6_0.calculateOutput("iJ");
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-16584), problem6_0.a1084416973);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a794870881);
      
      String string0 = "iA";
      problem6_0.calculateOutput("iA");
      assertEquals(8462, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-16584), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1248854190);
      
      // SystemInUtil.addInputLine("gO|EGp_");
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      
      String string0 = "iC";
      problem6_0.calculateOutput("iC");
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      
      problem6_0.calculateOutput("iD");
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a311551481);
      
      // SystemInUtil.addInputLine("f");
      problem6_0.a1694888134 = (-6254807);
      problem6_0.calculateOutput("iF");
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-6254807), problem6_0.a1694888134);
      assertEquals(12, problem6_0.a311551481);
      
      String string1 = "oY";
      problem6_0.calculateOutput("iC");
      assertEquals(13, problem6_0.a508177696);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-10900), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(16252, problem6_0.a659440330);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a1844564130);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-18682), problem6_0.a1409102093);
      assertEquals((-24320), problem6_0.a2038572265);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-17045), problem6_0.a987727161);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-6254807), problem6_0.a1694888134);
      assertEquals(12, problem6_0.a311551481);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput(" $i/1|:j_FtB");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.a1268933635 = 2;
      // SystemInUtil.addInputLine("");
      // SystemInUtil.addInputLine((String) null);
      problem6_0.calculateOutput("iB");
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // SystemInUtil.addInputLine("Q");
      // SystemInUtil.addInputLine("@R/&%+s)");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(310, problem6_0.a1003030503);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iI");
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(7, problem6_0.a1248854190);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iB");
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(7, problem6_0.a1248854190);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertTrue(problem6_0.cf);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      int[] intArray0 = new int[7];
      intArray0[0] = 310;
      intArray0[1] = 11;
      intArray0[2] = 9;
      intArray0[3] = 11;
      intArray0[4] = 7;
      intArray0[5] = 11;
      intArray0[6] = 473;
      problem6_0.a1004251640 = intArray0;
      problem6_0.calculateOutput("iC");
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.a109697372 = 5;
      problem6_0.a1580572397 = "lq]/TMj>SQE7xyD8p";
      problem6_0.calculateOutput("iJ");
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-16584), problem6_0.a1084416973);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iA");
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8462, problem6_0.a659440330);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-16584), problem6_0.a1084416973);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a1248854190);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8462, problem6_0.a659440330);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a109697372);
      assertEquals((-34), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(0, problem6_0.a1409102093);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(108, problem6_0.a987727161);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(137, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      // SystemInUtil.addInputLine("S");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "S";
      // SystemInUtil.addInputLine("S");
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      
      problem6_0.calculateOutput("iF");
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-80), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      
      int[] intArray0 = new int[6];
      intArray0[1] = 9;
      intArray0[2] = 17;
      intArray0[3] = 13;
      intArray0[4] = 5;
      intArray0[5] = 310;
      problem6_0.a2095109485 = intArray0;
      problem6_0.a1084416973 = 910;
      // SystemInUtil.addInputLine("&!~TanZ^?m");
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("S");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      
      problem6_0.calculateOutput("iA");
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(46, problem6_0.a987727161);
      
      problem6_0.calculateOutput("iG");
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(241, problem6_0.a987727161);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(98, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(213, problem6_0.a1360708750);
      assertEquals((-16), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(241, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(17, problem6_0.a1527522672);
      
      problem6_0.calculateOutput("iA");
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertFalse(problem6_0.cf);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(241, problem6_0.a987727161);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(98, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a1527522672);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(213, problem6_0.a1360708750);
      assertEquals((-16), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(241, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(201, problem6_1.a2038572265);
      assertTrue(problem6_1.cf);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(14, problem6_1.a730330384);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_1.calculateOutput("h");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertTrue(problem6_0.cf);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iC");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iB");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-5), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(209, problem6_0.a987727161);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(224, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iB");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(94, problem6_0.a987727161);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(168, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-85), problem6_0.a1084416973);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-20), problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      
      int[] intArray0 = new int[8];
      intArray0[0] = 50;
      problem6_0.calculateOutput("iB");
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-17811), problem6_0.a2038572265);
      assertEquals((-15475), problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-55), problem6_0.a659440330);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-10557), problem6_0.a1409102093);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a927237116);
      assertEquals((-8688), problem6_0.a1084416973);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iI");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(259, problem6_0.a987727161);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-130), problem6_0.a1084416973);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals((-55), problem6_0.a659440330);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(56, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(271, problem6_0.a2038572265);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iI");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(259, problem6_0.a987727161);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-76), problem6_0.a1084416973);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals((-55), problem6_0.a659440330);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(56, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(271, problem6_0.a2038572265);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iE");
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(259, problem6_0.a987727161);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(15, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals((-55), problem6_0.a659440330);
      assertEquals((-101), problem6_0.a1084416973);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(36, problem6_0.a1175903853);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(56, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(271, problem6_0.a2038572265);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a779607920);
      assertTrue(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      
      String string0 = "iC";
      problem6_0.calculateOutput("iC");
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      
      problem6_0.calculateOutput("iA");
      assertEquals(120, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(227, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(281, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-2), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a141525412);
      
      problem6_0.calculateOutput("iC");
      assertEquals((-58), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(70, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-25), problem6_0.a1409102093);
      assertEquals(164, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-12680), problem6_0.a2038572265);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-15228), problem6_0.a1409102093);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(29, problem6_0.a1944045722);
      assertEquals((-10931), problem6_0.a987727161);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(9065, problem6_0.a1175903853);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-22321), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      
      problem6_0.a1084416973 = 270;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      
      String string0 = "iC";
      problem6_0.calculateOutput("iC");
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      
      problem6_0.a987727161 = 3130;
      String string1 = "iE";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iD");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      
      int[] intArray0 = new int[8];
      intArray0[0] = 15;
      intArray0[1] = 13;
      intArray0[2] = 13;
      intArray0[3] = 11;
      intArray0[4] = 90;
      intArray0[6] = 9;
      intArray0[7] = 50;
      problem6_0.a462761684 = intArray0;
      problem6_0.calculateOutput("iA");
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(10, problem6_0.a109697372);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-18208), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iJ");
      assertEquals(10, problem6_0.a109697372);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(15829, problem6_0.a659440330);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-18208), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iC");
      assertEquals(10, problem6_0.a109697372);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(19230, problem6_0.a1175903853);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(15829, problem6_0.a659440330);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-18208), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iC");
      assertEquals(10, problem6_0.a109697372);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a508177696);
      assertEquals((-2087), problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(69, problem6_0.a1175903853);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-22751), problem6_0.a1409102093);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals((-28600), problem6_0.a2038572265);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(15829, problem6_0.a659440330);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-18208), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
      
      problem6_0.calculateOutput("iE");
      assertEquals(115, problem6_0.a1409102093);
      assertEquals(10, problem6_0.a109697372);
      assertEquals(268, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(24, problem6_0.a1084416973);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(69, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(10, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(256, problem6_0.a987727161);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(15, problem6_0.a730330384);
      assertEquals((-18), problem6_0.a402093159);
      assertEquals(15829, problem6_0.a659440330);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(15, problem6_0.a1052548391);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(13, problem6_0.a311551481);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 14;
      intArray0[2] = 310;
      intArray0[3] = 13;
      intArray0[4] = 9;
      intArray0[5] = 90;
      intArray0[6] = 7;
      intArray0[7] = 6;
      intArray0[8] = 17;
      problem6_0.a1302722907 = intArray0;
      problem6_0.calculateOutput("iC");
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertFalse(problem6_0.cf);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iB");
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(224, problem6_0.a2038572265);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(209, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-5), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(6, problem6_0.a927237116);
      
      problem6_0.calculateOutput("iB");
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(168, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(94, problem6_0.a987727161);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals((-85), problem6_0.a1084416973);
      assertEquals((-20), problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      
      String string0 = "iB";
      int[] intArray1 = new int[8];
      assertFalse(intArray1.equals((Object)intArray0));
      
      intArray1[0] = 50;
      intArray1[1] = 9;
      intArray1[2] = 23;
      problem6_0.calculateOutput("iC");
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals((-27185), problem6_0.a1409102093);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-7601), problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-21009), problem6_0.a2038572265);
      assertEquals((-2470), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(23, problem6_0.a1944045722);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-28), problem6_0.a659440330);
      
      String string1 = "iE";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iC");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      
      String string0 = null;
      // SystemInUtil.addInputLine((String) null);
      problem6_0.a1944045722 = (-1);
      int[] intArray0 = new int[8];
      intArray0[0] = 7;
      intArray0[1] = 2;
      intArray0[2] = 90;
      intArray0[3] = 1406;
      intArray0[4] = 310;
      intArray0[5] = 9;
      intArray0[6] = 310;
      intArray0[7] = 9;
      problem6_0.a2095109485 = intArray0;
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(13, problem6_1.a508177696);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(50, problem6_1.a1491392295);
      assertTrue(problem6_1.cf);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(5, problem6_1.a927237116);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(16, problem6_1.a1265826928);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(15, problem6_1.a109697372);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(7, problem6_1.a1694888134);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iC");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertTrue(problem6_0.cf);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      String string0 = "iE";
      problem6_0.calculateOutput("iD");
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.a659440330 = 167;
      problem6_0.calculateOutput("iC");
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(167, problem6_0.a659440330);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      
      problem6_0.calculateOutput("iE");
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a927237116);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(173, problem6_0.a1175903853);
      assertEquals(12, problem6_0.a1678650881);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-6510), problem6_0.a2038572265);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(167, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-29603), problem6_0.a1084416973);
      assertEquals((-4700), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-1828), problem6_0.a987727161);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(13, problem6_0.a508177696);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      
      String string0 = "iD";
      problem6_0.calculateOutput("iD");
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(9, problem6_0.a261449517);
      
      // SystemInUtil.addInputLine("iC");
      problem6_0.calculateOutput("iI");
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals((-17498), problem6_0.a2038572265);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-4383), problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-8362), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals((-1711), problem6_0.a1084416973);
      assertEquals(167, problem6_0.a1453485468);
      assertEquals((-6061), problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      
      problem6_0.calculateOutput("iI");
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(198, problem6_0.a987727161);
      assertEquals(112, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(277, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(12, problem6_0.a508177696);
      assertEquals(20, problem6_0.a1084416973);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-4383), problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(167, problem6_0.a1453485468);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1844564130);
      
      problem6_0.calculateOutput("iI");
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(198, problem6_0.a987727161);
      assertEquals(112, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(277, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(12, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a632192596);
      assertEquals((-59), problem6_0.a1084416973);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-4383), problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(10, problem6_0.a730439811);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(167, problem6_0.a1453485468);
      assertEquals(15, problem6_0.a508177696);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a1052548391);
      assertFalse(problem6_0.cf);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1844564130);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "g";
      // SystemInUtil.addInputLine("i");
      stringArray0[1] = "h";
      stringArray0[3] = "f";
      stringArray0[4] = "g";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("S'`n8w8J.9lBDU U");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      
      String string0 = "iC";
      problem6_0.calculateOutput("iC");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals((-123), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(14, problem6_0.a730330384);
      
      int[] intArray0 = new int[4];
      problem6_0.a1844564130 = 2225;
      problem6_0.a1370180893 = intArray0;
      intArray0[0] = 17;
      intArray0[1] = 236;
      intArray0[2] = 310;
      intArray0[3] = 7;
      problem6_0.a815477271 = intArray0;
      String string1 = "iE";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iD");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertTrue(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.calculateOutput("iC");
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertFalse(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.a1003030503 = 236;
      problem6_0.a402093159 = 236;
      // SystemInUtil.addInputLine("kWTu=w!?");
      problem6_0.calculateOutput("iH");
      assertEquals((-27231), problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertFalse(problem6_0.cf);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(236, problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a730439811);
      assertEquals((-13586), problem6_0.a1084416973);
      assertEquals(6, problem6_0.a1268933635);
      assertEquals(24, problem6_0.a659440330);
      assertEquals(8, problem6_0.a261449517);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals((-2970), problem6_0.a987727161);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a846298027);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-14746), problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(14, problem6_0.a730330384);
      
      problem6_0.a1084416973 = 236;
      String string0 = "iD";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("3");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a927237116);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(7, problem6_0.a1694888134);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      // SystemInUtil.addInputLine("f");
      intArray0[1] = 11;
      intArray0[2] = 347;
      // SystemInUtil.addInputLine("h");
      intArray0[3] = 16;
      intArray0[4] = 50;
      intArray0[5] = (-113);
      intArray0[6] = 14;
      int[] intArray1 = new int[2];
      assertFalse(intArray1.equals((Object)intArray0));
      
      intArray1[0] = 2;
      intArray1[1] = 5;
      problem6_0.a273195999 = intArray1;
      problem6_0.a359661274 = problem6_0.a182932449;
      // SystemInUtil.addInputLine("");
      intArray0[7] = (-1689);
      intArray0[8] = 16;
      problem6_0.a1302722907 = intArray0;
      problem6_0.calculateOutput("iJ");
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(275, problem6_0.a2038572265);
      assertEquals(239, problem6_0.a987727161);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(38, problem6_0.a1084416973);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(13, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(83, problem6_0.a1409102093);
      
      String[] stringArray0 = new String[12];
      problem6_0.calculateOutput("iI");
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals(4, problem6_0.a927237116);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(110, problem6_0.a1175903853);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-16180), problem6_0.a1409102093);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals((-17730), problem6_0.a1084416973);
      assertEquals(4, problem6_0.a779607920);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(1, problem6_0.a1268933635);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-18846), problem6_0.a2038572265);
      assertEquals(13, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(2, problem6_0.a1303741660);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-19132), problem6_0.a987727161);
      assertEquals(10, problem6_0.a794870881);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(4, problem6_0.a846298027);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      
      problem6_0.calculateOutput("iC");
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a779607920);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      
      problem6_0.a1003030503 = 90;
      problem6_0.a730330384 = 428;
      problem6_0.calculateOutput("iC");
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(7, problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(62, problem6_0.a1409102093);
      assertEquals(16, problem6_0.a508177696);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(90, problem6_0.a1003030503);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(261, problem6_0.a987727161);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(272, problem6_0.a2038572265);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(428, problem6_0.a730330384);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a1052548391);
      
      problem6_0.calculateOutput("iF");
      assertEquals((-144), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals((-18), problem6_0.a1409102093);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(105, problem6_0.a987727161);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(182, problem6_0.a2038572265);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(27, problem6_0.a1944045722);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(90, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(428, problem6_0.a730330384);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      
      // SystemInUtil.addInputLine("iC");
      problem6_0.a1615683779 = "H35VsBq[pbXzmGd#=";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.calculateOutput("iC");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(15, problem6_0.a109697372);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.a1003030503 = 90;
      problem6_0.a730330384 = 428;
      problem6_0.calculateOutput("iC");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(62, problem6_0.a1409102093);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(261, problem6_0.a987727161);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1084416973);
      assertEquals(272, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(428, problem6_0.a730330384);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      
      problem6_0.calculateOutput("iF");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(182, problem6_0.a2038572265);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(105, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals((-18), problem6_0.a1409102093);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(16, problem6_0.a508177696);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals((-144), problem6_0.a1084416973);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(428, problem6_0.a730330384);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      
      // SystemInUtil.addInputLine("iC");
      problem6_0.a1615683779 = "f";
      problem6_0.calculateOutput("iG");
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1944045722);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(93, problem6_0.a1409102093);
      assertEquals((-3544), problem6_0.a1360708750);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals((-2977), problem6_0.a2038572265);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals((-1), problem6_0.a1084416973);
      assertEquals(11, problem6_0.a508177696);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(90, problem6_0.a1003030503);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(428, problem6_0.a730330384);
      assertEquals(165, problem6_0.a987727161);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(50, problem6_0.a1491392295);
      
      Problem6 problem6_1 = new Problem6();
      assertNotNull(problem6_1);
      assertEquals(27, problem6_1.a1409102093);
      assertEquals(141, problem6_1.a554869193);
      assertEquals(11, problem6_1.a1052548391);
      assertEquals(9, problem6_1.a261449517);
      assertEquals(5, problem6_1.a846298027);
      assertEquals(8, problem6_1.a1678650881);
      assertEquals(14, problem6_1.a1248854190);
      assertEquals(14, problem6_1.a730330384);
      assertEquals(5, problem6_1.a779607920);
      assertEquals(13, problem6_1.a311551481);
      assertEquals(9, problem6_1.a632192596);
      assertEquals(90, problem6_1.a1453485468);
      assertEquals(310, problem6_1.a1003030503);
      assertEquals(5, problem6_1.a927237116);
      assertEquals(2, problem6_1.a1303741660);
      assertEquals(15, problem6_1.a109697372);
      assertEquals((-123), problem6_1.a1084416973);
      assertEquals(347, problem6_1.a1360708750);
      assertEquals(13, problem6_1.a508177696);
      assertTrue(problem6_1.cf);
      assertEquals(2, problem6_1.a1755002313);
      assertEquals(46, problem6_1.a987727161);
      assertEquals(17, problem6_1.a1527522672);
      assertEquals(50, problem6_1.a1491392295);
      assertEquals(16, problem6_1.a659440330);
      assertEquals(11, problem6_1.a794870881);
      assertEquals(7, problem6_1.a1694888134);
      assertEquals(6, problem6_1.a2118660775);
      assertEquals(11, problem6_1.a1844564130);
      assertEquals(236, problem6_1.a1944045722);
      assertEquals((-105), problem6_1.a402093159);
      assertEquals(201, problem6_1.a2038572265);
      assertEquals(9, problem6_1.a1669668007);
      assertEquals(11, problem6_1.a141525412);
      assertEquals(5, problem6_1.a1268933635);
      assertEquals(8, problem6_1.a730439811);
      assertEquals(36, problem6_1.a1175903853);
      assertEquals(16, problem6_1.a1265826928);
      assertFalse(problem6_1.equals((Object)problem6_0));
      
      // Undeclared exception!
      try { 
        problem6_1.calculateOutput("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertTrue(problem6_0.cf);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      
      int[] intArray0 = new int[9];
      problem6_0.a1268933635 = 2;
      intArray0[2] = 347;
      problem6_0.calculateOutput("iG");
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-123), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      
      problem6_0.a1360708750 = 347;
      problem6_0.calculateOutput("iC");
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-123), problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      
      // SystemInUtil.addInputLine("");
      problem6_0.calculateOutput("iJ");
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(10, problem6_0.a508177696);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(6, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a779607920);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(172, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(40, problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      
      problem6_0.calculateOutput("iE");
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(10, problem6_0.a508177696);
      assertEquals(22, problem6_0.a1409102093);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(135, problem6_0.a2038572265);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(6, problem6_0.a1303741660);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-75), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(79, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a261449517);
      assertFalse(problem6_0.cf);
      assertEquals(347, problem6_0.a1360708750);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "iE";
      stringArray0[1] = "h";
      stringArray0[2] = "f";
      stringArray0[3] = "h";
      stringArray0[4] = "f";
      stringArray0[6] = "iE";
      stringArray0[7] = "iJ";
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertTrue(problem6_0.cf);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      
      int[] intArray0 = new int[9];
      problem6_0.a1268933635 = 2;
      intArray0[2] = 347;
      problem6_0.calculateOutput("iG");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      
      problem6_0.a1360708750 = 347;
      problem6_0.calculateOutput("iC");
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals((-123), problem6_0.a1084416973);
      
      // SystemInUtil.addInputLine("");
      problem6_0.calculateOutput("iJ");
      assertEquals(10, problem6_0.a261449517);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(69, problem6_0.a1409102093);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a632192596);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(273, problem6_0.a2038572265);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(10, problem6_0.a508177696);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(172, problem6_0.a987727161);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(13, problem6_0.a311551481);
      assertFalse(problem6_0.cf);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(40, problem6_0.a1084416973);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a1303741660);
      
      String string0 = "iE";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("Pi/XeIHif~G0");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertTrue(problem6_0.cf);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.calculateOutput("iC");
      assertEquals(15, problem6_0.a109697372);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a632192596);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      
      problem6_0.a987727161 = 2;
      problem6_0.a402093159 = 16;
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iC");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(13, problem6_0.a508177696);
      assertEquals((-123), problem6_0.a1084416973);
      assertTrue(problem6_0.cf);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(46, problem6_0.a987727161);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      // SystemInUtil.addInputLine("f");
      intArray0[1] = 11;
      intArray0[2] = 347;
      // SystemInUtil.addInputLine("h");
      intArray0[4] = 50;
      intArray0[5] = (-113);
      intArray0[6] = 14;
      problem6_0.a1084416973 = (-183);
      String string0 = "iI";
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("iI");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertEquals(310, problem6_0.a1003030503);
      assertTrue(problem6_0.cf);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      
      // SystemInUtil.addInputLine("h");
      problem6_0.calculateOutput("iC");
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(5, problem6_0.a927237116);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(9, problem6_0.a261449517);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(2, problem6_0.a1268933635);
      
      problem6_0.calculateOutput("iE");
      assertEquals(23, problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(102, problem6_0.a1409102093);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(3, problem6_0.a1268933635);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(223, problem6_0.a987727161);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(16, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iD");
      assertEquals(23, problem6_0.a1084416973);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(10, problem6_0.a261449517);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(102, problem6_0.a1409102093);
      assertEquals(7, problem6_0.a1268933635);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(223, problem6_0.a987727161);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(10, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(6, problem6_0.a779607920);
      assertEquals(12, problem6_0.a794870881);
      assertEquals(262, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(12, problem6_0.a1844564130);
      assertEquals(6, problem6_0.a927237116);
      assertEquals(3, problem6_0.a1755002313);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(6, problem6_0.a846298027);
      assertEquals(16, problem6_0.a508177696);
      
      String string0 = "iA";
      problem6_0.calculateOutput("iE");
      assertEquals(4, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(2, problem6_0.a1669668007);
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-4534), problem6_0.a987727161);
      assertEquals(4, problem6_0.a927237116);
      assertEquals((-25645), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-5430), problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-17988), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(16, problem6_0.a508177696);
      
      problem6_0.calculateOutput("iA");
      assertEquals(4, problem6_0.a846298027);
      assertFalse(problem6_0.cf);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(8, problem6_0.a1669668007);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a261449517);
      assertEquals((-4534), problem6_0.a987727161);
      assertEquals(4, problem6_0.a927237116);
      assertEquals((-25645), problem6_0.a1084416973);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(8, problem6_0.a632192596);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(4, problem6_0.a779607920);
      assertEquals((-5430), problem6_0.a1409102093);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(10, problem6_0.a794870881);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(10, problem6_0.a1844564130);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(12, problem6_0.a1527522672);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(1, problem6_0.a1755002313);
      assertEquals((-17988), problem6_0.a2038572265);
      assertEquals(4, problem6_0.a1268933635);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(16, problem6_0.a730330384);
      assertEquals(16, problem6_0.a508177696);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("o+");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Problem6 problem6_0 = new Problem6();
      assertNotNull(problem6_0);
      assertTrue(problem6_0.cf);
      assertEquals(11, problem6_0.a794870881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(5, problem6_0.a1268933635);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals((-105), problem6_0.a402093159);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      
      problem6_0.calculateOutput("iC");
      assertEquals(11, problem6_0.a794870881);
      assertFalse(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(310, problem6_0.a1003030503);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals((-84), problem6_0.a402093159);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(2, problem6_0.a1268933635);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      
      problem6_0.a1279475243 = "iC";
      problem6_0.a1003030503 = 50;
      problem6_0.a402093159 = 11;
      problem6_0.calculateOutput("iG");
      assertEquals(11, problem6_0.a794870881);
      assertEquals(50, problem6_0.a1003030503);
      assertFalse(problem6_0.cf);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(8, problem6_0.a1678650881);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a402093159);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      problem6_0.calculateOutput("iG");
      assertEquals(11, problem6_0.a794870881);
      assertEquals(50, problem6_0.a1003030503);
      assertFalse(problem6_0.cf);
      assertEquals(9, problem6_0.a1678650881);
      assertEquals(7, problem6_0.a1694888134);
      assertEquals(9, problem6_0.a632192596);
      assertEquals(13, problem6_0.a508177696);
      assertEquals(5, problem6_0.a779607920);
      assertEquals(11, problem6_0.a141525412);
      assertEquals(8, problem6_0.a730439811);
      assertEquals(16, problem6_0.a659440330);
      assertEquals(2, problem6_0.a1755002313);
      assertEquals(50, problem6_0.a1491392295);
      assertEquals(201, problem6_0.a2038572265);
      assertEquals(9, problem6_0.a1669668007);
      assertEquals(36, problem6_0.a1175903853);
      assertEquals(236, problem6_0.a1944045722);
      assertEquals(11, problem6_0.a1844564130);
      assertEquals(11, problem6_0.a1052548391);
      assertEquals(16, problem6_0.a1265826928);
      assertEquals(14, problem6_0.a730330384);
      assertEquals(11, problem6_0.a402093159);
      assertEquals(141, problem6_0.a554869193);
      assertEquals(27, problem6_0.a1409102093);
      assertEquals(5, problem6_0.a846298027);
      assertEquals(2, problem6_0.a1303741660);
      assertEquals(90, problem6_0.a1453485468);
      assertEquals(8, problem6_0.a1268933635);
      assertEquals(347, problem6_0.a1360708750);
      assertEquals(6, problem6_0.a2118660775);
      assertEquals(14, problem6_0.a1248854190);
      assertEquals((-123), problem6_0.a1084416973);
      assertEquals(15, problem6_0.a109697372);
      assertEquals(46, problem6_0.a987727161);
      assertEquals(13, problem6_0.a311551481);
      assertEquals(17, problem6_0.a1527522672);
      assertEquals(9, problem6_0.a261449517);
      assertEquals(5, problem6_0.a927237116);
      
      // Undeclared exception!
      try { 
        problem6_0.calculateOutput("ou");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Current state has no transition for this input!
         //
         // verifyException("Problem6", e);
      }
  }
}
